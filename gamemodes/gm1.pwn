/** ====================================
	San Andreas Multiplayer Gamemode #1

	@author Germán D. Schneck <german.schneck@gmail.com>
	@license Creative Common
	@copyright 2010 (Edited: 2019)
    ==================================== */

// - Includes
#include <a_samp>
#include <a_players>
#include <a_vehicles>
#include <a_npc>
#include <dini>
#include <core>
#include <time>
#include <file>
#include <morphinc>
#include <iPR>
#include <time>
#include <utils>
#include <progress>
#include <audio>
#include <streamer>
AntiDeAMX()
{
   new a[][] =
   {
      "Unarmed (Fist)",
      "Brass K"
   };
   #pragma unused a
}
static Equipo[MAX_PLAYERS];
static pmodelovehiculo[MAX_PLAYERS];
static pidvehiculo[MAX_PLAYERS];

// - Pragmas
#pragma tabsize 0

// - Definiciones
#define SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) \
SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define StopPlayerHoldingObject(%1) RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define IsPlayerHoldingObject(%1) IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define dcmd(%1,%2,%3) \
							if ((strcmp((%3)[1], #%1, true, \
								(%2)) == 0) && ((((%3)[(%2) + 1] == 0) && \
					(dcmd_%1(playerid, "")))||(((%3)[(%2) + 1] == 32) &&  \
									(dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1

// * Colores
#define BLANCO 0xFFFFFFFF
#define CELESTE 0x00BBFFFF
#define ROSA 0xFF8DFFFF
#define AMARILLO 0xFFFF51FF
#define AZUL 0x4666FFFF
#define VIOLETA 0xA084FFFF
#define VERDE 0x55C800FF
#define MARRON 0xC28900FF
#define OLIVO 0xBFFF00FF
#define ROJO 0xFF0000FF
#define NARANJA 0xFF8D00FF
#define GRIS 0x9C9C9CFF
#define SINCOLOR 0xFFFFFF00
#define FLUOR 0x97FF00FF
#define ROJIZO 0xFF8282AA
#define AZULCLARO 0x33CCFFAA
#define VERDECLARO 0x9ACD32AA
#define PURPURA 0xC2A2DAAA
#define CAZULV 0x4E76B1FF
#define CROJOV  0xF40B74FF


// * Colores Especiales
#define DORADO 0xD49E00FF
#define ROJOCREMA 0xCE6062FF
#define PURPURASUAVE 0x817DC5FF
#define VIOLETAFUERTE 0x8100B4FF
#define MARRONADO 0x817870FF
#define FLUORESENTE 0x81FF0CFF
#define ROJOFUERTE 0xFF0000FF
#define AZULFUERTE 0x0000FFFF
#define VERDEFUERTE 0x00FF00FF
#define CELESTEFUERTE 0x00FFFFFF

// - Dialogs
#define Registro 			0
#define Logueo 	 			1
#define TRol  	 			2
#define TRol2    			3
#define TRol3    			4
#define TRol4    			5
#define TRol5    			6
#define TRol6    			7
#define TRol7    			8
#define TRol8    			9
#define TRol9    			10
#define DMulta              11
#define Renta       		22
#define Menu        		23
#define Bebidas             24
#define Equipar             25
#define Vestimenta    		26
#define Asensor     		27
#define Compras     		28
#define Documentos  		29
#define Creditos    		30
#define Armas       		31
#define Terminos      		32
#define Mercado     		33
#define Gimnasio    		34
#define Licencias   		35
#define Idiomas     		36
#define Musica      		37
#define Renta2  			38
#define CAdrenalina 		39
#define CSkinYakuza 		40
#define CSkinCorleone  		41
#define TPorno          	42
#define TCPorno         	43
#define TTPorno         	44
#define OMecanico           45
#define Tienda              46
#define MArmas              47
#define OAuto	            48
#define OPropiedad          49
#define ONegocio            50
#define OGanzua             51
#define VPanel              52
#define VLuces              53
#define VCapo               54
#define VPuertas            55
#define VMaletero           56
#define MenuTuning          57
#define OGuarda             58
#define OMulta              59
#define OLive               60
#define DialogNCo1    		61
#define DialogNCo2 			62
#define DialogNCo3 			63
#define DialogNCo4 			64
#define pInfo               65
#define CLlamada            66
#define MenuTuning1         67
#define MenuTuning2         68
#define MenuTuning3         69
#define MenuTuning4         70
#define MenuTuning5         71
#define MenuTuning6         72
#define MenuTuning7         73
#define MenuTuning8         74
#define MenuTuning9         75
#define MenuTuning10        76
#define MenuTuning11        77
#define MenuTuning12        78
#define MenuTuning13        79
#define AColores            80
#define TServicio           81
#define TServicio2          82
#define GPS                 82
#define GPS2                83
#define TRol10              94
#define DIALOG_TUTO1      	95
#define DIALOG_TUTO2        96
#define DIALOG_TUTO3        97
#define DIALOG_TUTO4        96
#define DIALOG_TUTO5        99
#define DIALOG_TUTO6        100
#define DIALOG_TUTO7        101
#define DIALOG_TUTO8      	102
#define Camaras             103

// * Bases de ID`s
#define PICKUP_VIDA 		1240
#define PICKUP_BLINDAJE     1242
#define PICKUP_Informacion	1239
#define PICKUP_PASTILLA     1241
#define PICKUP_POLICIA      1247
#define PICKUP_DINERO       1274
#define PICKUP_FLECHA       1318

#define MAPICON_AEREO       5
#define MAPICON_AMMU        6
#define MAPICON_PORT        9
#define MAPICON_BURGER      10
#define MAPICON_FIRE        20
#define MAPICON_HOSPITAL    21
#define MAPICON_ILEGAL      23
#define MAPICON_CASINO      25
#define MAPICON_REPAIR      27
#define MAPICON_POLICE      30
#define MAPICON_BUSSINE     52
#define MAPICON_SPRAY       63

#define INT_AVIONPRIVADO    1
#define INT_AMMUNATION      1
#define INT_HOTEL           15
#define INT_FACTORY         1
#define INT_BINCO           15
#define INT_DIDIER          14
#define INT_DISCO           17
#define INT_BAR             11
#define INT_RESTAURANT      4
#define INT_BURGERSHOT      10
#define INT_AYUNTAMIENTO    3
#define INT_GANTOM          5
#define INT_MADDDOG         5
#define INT_JOHNSON         3
#define INT_CRACKFACTORY    2
#define INT_PORNROOM        3
#define INT_RESTAURANTLC    1
#define INT_CIVILDEP        10
#define INT_LSPDHQ          6
#define INT_UNIVERSITY      18

#define GUN_OFF             0
#define GUN_PU�OAMERICANO   1
#define GUN_PORRA           3
#define GUN_KNIFE           4
#define GUN_FLOWERS         14
#define GUN_SHOTGUN         15
#define GUN_GRANADA         16
#define GUN_SMOKE           16
#define GUN_MOLOTOV         18
#define GUN_PISTOL          22
#define GUN_CDPISTOL        23
#define GUN_DESERT          24
#define GUN_AUTOSHOTGUN     27
#define GUN_UZI             28
#define GUN_MP5             29
#define GUN_AK47            30
#define GUN_M4              31
#define GUN_SNIPER          34
#define GUN_SPRAY           41
#define GUN_EXTINTOR        42
#define GUN_CAMERA          43
#define GUN_PARACHUTE       56

// - Facciones
#define LSPD 1
#define LSMD 2
#define TAXI 3
#define PRES 4
#define LSTV 5
#define LEON 6
#define MECA 7
#define FBI 8
#define LICE 9
#define YAKU 10
#define TRAF 11
#define NFS  12
#define BOMB 13
#define AVION 14

// - Definiciones Generales
#define MAX_CONOS 			50
#define MAX_ALARMAS   		200
#define MAX_BARRICADAS 		50
#define MAX_PARADA 			50
#define CANTIDAD 			700
#define TOTAL_VEH 			999
#define VV_DESDE  			250
#define CONGELADO           0
#define DESCONGELADO        1
#define FIRE_POS_MARKER 60
#define TituloT Tutorial[0][i]
#define Linea1T Tutorial[1][i]
#define Linea2T Tutorial[2][i]
#define Linea3T Tutorial[3][i]

// - Forwards
forward LimpiarChat(playerid, lines);
forward CrearCuenta(playerid);
forward CargarDatos(playerid);
forward ActualizarCuenta(playerid);
forward RangoCercano(Float:radi, playerid, rango[],col1,col2,col3,col4,col5);
forward RangoCercanoS(Float:radi, playerid, targetid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward FinalDelTutorial(playerid);
forward EsperandoTest(playerid);
forward VolveraKickear(playerid);
forward VolveraBanear(playerid);
forward ActualizarEstrellas(playerid);
forward QuitarEstado(playerid);
forward ActualizarSpawns(playerid);
forward BackupClear(playerid, fueraderefuerzos);
forward MotorOn(playerid);
forward ApagarAlarma(vehicleid, id, playerid);
forward RConteo(playerid);
forward RConteo2(playerid);
forward ActualizarConteo(playerid);
forward split(const strsrc[], strdest[][], delimiter);
forward IsAtDealership(playerid);
forward EsUnVehiculoVenta(vehicleid);
forward CargarLuchas(playerid);
forward OcultarDNI(playerid);
forward PosCasinos(playerid);
forward Lotto(number);
forward ProcesoCasino(playerid, number);
forward Proceso1(playerid);
forward Proceso2(playerid);
forward Proceso3(playerid);
forward Proceso4(playerid);
forward TiempoFabricado(playerid);
forward TDrogaRosa(playerid);
forward TDrogaRoja(playerid);
forward TDrogaVerde(playerid);
forward TDrogaCeleste(playerid);
forward TDrogaAmarilla(playerid);
forward TDrogaAzul(playerid);
forward TDrogaTermianda(playerid);
forward TerminarEfectoDroga(playerid);
forward TGLEON(playerid);
forward TGLSTV(playerid);
forward TGPLSPD(playerid);
forward TGLSPD(playerid);
forward TGAERO(playerid);
forward TGTAXI(playerid);
forward TGLSMD(playerid);
forward TGYAKU(playerid);
forward TGMECA(playerid);
forward TGBOMB(playerid);
forward ExplotarBomba(pbomb);
forward VehiculoCercano(p1);
forward Float:DistanciaEntreCarPer(c1,p2);
forward IsCarNearToPoint(carid, Float:radi, Float:x, Float:y, Float:z);
forward desactivarBomba(playerid, pbomb);
forward LoadCar();
forward Float:DistanciaDelPunto(playerid, Float:x1,Float:y1,Float:z1);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward OnPropUpdate();
forward PuenteVehiculo(playerid, carid);
forward DMatricula(playerid);
forward BoxTrain(playerid);
forward BoxTrain2(playerid);
forward BoxTrain3(playerid);
forward BoxTrain4(playerid);
forward KungTrain(playerid);
forward KungTrain2(playerid);
forward KungTrain3(playerid);
forward KungTrain4(playerid);
forward GrabTrain(playerid);
forward GrabTrain2(playerid);
forward GrabTrain3(playerid);
forward GrabTrain4(playerid);
forward KneeTrain(playerid);
forward KneeTrain2(playerid);
forward KneeTrain3(playerid);
forward KneeTrain4(playerid);
forward DefaultTrain(playerid);
forward DefaultTrain2(playerid);
forward DefaultTrain3(playerid);
forward DefaultTrain4(playerid);
forward LoadProperty();
forward DateProp(playerid);
forward CargandoMap(playerid);
forward CargarGas();
forward LoadSBizz();
forward LoadBizz();
forward AddsOn();
forward EsperaAnuncio();
forward ModCoche(playerid);
forward LoadMaletero();
forward SaveMaletero();
forward RemovePlayerWeapon(playerid, weaponid);
forward SafeResetPlayerWeapons(playerid);
forward SafeGivePlayerWeapon(playerid, idarma, ammo);
forward CargarFondos();
forward GuardarFondos();
forward UpdateTime();
forward VerTELEVISOR(playerid);
forward EstudioTelevision(playerid);
forward LoadComerciales();
forward SaveComerciales();
forward ClearComerciales(an);
forward IsAtGasStation(playerid);
forward Estudiando(playerid);
forward AutoBackup();
forward PayDay();
forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward GetClosestPlayer(p1);
forward EsUnBanco(playerid);
forward PosGPS(playerid);
forward ProcesandoRol(playerid);
forward OtherTimer();

// -= Sistema de Canales =-
forward MensajeAdmin(color, rango[]);
forward MensajeLSPD(color, rango[]);
forward MensajeLSMD(color, rango[]);
forward MensajeTAXI(color, rango[]);
forward MensajePRES(color, rango[]);
forward MensajeLSTV(color, rango[]);
forward MensajeLEON(color, rango[]);
forward MensajeMECA(color, rango[]);
forward MensajeFBI(color, rango[]);
forward MensajeTRAF(color, rango[]);
forward MensajeLICE(color, rango[]);
forward MensajeYAKU(color, rango[]);
forward MensajeNFS(color, rango[]);
forward MensajeBOMB(color, rango[]);
forward MensajeAVION(color, rango[]);
forward MensajePremium(color, rango[]);
forward MensajeGlobal(color, rango[]);
// * * * * * * * * * * * *

// -= Sistema de Logs =-
forward LAnuncios(rango[]);
forward LKick(rango[]);
forward LBans(rango[]);
forward LBanco(rango[]);
forward LPagos(rango[]);
forward LDudas(rango[]);
forward LReportes(rango[]);
forward LBugs(rango[]);
// * * * * * * * * * * *

// - Enumeradores
enum PlayerData
{
	Nivel,
	Admin,
	Premium,
	Sexo,
	Edad,
	Origen,
	Registrado,
	Faccion,
	Rango,
	Trabajo,
	Skin,
	Dinero,
	Banco,
	Experiencia,
	PuntosRol,
	Estrellas,
	Bloqueado,
	DNI,
	LVuelo,
	LArmas,
	LCoche,
	LBote,
	Telefono,
	CI,
	HeRentado,
	VRentado,
	HeRentado2,
	VRentado2,
	Tuto,
  	Lider,
  	Codificadores,
  	Sangre,
  	BSangre,
	Cancer,
	Observaciones,
	Esposado,
	Casa,
	Negocio,
	Coche,
	Posicion,
	SLucha,
	Saldo,
	Ingles,
	Italiano,
	Ruso,
	Chino,
	Japones,
	Suizo,
	Frances,
	Polaco,
	Latin,
	MP3,
	Loteria,
	Hambre,
	Cansancio,
	Higiene,
	Comodidad,
	Hidratacion,
	Inteligencia,
	EstadoFisico,
	Amigos,
	Apariencia,
    Diversion,
	Crack,
	Cervezas,
	Ganzuas,
	Materiales,
	Adrenalina,
	ATiempo,
	Servicios,
	Respawns,
	Sansiones,
	Kickeos,
	Baneos,
	Congelos,
	Descongelos,
	SkinsCambiados,
	IndiceCrack,
	Preservativos,
	Kit1,
	Kit2,
	Kit3,
	Caramelos,
	Cigarrillos,
	Interior,
	Asociado,
	IngLibro,
	ItaLibro,
	RusLibro,
	ChiLibro,
	JapLibro,
	SuiLibro,
	FraLibro,
	PolLibro,
	LatLibro,
	Identificador,
	ExpActual,
	MundoVirtual,
	Silenciado,
	Advertencias,
 	Canal,
 	Castigado,
 	TiempoCastigado,
 	Relog,
 	UPGuardada,
	ProcesoRol
};
new Informacion[MAX_PLAYERS][PlayerData];

enum conoInformacion
{
	conoCreated,
	Float:conoX,
	Float:conoY,
	Float:conoZ,
	conoObject,
}
new ConosInformacion[MAX_CONOS][conoInformacion];

enum barricadaInformacion
{
	barricadaCreada,
	Float:barX,
	Float:barY,
	Float:barZ,
	barObjects,
}
new barInformacion[MAX_CONOS][barricadaInformacion];

enum paradaInformacion
{
	barricadaCreada,
	Float:parX,
	Float:parY,
	Float:parZ,
	parObjects,
}
new parInformacion[MAX_CONOS][paradaInformacion];

enum cInfo
{
	cModel,
	Float:cLocationx,
	Float:cLocationy,
	Float:cLocationz,
	Float:cAngle,
	cColorOne,
	cColorTwo,
	cNameD[24],
 	cValue,
	cMod1,
	cMod2,
	cMod3,
	cPaint,
	cVenta,
	cLock,
	cTComprado,
	cGPS,
	cPaintJob,
	cNitro,
	cLlantas,
	cAleron,
	cParachoDelan,
	cParachoTrase,
	cHidraulica,
	cTecho,
	cEscape,
	cParachoDesco,
	cEmbellecedor,
	cEmbellecedor2,
};
new CarInfo[TOTAL_VEH][cInfo];

enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hHealthx,
	hHealthy,
	hHealthz,
	hArmourx,
	hArmoury,
	hArmourz,
	hOwner[MAX_PLAYER_NAME],
	hDiscription[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hArm,
	hInt,
	hLock,
	hOwned,
	hRooms,
	hRent,
	hRentabil,
	hTakings,
	hVec,
	hVcol1,
	hVcol2,
	hDate,
	hLevel,
	hWorld,
	EnVenta,
};
new HouseInfo[100][hInfo];
new HouseEntered[MAX_PLAYERS];

enum bInfo
{
    bOwned,
	bOwner[64],
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
	bProducts,
	bMaxProducts,
	bPriceProd,
	bVirtualWorld,
	EnVenta,
};
new BizzInfo[25][bInfo];

enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMaxProducts,
	sbPriceProd,
	EnVenta,
};
new SBizzInfo[14][sbInfo];

enum gInfo
{
    gVenta,
	gPropietario[64],
	gMensaje[256],
	Float:gPuntoX,
	Float:gPuntoY,
	Float:gPuntoZ,
	Float:CargaX,
	Float:CargaY,
	Float:CargaZ,
	gPrecioGas,
	gCajaFuerte,
	gGasolina,
	gMaxGasolina,
	gPrecioComGas,
	gNivel,
	gPrecioLocal,
	EnVenta,
};
new GasInfo[3][gInfo];

enum cComerciales
{
	cNumero,
	cBancaria,
	cTitulo[256],
	cTexto[256],
	cDatos[256],
};
new ComerInfo[5][cComerciales];

// - Variables
new EstaConectado[MAX_PLAYERS];
new ProcesandoRegistro[MAX_PLAYERS];
new ProcesoRegistracion[MAX_PLAYERS];
new Amplificador[MAX_PLAYERS];
new autos;
new objetos;
new pickups;
new oocbloqueado = 0;
new Mascara[MAX_PLAYERS];
new ServicioAdmin[MAX_PLAYERS];
new NoKick[MAX_PLAYERS];
new NoBan[MAX_PLAYERS];
new Refuerzos[MAX_PLAYERS];
new EnServicio[MAX_PLAYERS];
new CuentaAlarma[MAX_ALARMAS];
new engine, lights, alarm, doors, bonnet, boot, objective;
new PrendiendoM[MAX_PLAYERS];
new Rentable[MAX_VEHICLES];
new Rentado[MAX_VEHICLES];
new BotIdentificado[MAX_PLAYERS];
new Hospitalizado[MAX_PLAYERS];
new Float:TelePos[MAX_PLAYERS][6];
new Conteo[MAX_PLAYERS];
new EstaConteando[MAX_PLAYERS];
new ServicioLSMD[MAX_PLAYERS];
new Arrestado[MAX_PLAYERS];
new EnLeccion[MAX_PLAYERS];
new	Reproduciendo[MAX_PLAYERS];
new Jackpot = 0;
new NumeroAzar[MAX_PLAYERS];
new ProcesoFabricacion[MAX_PLAYERS];
new InicioYFinialCrack[MAX_PLAYERS];
new Pickup1;
new Pickup2;
new Pickup3;
new Pickup4;
new Pickup5;
new Pickup6;
new Pickup7;
new EstaDrogado[MAX_PLAYERS];
new EstaDrogadoConAdrenalina[MAX_PLAYERS];
new Servidor;
new glob0[500];
new glob7D0[500];
new globFA0[500];
new glob1770[500];
new glob1F40[500];
new glob2710[500];
new glob2EE0[500];
new glob36B0[500];
new glob3E80[500];
new glob4650[500];
new glob4E20[500];
new glob55F0[500];
new glob5DC0[500];
new glob6590[500];
new glob6D60[500];
new glob7530[500];
new glob7D00[500];
new glob84D0[500];
new glob8CA0[500];
new glob9470[500];
new glob9C40[500];
new globA410[500];
new globABE0[500];
new globB3B0[500];
new globBB80[500];
new globC350[500];
new globCB20[500];
new globD2F0[500][7];
new ConexionEntrante[MAX_PLAYERS];
new GLEON;
new GLSTV;
new GLSPD;
new GMECA;
new GLSMD;
new GYAKU;
new GTAXI;
new GPLSPD1;
new GPLSPD2;
new GAERO1;
new GAERO2;
new GBOMB;
new GPMECA;
new EstaConTraje[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new Autorizado[MAX_PLAYERS];
new EstaProtegido[MAX_PLAYERS];
new IDCarBomba[MAX_PLAYERS];
new PlayerBomba[MAX_PLAYERS];
new ObjetoBomba[MAX_PLAYERS];
new Float:PosBomba[MAX_PLAYERS][3];
new IDesacBomba[MAX_PLAYERS];
new IDesacBombaV[MAX_PLAYERS];
new OfertaCoche[MAX_PLAYERS];
new PrecioCoche[MAX_PLAYERS];
new IDcCoche[MAX_PLAYERS];
new CarPuenteado[MAX_VEHICLES];
new CarMatricula[MAX_VEHICLES];
new matriculainit = 1111;
new gPlayerUsingLoopingAnim[MAX_PLAYERS];
new DobleInterior[MAX_PLAYERS];
new SpawnChange[MAX_PLAYERS];
new IDpComprar[MAX_PLAYERS];
new PrecioPComprar[MAX_PLAYERS];
new OfertaPComprar[MAX_PLAYERS];
new DarPintura[MAX_PLAYERS];
new IDnComprar[MAX_PLAYERS];
new PrecioNComprar[MAX_PLAYERS];
new OfertaNComprar[MAX_PLAYERS];
new GanzuaOferta[MAX_PLAYERS];
new GanzuaPrecio[MAX_PLAYERS];
new GanzuaCantidad[MAX_PLAYERS];
new TimeEsperaAd = 60;
new adds = 1;
new O_FIRE_1;
new O_FIRE_2;
new O_FIRE_3;
new O_FIRE_4;
new O_FIRE_5;
new O_FIRE_6;
new O_FIRE_7;
new O_FIRE_8;
new O_FIRE_9;
new O_FIRE_10;
new PlayerLocalizando[MAX_PLAYERS];
new PlayerLocalizado[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new	IDArmaMaletero[MAX_VEHICLES][5];
new	MunicionMaletero[MAX_VEHICLES][5];
new	Float:VidaChalecoMaletero[MAX_VEHICLES];
new CajaFuerteYKZ = 0;
new CajaFuerteLCN = 0;
new Security = 0;
new CajaGobierno = 0;
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new Text:txtTimeDisp;
new hour, minute;
new timestr[32];
new Float:CamaraPosX;
new Float:CamaraPosY;
new Float:CamaraPosZ;
new CameraInt;
new CameraVW;
new Float:PlayerTV_X[MAX_PLAYERS];
new Float:PlayerTV_Y[MAX_PLAYERS];
new Float:PlayerTV_Z[MAX_PLAYERS];
new PlayerTV_Int[MAX_PLAYERS];
new PlayerTV_VW[MAX_PLAYERS];
new ViendoTele[MAX_PLAYERS];
new TelevisorON = 0;
new realchat = 1;
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new numerocomer[MAX_PLAYERS];
new IdiomaEstudiado[MAX_PLAYERS];
new Venda[MAX_PLAYERS];
new Cuerda[MAX_PLAYERS];
new EstaAtado[MAX_PLAYERS];
new EstaVendado[MAX_PLAYERS];
new backup;
new gSpentCash[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new Linea[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new Profesores = 0;
new LineaTaxi = 1;
new LineaCNN = 1;
new LineaNFS = 1;
new LineaMeca = 1;
new LineaFBI = 1;
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new Text:Tutorial[4][MAX_PLAYERS];
new TiempoAuxiliar;
new EstaConCamara[MAX_PLAYERS];
new othtimer;
new Espiando[MAX_PLAYERS];

// * TextDraws

new Text:CF_FONDO;
new Text:CF_TITULO;
new Text:CF_TEXTO[MAX_PLAYERS];

new Text:CO_FONDO;
new Text:CO_TITULO;
new Text:CO_TEXTO[MAX_PLAYERS];

new Text:R_Fondo;
new Text:R_Logo;
new Text:R_SEXO[MAX_PLAYERS];
new Text:R_EDAD[MAX_PLAYERS];
new Text:R_ORIGEN[MAX_PLAYERS];
new Text:R_STAR;

new Text:Nivel1[MAX_PLAYERS];

new Text:DNI_FONDO;
new Text:DNI_NAME[MAX_PLAYERS];

new Text:Logo1;
new Text:Logo2;

new Text:Conteo0;
new Text:Conteo1;
new Text:Conteo2;
new Text:Conteo3[MAX_PLAYERS];

new Text:E_FONDO;
new Text:E_NOMBRE[MAX_PLAYERS];
new Text:E_TEXTO1[MAX_PLAYERS];
new Text:E_TEXTO2[MAX_PLAYERS];
new Text:E_AVISO[MAX_PLAYERS];

new Text:DrogaRosa;
new Text:DrogaRoja;
new Text:DrogaVerde;
new Text:DrogaCeleste;
new Text:DrogaAmarilla;
new Text:DrogaAzul;
new Text:EAdrenalina;

new Text:M_FONDO;
new Text:M_IDE;
new Text:M_TEXTO[MAX_PLAYERS];

// -= Nombres =-
new VehicleName[212][] = {
"Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel", "Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana",
"Infernus", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam", "Esperanto", "Taxi", "Washington", "Bobcat",
"Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator", "Bus", "Rhino", "Barracks", "Hotknife",
"Trailer 1", "Previon", "Coach", "Cabbie", "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral", "Squalo",
"Seasparrow", "Pizzaboy", "Tram", "Trailer 2", "Turismo", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair",
"Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic", "Sanchez", "Sparrow",
"Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Sabre", "Rustler", "ZR-350", "Walton", "Regina", "Comet", "BMX", "Burrito",
"Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper", "Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring",
"Sandking", "Blista Compact", "Police Maverick", "Boxvillde", "Benson", "Mesa", "RC Goblin", "Hotring Racer A", "Hotring Racer B",
"Bloodring Banger", "Rancher", "Super GT", "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster","Stunt",  "Tanker",
"Roadtrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
"Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer", "Remington", "Slamvan", "Blade", "Freight", "Streak",
"Vortex", "Vincent", "Bullet", "Clover", "Sadler", "Firetruck LA", "Hustler", "Intruder", "Primo", "Cargobob", "Tampa", "Sunrise", "Merit",
"Utility", "Nevada", "Yosemite", "Windsor", "Monster A", "Monster B", "Uranus", "Jester", "Sultan", "Stratum", "Elegy", "Raindance",
"RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito", "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper", "Broadway",
"Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400", "News Van", "Tug", "Trailer 3", "Emperor", "Wayfarer", "Euros", "Hotdog",
"Club", "Freight Carriage", "Trailer 4", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car (LSPD)", "Police Car (SFPD)",
"Police Car (LVPD)", "Police Ranger", "Picador", "S.W.A.T", "Alpha", "Phoenix", "Glendale", "Sadler", "Luggage Trailer A",
"Luggage Trailer B", "Stairs", "Boxville", "Tiller", "Utility Trailer" };

// - CallBacks
public OnGameModeExit()
{
	KillTimer(Servidor);
	KillTimer(backup);
	KillTimer(TiempoAuxiliar);
	KillTimer(othtimer);
	return 0;
}

public OnGameModeInit()
{
	AntiDeAMX();
	SetNameTagDrawDistance(10);
	UsePlayerPedAnims();
	ManualVehicleEngineAndLights();
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	SetGameModeText("VP:RP Espa�ol");
	SendRconCommand("hostname ~ Vidas Paralelas RP - La Revolucion SAMP ~");
	SendRconCommand("mapname [LS ~ v1.5 Beta]");
	SendRconCommand("weburl http://127.0.0.1");
	Audio_SetPack("default_pack");
	CargarGas();
	LoadSBizz();
	LoadBizz();
	LoadProperty();
	LoadCar();
	CargarFondos();
	UpdateTime();
	LoadComerciales();
	 // * Timers
	SetTimer("UpdateTime",3600000, true);
	backup = SetTimer("AutoBackup", 15000, true);
	othtimer = SetTimer("OtherTimer", 1000, 1);

	// -= Garages y Puertas e Objetos con Variables =-
	GLEON =	CreateObject(980,1245.53173828,-767.15856934,93.84787750,0.00000000,0.00000000,0.00000000); //Corleonecerrado
	GLSTV = CreateObject(980,778.07592773,-1330.68212891,15.32218361,0.00000000,0.00000000,0.00000000); //lstvcerrado
	GPLSPD1 =CreateObject(3089,244.91914368,72.43932343,1003.76940918,0.00000000,359.75000000,0.00000000); //lspdcerrado3
	GLSPD = CreateObject(2990,1547.38952637,-1627.45446777,16.29679298,0.00000000,0.00000000,270.24633789); //lspdcerrado
	GAERO1 = CreateObject(988,1958.80297852,-2189.60522461,13.59685898,0.00000000,0.00000000,180.00000000); //aeropuertacerrado1
	GAERO2 = CreateObject(988,1964.18920898,-2189.91796875,13.59687424,0.00000000,0.00000000,179.99450684); //aeropuertacerrada2
	GTAXI = CreateObject(980,1811.55725098,-1890.03552246,15.18059349,0.00000000,0.00000000,270.00000000); //taxicerrado
	GLSMD = CreateObject(980,1141.32751465,-1292.51928711,15.35996437,0.00000000,0.00000000,0.00000000); //lsmdcerrado
	GYAKU = CreateObject(971,321.48580933,-1188.23852539,77.39393616,0.00000000,0.00000000,39.75000000); //yakuzacerrada
	GPLSPD2 = CreateObject(3089,247.89778137,72.50014496,1003.76940918,0.00000000,0.00000000,182.00000000); //lspdcerrado4
	GMECA = CreateObject(980,2424.22802734,-2089.19458008,15.32026672,0.00000000,0.00000000,90.00000000); //mecanicoscerrado
	GPMECA = CreateObject(3055,2467.14086914,-2102.20117188,14.72731781,0.00000000,0.00000000,0.00000000);
	GBOMB = CreateObject(2990,1283.96740723,-1652.19982910,16.46085548,0.00000000,0.00000000,89.99584961); //bomberoscerrado

	// -= 3DLabels =-
	Create3DTextLabel("[Tienda 24/7]",0xEEEE88FF,1352.4213,-1758.7109,13.5078+0.75,20.0,0,1);
	Create3DTextLabel("[Tienda 24/7]",0xEEEE88FF,1833.1284,-1842.5874,13.5781+0.75,20.0,0,1);
	Create3DTextLabel("[Tienda 24/7]",0xEEEE88FF,1315.5564,-898.5164,39.5781+0.75,20.0,0,1);
	Create3DTextLabel("[Tienda de Ropa]",0xEEEE88FF,1162.3873,-1343.8269,26.6230+0.75,20.0,0,1);
	Create3DTextLabel("[Mansion Corleone]",0xEEEE88FF,1298.4131,-798.9086,84.1406+0.75,20.0,0,1);
	Create3DTextLabel("[Mansion Corleone]",0xEEEE88FF,1258.2306,-785.4032,92.0302+0.75,20.0,0,1);
	Create3DTextLabel("[Departamento de Policia]",0xEEEE88FF,1555.0449,-1675.6025,16.1953+0.75,20.0,0,1);
	Create3DTextLabel("[Departamento de Policia]",0xEEEE88FF,1564.8254,-1666.3079,28.3956+0.75,20.0,0,1);
	Create3DTextLabel("[Departamento de Policia]",0xEEEE88FF,1568.6674,-1690.6655,5.8906+0.75,20.0,0,1);
	Create3DTextLabel("[Ayuntamiento]",0xEEEE88FF,1481.0988,-1771.4312,18.7958+0.75,20.0,0,1);
	Create3DTextLabel("[Ayuntamiento]",0xEEEE88FF,1436.8595,-1790.3291,35.8175+0.75,20.0,0,1);
	Create3DTextLabel("[Discoteca]",0xEEEE88FF,1836.3481,-1682.4355,13.3517+0.75,20.0,0,1);
	Create3DTextLabel("[The Green Bottles]",0xEEEE88FF,2309.9385,-1643.6752,14.8270+0.75,20.0,0,1);
	Create3DTextLabel("[CNN San Andreas]",0xEEEE88FF,733.3624,-1348.0914,13.5105+0.75,20.0,0,1);
	Create3DTextLabel("[CNN San Andreas]",0xEEEE88FF,648.4557,-1356.7407,13.5670+0.75,20.0,0,1);
	Create3DTextLabel("[SexShop]",0xEEEE88FF,953.9430,-1336.3042,13.5389+0.75,20.0,0,1);
	Create3DTextLabel("[Cluckin Bell]",0xEEEE88FF,928.4583,-1353.0142,13.3438+0.75,20.0,0,1);
	Create3DTextLabel("[Burger Shot]",0xEEEE88FF,810.9510,-1616.2068,13.5469+0.75,20.0,0,1);
	Create3DTextLabel("[Well Pizza Stack]",0xEEEE88FF,2104.3845,-1806.4637,13.5547+0.75,20.0,0,1);
	Create3DTextLabel("[Armeria]",0xEEEE88FF,1368.0337,-1279.7286,13.5469+0.75,20.0,0,1);
	Create3DTextLabel("[Ganton GIM]",0xEEEE88FF,2229.2268,-1721.9786,13.5680+0.75,20.0,0,1);
	Create3DTextLabel("[FBI]",0xEEEE88FF,1419.6393,-1553.6603,13.5616+0.75,20.0,0,1);
	Create3DTextLabel("[FBI]",0xEEEE88FF,2488.1157,2397.3484,4.2109+0.75,20.0,0,1);
	Create3DTextLabel("[Casino Japones]",0xEEEE88FF,1022.4944,-1121.7538,23.8718+0.75,20.0,0,1);
	Create3DTextLabel("[Mercado Negro]",0xEEEE88FF,1028.5026,-1104.3176,23.8281+0.75,20.0,0,1);
	Create3DTextLabel("[Banco]",0xEEEE88FF,1497.1619,-1584.3033,13.8838+0.75,20.0,0,1);
	Create3DTextLabel("[Departamento de Licencias]",0xEEEE88FF,1772.9438,-1655.1816,14.4278+0.75,20.0,0,1);
	Create3DTextLabel("[Universidad Municipal]",0xEEEE88FF,1162.3873,-1343.8269,26.6230+0.75,20.0,0,1);
	Create3DTextLabel("[Fabrica de Crack]",0xEEEE88FF,2612.2029,-1397.5227,35.0267+0.75,20.0,0,1);
	Create3DTextLabel("[Hospital]",0xEEEE88FF,1172.6755,-1323.4456,15.4022+0.75,20.0,0,1);
	Create3DTextLabel("[Laboratorio]",0xEEEE88FF,364.6920,186.1605,1019.9844+0.75,20.0,0,1);
	Create3DTextLabel("[Laboratorio]",0xEEEE88FF,1144.3009,-1320.8773,13.5951+0.75,20.0,0,1);
	Create3DTextLabel("[Laboratorio]",0xEEEE88FF,1161.7417,-1329.5791,31.4940+0.75,20.0,0,1);
	Create3DTextLabel("[Yakuza]",0xEEEE88FF,300.2188,-1154.4270,81.3907+0.75,20.0,0,1);
	Create3DTextLabel("[Departamento de Transporte Publico]",0xEEEE88FF,1759.1277,-1894.0408,13.5558+0.75,20.0,0,1);
	Create3DTextLabel("[Yakuza]",0xEEEE88FF,300.2188,-1154.4270,81.3907+0.75,20.0,0,1);

	// -= Pickups =-
	AddStaticPickup(1318,23,1352.4213,-1758.7109,13.5078); 	// [ENTRADA] 24/7
	AddStaticPickup(1318,23,1833.1284,-1842.5874,13.5781);	// [ENTRADA] 24/7 [2]
	AddStaticPickup(1318,23,1315.5564,-898.5164,39.5781); 	// [ENTRADA] 24/7 [3]
	AddStaticPickup(1318,23,2244.4966,-1665.0289,15.4766); 	// [ENTRADA] Tienda de Ropa
	AddStaticPickup(1318,23,1298.4131,-798.9086,84.1406); 	// [ENTRADA] Familia Corleone [Principal]
	AddStaticPickup(1318,23,1258.2306,-785.4032,92.0302); 	// [ENTRADA] Familia Corleone [Trasera]
 	AddStaticPickup(1318,23,1555.0449,-1675.6025,16.1953); 	// [ENTRADA] LSPD [Principal]
	AddStaticPickup(1318,23,1564.8254,-1666.3079,28.3956); 	// [ENTRADA] LSPD [Azotea]
	AddStaticPickup(1318,23,1568.6674,-1690.6655,5.8906); 	// [ENTRADA] LSPD [Garage]
	AddStaticPickup(1318,23,1481.0988,-1771.4312,18.7958); 	// [ENTRADA] Ayuntamiento [Principal]
	AddStaticPickup(1318,23,1436.8595,-1790.3291,35.8175); 	// [ENTRADA] Ayuntamiento [Azotea]
	AddStaticPickup(1318,23,1836.3481,-1682.4355,13.3517); 	// [ENTRADA] Discoteca
	AddStaticPickup(1318,23,2309.9385,-1643.6752,14.8270); 	// [ENTRADA] Bar The Green Bottles
	AddStaticPickup(1318,23,733.3624,-1348.0914,13.5105); 	// [ENTRADA] LSTV [Garage]
	AddStaticPickup(1318,23,648.4557,-1356.7407,13.5670); 	// [ENTRADA] LSTV [Principal]
	AddStaticPickup(1318,23,953.9430,-1336.3042,13.5389); 	// [ENTRADA] Tienda Porno
	AddStaticPickup(1318,23,928.4583,-1353.0142,13.3438); 	// [ENTRADA] Cluckin Bell [1]
	AddStaticPickup(1318,23,810.9510,-1616.2068,13.5469); 	// [ENTRADA] Burger Shot [1]
	AddStaticPickup(1318,23,2104.3845,-1806.4637,13.5547); 	// [ENTRADA] Pizza Stack
	AddStaticPickup(1318,23,1368.0337,-1279.7286,13.5469); 	// [ENTRADA] Ammu - Nation
	AddStaticPickup(1318,23,2229.2268,-1721.9786,13.5680); 	// [ENTRADA] Gantom Gim
	AddStaticPickup(1318,23,1419.6393,-1553.6603,13.5616); 	// [ENTRADA] FBI
	AddStaticPickup(1318,23,2488.1157,2397.3484,4.2109); 	// [ENTRADA] FBI [Garage]
	AddStaticPickup(1318,23,1022.4944,-1121.7538,23.8718); 	// [ENTRADA] Casino
	AddStaticPickup(1318,23,1028.5026,-1104.3176,23.8281); 	// [ENTRADA] Mercado Negro
	AddStaticPickup(1318,23,1497.1619,-1584.3033,13.8838); 	// [ENTRADA] Banco
	AddStaticPickup(1318,23,1772.9438,-1655.1816,14.4278); 	// [ENTRADA] Licencieros
	AddStaticPickup(1318,23,-2030.0032,-118.9545,1035.1719);// [ENTRADA] Licencieros 2
	AddStaticPickup(1318,23,2612.2029,-1397.5227,35.0267); 	// [ENTRADA] Crack Place
	AddStaticPickup(1318,23,1172.6755,-1323.4456,15.4022);  // [ENTRADA] Hospital
	AddStaticPickup(1318,23,364.6920,186.1605,1019.9844);   // [ENTRADA] Laboratorio
	AddStaticPickup(1318,23,1144.3009,-1320.8773,13.5951);  // [ENTRADA] Garage - Laboratorio
	AddStaticPickup(1318,23,1161.7417,-1329.5791,31.4940);  // [ENTRADA] Azotea - Laboratorio
    AddStaticPickup(1318,23,300.2188,-1154.4270,81.3907); 	// [ENTRADA] Yakuza
	AddStaticPickup(1318,23,1759.1277,-1894.0408,13.5558);	// [ENTRADA] HQ Taxi 1
	AddStaticPickup(1318,23,2537.5044,-1297.3079,1054.6406);// [ENTRADA] HQ Taxi 2
	AddStaticPickup(1318,23,1797.9889,-1578.7135,14.0900); 	// [ENTRADA] Departamento de Licencias
	AddStaticPickup(1318,23,1263.3521,-1676.1047,13.5469); 	// [ENTRADA] Bomberos [Bajo]
	AddStaticPickup(1318,23,1213.4414,-1670.0020,27.3676); 	// [ENTRADA] Bomberos [Arriba]

	AddStaticPickup(1318,23,2018.5682,1017.8448,996.8750); 	// [SALIDA] Casino
	AddStaticPickup(1318,23,1489.3328,-1721.7786,8.2106); 	// [SALIDA] Mercado Negro
	AddStaticPickup(1318,23,357.9872,216.7553,1008.3828); 	// [SALIDA] FBI
	AddStaticPickup(1318,23,367.7486,193.4661,1008.3828); 	// [SALIDA] FBI [Garage]
	AddStaticPickup(1318,23,-25.9507,-187.6105,1003.5469);  // [SALIDA] 24/7 [1]
	AddStaticPickup(1318,23,6.1464,-30.7665,1003.5494); 	// [SALIDA] 24/7 [2]
	AddStaticPickup(1318,23,-30.9129,-91.4246,1003.5469); 	// [SALIDA] 24/7 [3]
	AddStaticPickup(1318,23,285.4373,-41.0108,1001.5156); 	// [SALIDA] Ammu - Nation
	AddStaticPickup(1318,23,-100.4243,-24.5154,1000.7188); 	// [SALIDA] Tienda Porno
	AddStaticPickup(1318,23,493.4309,-24.3261,1000.6797); 	// [SALIDA] Discoteca
	AddStaticPickup(1318,23,501.9595,-68.0340,998.7578); 	// [SALIDA] Bar The Green Bottles
	AddStaticPickup(1318,23,363.3454,-74.9236,1001.5078); 	// [SALIDA] Burger SHot
	AddStaticPickup(1318,23,365.0107,-10.9408,1001.8516); 	// [SALIDA] Cluckin Bell
	AddStaticPickup(1318,23,372.2942,-133.1127,1001.4922); 	// [SALIDA] Well pizza
	AddStaticPickup(1318,23,389.6705,173.1553,1008.3828); 	// [SALIDA] Ayuntamiento
	AddStaticPickup(1318,23,371.0816,160.9684,1025.7891); 	// [SALIDA] Ayuntamiento [Azotea]
	AddStaticPickup(1318,23,772.1720,-4.7048,1000.7286); 	// [SALIDA] Gangom Gim
	AddStaticPickup(1318,23,1261.3333,-785.3632,1091.9063); // [SALIDA] La Familia Corleone [Azotea]
	AddStaticPickup(1318,23,1298.8813,-796.4567,1084.0078); // [SALIDA] La Familia Corleone [Principal]
	AddStaticPickup(1318,23,246.7704,63.2438,1003.6406); 	// [SALIDA] LSPD [Principal]
	AddStaticPickup(1318,23,258.1533,86.5789,1002.4453); 	// [SALIDA] LSPD [Garage/Azotea]
	AddStaticPickup(1318,23,246.3645,108.1332,1003.2188);	// [SALIDA] LSTV [Principal]
	AddStaticPickup(1318,23,218.5256,126.1456,999.6924); 	// [SALIDA] LSTV [Garage]
	AddStaticPickup(1318,23,207.6556,-110.6397,1005.1328); 	// [SALIDA] Binco
	AddStaticPickup(1318,23,2306.0637,-16.1012,26.7496); 	// [SALIDA] Banco
	AddStaticPickup(1318,23,-2027.4482,-104.3967,1035.1719);// [SALIDA] Licencieros
	AddStaticPickup(1318,23,-1994.2268,-63.2064,1028.9183); // [SALIDA] Licencieros 2
	AddStaticPickup(1318,23,2577.2373,-1289.8438,1044.1250);// [SALIDA] CrackPalce
	AddStaticPickup(1318,23,367.0448,162.1540,1019.9844); 	// [SALIDA] Hospital
	AddStaticPickup(1318,23,309.9743,1855.3894,7.7266);     // [SALIDA] Laboratorio
	AddStaticPickup(1318,23,264.8723,1857.8157,8.7578);     // [SALIDA] Laboratorio - Garage
	AddStaticPickup(1318,23,268.7224,1864.7826,8.6094);     // [SALIDA] Laboratorio - Azotea
	AddStaticPickup(1318,23,2317.6460,-1026.1372,1050.2178); // [SALIDA] Yakuza
 	AddStaticPickup(1318,23,2523.3921,-1285.8868,1054.6406);// [SALIDA] HQ Taxi 1
	AddStaticPickup(1318,23,2542.8289,-1300.3031,1062.7042);// [SALIDA] HQ Taxi 2
	AddStaticPickup(1318,23,246.3338,107.9727,1003.2188,1); // [SALIDA] Departamento de Licencias [VW 1]
	AddStaticPickup(1318,23,2544.1538,-1318.8173,1031.4219,1); // [SALIDA] Fabrica de Armas
	AddStaticPickup(1318,23,238.7139,139.5321,1003.0234); 	// [SALIDA] Bomberos [Abajo]
	AddStaticPickup(1318,23,288.7538,167.7373,1007.1719); 	// [SALIDA] Bomberos [Arriba]

	AddStaticPickup(1239,23,499.8336,-20.3119,1000.6797); 	 // [COMANDO] Bebidas en Discoteca
	AddStaticPickup(1239,23,499.7109,-75.9724,998.7578); 	 // [COMANDO] Bebidas en Bar
	AddStaticPickup(1239,23,375.5476,-119.2827,1001.4995); 	 // [COMANDO] Menu en Restaurante Well Pizza Stack
	AddStaticPickup(1239,23,369.6111,-6.5479,1001.8589); 	 // [COMANDO] Menu en Restaurante Cluckin Bell
	AddStaticPickup(1239,23,376.7210,-67.8952,1001.5151); 	 // [COMANDO] Menu en Restaurante Burger Shot
	AddStaticPickup(1239,23,236.7723,75.5355,1005.0391); 	 // [COMANDO] En Servicio LSPD
	AddStaticPickup(1239,23,253.4972,79.3319,1003.6406);	 // [COMANDO] Equipar y Vestimenta LSPD
	AddStaticPickup(1239,23,-28.1112,-184.9997,1003.5469);   // [COMANDO] Comprar [1]
	AddStaticPickup(1239,23,2.3553,-28.9129,1003.5494);   	 // [COMANDO] Comprar [2]
	AddStaticPickup(1239,23,-27.5308,-89.4513,1003.5469);    // [COMANDO] Comprar [3]
	AddStaticPickup(1239,23,296.7918,-38.2912,1001.5156); 	 // [COMANDO] Comprar Armas

	AddStaticPickup(1239,23,1485.7622,-1733.0503,6.7097); 	 // [COMANDO] Compras en el Mercado Negro
	AddStaticPickup(1239,23,218.1300,-98.5213,1005.2578); 	 // [COMANDO] /ropa
	AddStaticPickup(1239,23,1438.3528,-996.9083,1639.7843);  // [COMANDO] /banco [1]
	AddStaticPickup(1239,23,1432.7076,-997.0886,1639.7843);  // [COMANDO] /banco [2]
	AddStaticPickup(1239,23,1424.6422,-981.8258,1639.7843);  // [COMANDO] /banco [3]
	AddStaticPickup(1239,23,1421.2076,-981.5569,1639.7843);  // [COMANDO] /banco [4]
	AddStaticPickup(1239,23,1417.7760,-981.4537,1639.7843);  // [COMANDO] /banco [5]
	AddStaticPickup(1239,23,267.7526,77.8474,1001.0391); 	 // [COMANDO] /arrestar
	AddStaticPickup(1239,23,766.1479,13.6475,1000.7020); 	 // [COMANDO] /Gimnasio
	AddStaticPickup(1239,23,-2033.2271,-117.3755,1035.1719); // [COMANDO] /licencias
	AddStaticPickup(1239,23,-2036.7465,-80.9591,1028.9183);  // [COMANDO] /idiomas
	AddStaticPickup(1239,23,1481.8784,-1721.2673,13.5469);   // [COMANDO] /loteria
	AddStaticPickup(1241,23,756.5405,5.3007,1000.6991); 	 // [COMANDO] /adrenalina
	AddStaticPickup(1275,23,2330.2798,-1011.7328,1054.7188); // [COMANDO] /armarioyakuza
	AddStaticPickup(1275,23,1261.7921,-795.8046,1084.2415);  // [COMANDO] /armarioCorleone
	AddStaticPickup(1274,23,1230.7491,-807.3076,1084.0078);  // [COMANDO] /cajafuerte [Corleone]
	AddStaticPickup(1274,23,2328.0891,-1015.3521,1054.7111); // [COMANDO] /cajafuerte [Yakuza]
	AddStaticPickup(1239,23,-105.0600,-11.1400,1000.7188); 	 // [COMANDO] Comprar Consoladores
	AddStaticPickup(1239,23,2529.2927,-2112.6064,13.5542); 	 // [COMANDO] Tuning
	AddStaticPickup(1239,23,2523.9990,-2087.4150,13.5814); 	 // [COMANDO] Reparacion
	AddStaticPickup(1239,23,2467.0410,-2110.2861,13.5542);   // [COMANDO] Pintura
	AddStaticPickup(1239,23,351.0655,162.8393,1019.9912); 	 // [COMANDO] /qsangre
	AddStaticPickup(1239,23,275.2493,1860.8098,8.7578); 	 // [COMANDO] /analizar
	AddStaticPickup(1239,23,267.4516,1858.1227,8.7578); 	 // [COMANDO] /operar
	AddStaticPickup(1239,23,2459.5200,-2100.5066,13.5469); 	 // [COMANDO] /Cerrar y /Abrir Garage
	AddStaticPickup(1239,23,357.3463,149.7496,1025.7891); 	 // [COMANDO] /cajafuerte [Persidencia]

	AddStaticPickup(1239,23,1966.3916,1029.6112,992.4745); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1966.4290,1021.7213,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1966.3032,1013.9902,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1966.2784,1006.3426,992.4745); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1969.5790,1006.3436,992.4745); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1969.7469,1014.0928,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1969.5494,1021.6647,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1969.6066,1029.6602,992.4745); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1963.0879,1044.0837,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1958.0675,1049.1113,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1966.1088,1037.4690,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1943.1469,1028.9487,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1941.9313,1021.4644,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1941.9680,1014.4678,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1942.8915,1006.9539,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1939.9583,1005.7206,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1938.5399,1014.4084,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1938.5447,1021.5018,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1939.6985,1029.5764,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1963.5778,998.6024,992.4745); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1961.1442,992.6971,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1957.1545,988.5188,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1945.2612,986.4633,992.4688); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1940.7848,991.2217,992.4609); 	// [Juegos Casino]
	AddStaticPickup(1239,23,1936.2550,986.7031,992.4745); 	// [Juegos Casino]
 	for(new i; i < MAX_PLAYERS; i++)
 	{
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(HouseInfo[h][hOwned] == 0)
			{
	   			AddStaticPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
				SetPlayerMapIcon(i, 32,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 52, 0, MAPICON_LOCAL);
			}
			if(HouseInfo[h][hOwned] == 1)
			{
				AddStaticPickup(1239, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
				SetPlayerMapIcon(i, 31,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 52, 0, MAPICON_LOCAL);
			}
		}
		for(new h = 0; h < sizeof(BizzInfo); h++)
		{
			if(BizzInfo[h][bOwned] == 0)
			{
				AddStaticPickup(1272, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
				SetPlayerMapIcon(i, 52,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ], 52, 0, MAPICON_LOCAL);
			}
			if(BizzInfo[h][bOwned] == 1)
			{
				AddStaticPickup(1239, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
				SetPlayerMapIcon(i, 52,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ], 52, 0, MAPICON_LOCAL);
			}
		}
		for(new h = 0; h < sizeof(SBizzInfo); h++)
		{
			if(SBizzInfo[h][sbOwned] == 0)
			{
				AddStaticPickup(1272, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
				SetPlayerMapIcon(i, 52, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ], 52, 0, MAPICON_LOCAL);
			}
			if(SBizzInfo[h][sbOwned] == 1)
			{
				AddStaticPickup(1239, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
				SetPlayerMapIcon(i, 52, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ], 52, 0, MAPICON_LOCAL);
			}
		}
		for(new h = 0; h < sizeof(GasInfo); h++)
		{
			if(GasInfo[h][gVenta] == 0)
			{
				AddStaticPickup(1273, 23, GasInfo[h][gPuntoX], GasInfo[h][gPuntoY], GasInfo[h][gPuntoZ], -1);
				SetPlayerMapIcon(i, 52, GasInfo[h][gPuntoX], GasInfo[h][gPuntoY], GasInfo[h][gPuntoZ], 52, 0, MAPICON_LOCAL);
			}
			if(GasInfo[h][gVenta] == 1)
			{
				AddStaticPickup(1239, 23, GasInfo[h][gPuntoX], GasInfo[h][gPuntoY], GasInfo[h][gPuntoZ], -1);
				SetPlayerMapIcon(i, 52, GasInfo[h][gPuntoX], GasInfo[h][gPuntoY], GasInfo[h][gPuntoZ], 52, 0, MAPICON_LOCAL);
			}
		}
	}
	pickups=pickups+314;
	printf("Se han cargado %d pickups dentro del juego",pickups);

	// -= Departamento de Bomberos =-
	CreateDynamicObject(3049,1284.07092285,-1647.22607422,14.78900909,0.00000000,0.00000000,270.50000000); //object(des_quarrygate) (5)
	CreateDynamicObject(3049,1284.16503906,-1661.59960938,17.98900604,0.00000000,0.00000000,271.99951172); //object(des_quarrygate) (6)
	CreateDynamicObject(3049,1284.16503906,-1661.59960938,14.78900909,0.00000000,0.00000000,271.99951172); //object(des_quarrygate) (7)
	CreateDynamicObject(3049,1284.07031250,-1647.22558594,18.01399803,0.00000000,0.00000000,270.49987793); //object(des_quarrygate) (8)
	CreateDynamicObject(18785,1247.21313477,-1651.60620117,10.02193832,0.00000000,0.00000000,89.99731445); //object(lodroad_hilllawn15) (1)
	CreateDynamicObject(18785,1237.22375488,-1651.58105469,9.15128613,0.00000000,0.00000000,89.74731445); //object(lodroad_hilllawn15) (2)
	CreateDynamicObject(970,1227.42138672,-1641.59509277,11.34835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1223.27258301,-1641.58483887,11.34835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1219.18237305,-1641.57995605,11.34835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1217.11938477,-1643.66857910,11.34835625,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,1231.51550293,-1669.23510742,11.34835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,1231.50402832,-1673.36743164,11.34835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (8)
	CreateDynamicObject(970,1231.51098633,-1677.52233887,11.34835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (9)
	CreateDynamicObject(970,1231.52832031,-1665.05859375,11.34835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (10)
	CreateDynamicObject(970,1241.92297363,-1669.16369629,11.35275745,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (11)
	CreateDynamicObject(970,1241.93188477,-1673.30969238,11.35275745,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (12)
	CreateDynamicObject(970,1241.91394043,-1677.41577148,11.35275745,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (13)
	CreateDynamicObject(1569,1261.92590332,-1677.52111816,12.54687500,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,1264.89453125,-1677.50146484,12.54687500,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (2)
	CreateDynamicObject(2773,1265.97583008,-1676.50854492,13.06410313,0.00000000,0.00000000,308.00000000); //object(cj_airprt_bar) (1)
	CreateDynamicObject(2773,1260.64746094,-1676.81530762,13.06410313,0.00000000,0.00000000,55.99621582); //object(cj_airprt_bar) (2)
	CreateDynamicObject(2773,1268.14318848,-1673.84020996,13.06893158,0.00000000,0.00000000,335.99182129); //object(cj_airprt_bar) (3)
	CreateDynamicObject(2773,1257.97521973,-1673.84313965,13.06410313,0.00000000,0.00000000,5.98937988); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,1268.54394531,-1670.97595215,13.06893158,0.00000000,0.00000000,355.98754883); //object(cj_airprt_bar) (5)
	CreateDynamicObject(2773,1257.99255371,-1671.24279785,13.06410313,0.00000000,0.00000000,355.98449707); //object(cj_airprt_bar) (6)
	CreateDynamicObject(1215,1268.50183105,-1672.41015625,13.11602688,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1267.18835449,-1675.18737793,13.11602688,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1264.91845703,-1677.28430176,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1261.78039551,-1677.42651367,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1259.29162598,-1675.43005371,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,1258.00146484,-1672.53393555,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,1258.15185547,-1669.88378906,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,1268.63305664,-1669.64245605,13.11602688,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,1240.85437012,-1661.43652344,11.36559963,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,1232.20568848,-1661.54626465,11.36119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,1243.78503418,-1644.65283203,11.36559963,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1215,1257.35473633,-1643.57727051,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
	CreateDynamicObject(1215,1257.40148926,-1663.78234863,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
	CreateDynamicObject(1215,1283.60229492,-1647.35839844,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
	CreateDynamicObject(1215,1283.58972168,-1657.15869141,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
	CreateDynamicObject(970,1241.89843750,-1665.00781250,11.35275745,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (16)
	CreateDynamicObject(970,1249.64807129,-1661.74694824,12.04835892,0.00000000,0.00000000,179.99951172); //object(fencesmallb) (17)
	CreateDynamicObject(970,1245.53479004,-1661.73144531,11.17776012,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (20)
	CreateDynamicObject(970,1245.53417969,-1661.73144531,12.05274677,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (21)
	CreateDynamicObject(970,1243.42883301,-1661.85742188,11.22775936,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (22)
	CreateDynamicObject(970,1243.42871094,-1661.85742188,12.02777004,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (23)
	CreateDynamicObject(970,1255.29211426,-1661.64807129,12.07335854,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (24)
	CreateDynamicObject(970,1253.18945312,-1661.63146973,12.07335854,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (25)
	CreateDynamicObject(1569,1211.90454102,-1671.15979004,26.47299576,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (3)
	CreateDynamicObject(1569,1214.85583496,-1671.12780762,26.47299576,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (4)
	CreateDynamicObject(1569,237.19659424,138.34153748,1002.02343750,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (5)
	CreateDynamicObject(1569,240.19564819,138.33593750,1002.02587891,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (7)
	CreateDynamicObject(1569,290.27044678,166.64062500,1006.17810059,0.00000000,0.00000000,179.99450684); //object(adam_v_door) (8)
	CreateDynamicObject(1569,287.25000000,166.63708496,1006.18591309,0.00000000,0.00000000,359.99450684); //object(adam_v_door) (9)

	// -= Nuevo Interior Yakuza =-
	CreateDynamicObject(1829,2328.11352539,-1015.90826416,1054.17553711,0.00000000,0.00000000,180.00000000); //object(man_safenew) (1)
	CreateDynamicObject(1839,2322.43212891,-1009.50274658,1054.67187500,0.00000000,0.00000000,180.00000000); //object(k_hifi_1) (1)
	CreateDynamicObject(2202,2322.40893555,-1011.58044434,1053.71875000,0.00000000,0.00000000,92.00000000); //object(photocopier_2) (1)
	CreateDynamicObject(2224,2328.26904297,-1010.80969238,1053.71875000,0.00000000,0.00000000,170.00000000); //object(cj_sphere_tv) (1)
	CreateDynamicObject(2233,2328.46020508,-1011.78094482,1053.71875000,0.00000000,0.00000000,230.00000000); //object(swank_speaker_4) (1)
	CreateDynamicObject(2233,2327.22094727,-1012.25201416,1053.71875000,0.00000000,0.00000000,199.99877930); //object(swank_speaker_4) (2)
	CreateDynamicObject(2818,2323.02075195,-1013.21087646,1053.71875000,0.00000000,0.00000000,90.00000000); //object(gb_bedrug02) (1)
	CreateDynamicObject(2826,2322.57861328,-1015.02496338,1054.51721191,0.00000000,0.00000000,320.00000000); //object(gb_novels04) (1)
	CreateDynamicObject(2828,2323.42407227,-1015.87023926,1054.49743652,0.00000000,0.00000000,320.00000000); //object(gb_ornament02) (1)
	CreateDynamicObject(2833,2317.20654297,-1026.86547852,1049.21777344,0.00000000,0.00000000,0.00000000); //object(gb_livingrug02) (1)
	CreateDynamicObject(14867,2331.56518555,-1010.78167725,1055.24841309,0.00000000,0.00000000,88.00000000); //object(bobbie-cupboards) (1)
	CreateDynamicObject(2609,2330.26733398,-1014.07946777,1054.45043945,0.00000000,0.00000000,230.00000000); //object(cj_p_fileing1) (1)
	CreateDynamicObject(2609,2329.98657227,-1014.42376709,1054.45043945,0.00000000,0.00000000,229.99877930); //object(cj_p_fileing1) (2)
	CreateDynamicObject(2609,2329.76806641,-1014.74841309,1054.44274902,0.00000000,0.00000000,239.99877930); //object(cj_p_fileing1) (3)
	CreateDynamicObject(2606,2323.12402344,-1016.79199219,1056.18701172,0.00000000,0.00000000,180.00000000); //object(cj_police_counter2) (1)
	CreateDynamicObject(2606,2323.12402344,-1016.79199219,1055.73657227,0.00000000,0.00000000,179.99450684); //object(cj_police_counter2) (2)
	CreateDynamicObject(2606,2323.12402344,-1016.79199219,1055.28613281,0.00000000,0.00000000,179.99450684); //object(cj_police_counter2) (3)
	CreateDynamicObject(2606,2323.12402344,-1016.79199219,1056.58740234,0.00000000,0.00000000,179.99450684); //object(cj_police_counter2) (4)
	CreateDynamicObject(2000,2329.25585938,-1014.94836426,1053.71105957,0.00000000,0.00000000,210.00000000); //object(filing_cab_nu) (1)
	CreateDynamicObject(2000,2328.81787109,-1015.13854980,1053.71105957,0.00000000,0.00000000,189.99816895); //object(filing_cab_nu) (2)
	CreateDynamicObject(16780,2326.58862305,-1011.42529297,1057.38037109,0.00000000,0.00000000,0.00000000); //object(ufo_light03) (1)

	// -= Interior The Corleone`s Family =-
	CreateDynamicObject(1491,1225.03601074,-814.13952637,1083.00781250,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (1)
	CreateDynamicObject(1491,1240.42333984,-831.69787598,1083.00781250,0.00000000,0.00000000,270.00000000); //object(gen_doorint01) (2)
	CreateDynamicObject(1491,1240.37060547,-810.78125000,1083.00988770,0.00000000,0.00000000,269.99450684); //object(gen_doorint01) (3)
	CreateDynamicObject(1491,1240.45739746,-813.78125000,1083.06384277,0.00000000,0.00000000,89.98901367); //object(gen_doorint01) (4)
	CreateDynamicObject(1491,1264.65222168,-809.76898193,1083.00781250,0.00000000,0.00000000,89.98901367); //object(gen_doorint01) (5)
	CreateDynamicObject(1491,1264.62915039,-806.84173584,1083.00781250,0.00000000,0.00000000,269.98901367); //object(gen_doorint01) (6)
	CreateDynamicObject(1491,1260.37609863,-802.79895020,1083.00781250,0.00000000,0.00000000,269.98901367); //object(gen_doorint01) (7)
	CreateDynamicObject(1491,1260.39599609,-805.78527832,1083.00781250,0.00000000,0.00000000,89.98901367); //object(gen_doorint01) (8)
	CreateDynamicObject(1491,1272.03906250,-802.46228027,1082.97180176,0.00000000,0.00000000,179.98901367); //object(gen_doorint01) (9)
	CreateDynamicObject(1491,1269.03906250,-802.48358154,1083.01062012,0.00000000,0.00000000,359.98352051); //object(gen_doorint01) (10)
	CreateDynamicObject(1491,1280.40490723,-790.73437500,1083.02697754,0.00000000,0.00000000,89.97802734); //object(gen_doorint01) (11)
	CreateDynamicObject(1491,1280.36474609,-787.74591064,1083.00781250,0.00000000,0.00000000,269.97802734); //object(gen_doorint01) (12)
	CreateDynamicObject(1491,1251.76342773,-787.75238037,1083.00781250,0.00000000,0.00000000,269.97802734); //object(gen_doorint01) (13)
	CreateDynamicObject(1491,1251.76818848,-790.74218750,1083.01220703,0.00000000,0.00000000,89.97802734); //object(gen_doorint01) (14)
	CreateDynamicObject(1491,1248.14233398,-781.38970947,1083.00781250,0.00000000,0.00000000,359.97802734); //object(gen_doorint01) (15)
	CreateDynamicObject(1491,1251.13903809,-781.38439941,1083.00781250,0.00000000,0.00000000,179.97802734); //object(gen_doorint01) (16)
	CreateDynamicObject(1491,1247.46899414,-778.48577881,1083.00781250,0.00000000,0.00000000,269.97253418); //object(gen_doorint01) (17)
	CreateDynamicObject(1491,1242.09375000,-774.47351074,1083.03845215,0.00000000,0.00000000,179.96704102); //object(gen_doorint01) (18)
	CreateDynamicObject(1491,1251.13098145,-772.98486328,1083.00781250,0.00000000,0.00000000,179.96154785); //object(gen_doorint01) (19)
	CreateDynamicObject(1491,1248.14062500,-773.01269531,1083.00830078,0.00000000,0.00000000,359.96154785); //object(gen_doorint01) (20)
	CreateDynamicObject(1491,1259.79736328,-771.26562500,1083.01098633,0.00000000,0.00000000,89.95605469); //object(gen_doorint01) (21)
	CreateDynamicObject(1491,1259.79199219,-768.30010986,1083.00781250,0.00000000,0.00000000,269.95056152); //object(gen_doorint01) (22)
	CreateDynamicObject(1491,1266.68750000,-775.37603760,1083.02148438,0.00000000,0.00000000,179.95056152); //object(gen_doorint01) (23)
	CreateDynamicObject(1491,1262.67590332,-775.41625977,1083.00781250,0.00000000,0.00000000,179.94506836); //object(gen_doorint01) (24)
	CreateDynamicObject(1491,1268.07922363,-768.25781250,1083.01000977,0.00000000,0.00000000,269.94506836); //object(gen_doorint01) (25)
	CreateDynamicObject(1491,1268.09326172,-771.23327637,1083.01489258,0.00000000,0.00000000,89.93957520); //object(gen_doorint01) (26)
	CreateDynamicObject(1491,1292.35253906,-782.73480225,1083.00781250,0.00000000,0.00000000,89.93408203); //object(gen_doorint01) (27)
	CreateDynamicObject(1491,1292.35412598,-779.76409912,1083.00781250,0.00000000,0.00000000,269.93408203); //object(gen_doorint01) (28)
	CreateDynamicObject(1491,1303.53906250,-783.37640381,1083.03454590,0.00000000,0.00000000,179.92858887); //object(gen_doorint01) (30)
	CreateDynamicObject(1491,1300.53906250,-783.40386963,1083.01123047,0.00000000,0.00000000,359.92309570); //object(gen_doorint01) (31)
	CreateDynamicObject(6965,1281.76000977,-774.77026367,1079.35412598,0.00000000,0.00000000,0.00000000); //object(venefountain02) (1)
	CreateDynamicObject(1215,1287.82653809,-779.22595215,1083.57922363,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1287.77612305,-769.56359863,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1280.18408203,-769.68035889,1083.57922363,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1272.58068848,-769.59436035,1083.57922363,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1272.45471191,-779.24792480,1083.57922363,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,1280.26892090,-779.21435547,1083.57922363,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,1281.82153320,-774.76800537,1082.28430176,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,1264.95471191,-775.26562500,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,1266.86889648,-775.26562500,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,1262.91333008,-775.26562500,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,1251.34655762,-772.89062500,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1215,1260.91699219,-775.26562500,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
	CreateDynamicObject(1215,1247.90478516,-772.89489746,1083.57861328,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
	CreateDynamicObject(1215,1251.38586426,-781.19531250,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
	CreateDynamicObject(1215,1247.81335449,-781.19531250,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
	CreateDynamicObject(1215,1251.64062500,-787.58953857,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
	CreateDynamicObject(1215,1251.64062500,-790.89617920,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (17)
	CreateDynamicObject(1215,1280.24218750,-787.61798096,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (18)
	CreateDynamicObject(1215,1280.24218750,-790.93951416,1083.58081055,0.00000000,0.00000000,0.00000000); //object(bollardlight) (19)
	CreateDynamicObject(1215,1272.13671875,-802.28906250,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (20)
	CreateDynamicObject(1215,1268.86474609,-802.28906250,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (21)
	CreateDynamicObject(1215,1260.53906250,-802.75537109,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (22)
	CreateDynamicObject(1215,1260.53906250,-805.87933350,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
	CreateDynamicObject(1215,1264.53906250,-806.69592285,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (24)
	CreateDynamicObject(1215,1264.50866699,-809.99041748,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (25)
	CreateDynamicObject(1215,1240.53125000,-813.97912598,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (26)
	CreateDynamicObject(1215,1224.86071777,-814.30285645,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (27)
	CreateDynamicObject(1215,1240.56250000,-810.61718750,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (28)
	CreateDynamicObject(1215,1240.61743164,-835.02221680,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (29)
	CreateDynamicObject(1491,1228.02148438,-814.11816406,1083.00781250,0.00000000,0.00000000,179.99450684); //object(gen_doorint01) (32)
	CreateDynamicObject(1491,1240.45117188,-834.60437012,1083.00781250,0.00000000,0.00000000,90.00000000); //object(gen_doorint01) (33)
	CreateDynamicObject(1491,1256.04846191,-831.04864502,1083.00781250,0.00000000,0.00000000,180.00000000); //object(gen_doorint01) (34)
	CreateDynamicObject(1491,1253.07958984,-831.04650879,1083.00781250,0.00000000,0.00000000,359.99450684); //object(gen_doorint01) (35)
	CreateDynamicObject(1491,1280.74707031,-824.13562012,1084.63281250,0.00000000,0.00000000,359.98901367); //object(gen_doorint01) (36)
	CreateDynamicObject(1491,1279.80139160,-824.08001709,1084.63281250,0.00000000,0.00000000,181.98901367); //object(gen_doorint01) (37)
	CreateDynamicObject(1491,1276.78613281,-824.14453125,1084.63281250,0.00000000,0.00000000,359.98901367); //object(gen_doorint01) (38)
	CreateDynamicObject(1491,1287.90258789,-831.68969727,1084.63281250,0.00000000,0.00000000,269.98901367); //object(gen_doorint01) (39)
	CreateDynamicObject(1491,1283.77246094,-824.12402344,1084.63281250,0.00000000,0.00000000,179.98352051); //object(gen_doorint01) (40)
	CreateDynamicObject(1491,1287.79687500,-835.66052246,1084.68786621,0.00000000,0.00000000,269.98901367); //object(gen_doorint01) (41)
	CreateDynamicObject(1491,1287.92626953,-838.64904785,1084.63281250,0.00000000,0.00000000,89.98901367); //object(gen_doorint01) (42)
	CreateDynamicObject(1491,1287.93359375,-834.71307373,1084.63281250,0.00000000,0.00000000,89.98901367); //object(gen_doorint01) (43)
	CreateDynamicObject(1491,1280.80041504,-824.00402832,1088.93750000,0.00000000,0.00000000,359.98901367); //object(gen_doorint01) (45)
	CreateDynamicObject(1491,1283.79687500,-823.93457031,1088.94445801,0.00000000,0.00000000,181.98352051); //object(gen_doorint01) (46)
	CreateDynamicObject(1491,1285.41027832,-820.40093994,1088.93750000,0.00000000,0.00000000,267.98303223); //object(gen_doorint01) (47)
	CreateDynamicObject(1491,1285.29687500,-808.37591553,1089.01440430,0.00000000,0.00000000,267.97851562); //object(gen_doorint01) (48)
	CreateDynamicObject(1491,1285.40832520,-796.38366699,1088.93750000,0.00000000,0.00000000,269.97851562); //object(gen_doorint01) (49)
	CreateDynamicObject(1491,1279.24218750,-788.39752197,1088.93750000,0.00000000,0.00000000,269.97802734); //object(gen_doorint01) (50)
	CreateDynamicObject(1491,1279.22656250,-800.38977051,1088.93750000,0.00000000,0.00000000,269.97802734); //object(gen_doorint01) (51)
	CreateDynamicObject(1491,1279.24291992,-812.38281250,1088.94506836,0.00000000,0.00000000,269.97802734); //object(gen_doorint01) (52)
	CreateDynamicObject(1491,1279.25415039,-815.37475586,1088.93750000,0.00000000,0.00000000,89.97802734); //object(gen_doorint01) (53)
	CreateDynamicObject(1491,1279.23291016,-803.37396240,1088.93750000,0.00000000,0.00000000,89.97802734); //object(gen_doorint01) (54)
	CreateDynamicObject(1491,1279.24291992,-791.37274170,1088.93750000,0.00000000,0.00000000,89.97802734); //object(gen_doorint01) (55)
	CreateDynamicObject(1491,1285.29687500,-811.39855957,1088.97790527,0.00000000,0.00000000,89.97802734); //object(gen_doorint01) (56)
	CreateDynamicObject(1491,1285.42871094,-799.38085938,1088.93750000,0.00000000,0.00000000,89.97802734); //object(gen_doorint01) (57)
	CreateDynamicObject(1491,1285.35400391,-823.38281250,1088.94909668,0.00000000,0.00000000,89.97802734); //object(gen_doorint01) (58)
	CreateDynamicObject(1491,1283.78771973,-783.79931641,1088.93750000,0.00000000,0.00000000,179.97802734); //object(gen_doorint01) (59)
	CreateDynamicObject(1491,1280.79687500,-783.83941650,1088.94567871,0.00000000,0.00000000,359.97253418); //object(gen_doorint01) (60)
	CreateDynamicObject(1215,1228.18164062,-814.41015625,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (31)
	CreateDynamicObject(1215,1240.57031250,-831.35400391,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (32)
	CreateDynamicObject(1215,1252.87915039,-831.23217773,1083.57922363,0.00000000,0.00000000,0.00000000); //object(bollardlight) (33)
	CreateDynamicObject(1215,1256.17419434,-831.19860840,1083.57214355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (34)
	CreateDynamicObject(1215,1276.53942871,-824.18750000,1085.19714355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (35)
	CreateDynamicObject(1215,1280.31713867,-824.18750000,1085.19714355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (36)
	CreateDynamicObject(1215,1284.08447266,-824.18750000,1085.19714355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (37)
	CreateDynamicObject(1215,1287.79687500,-831.31488037,1085.19714355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (38)
	CreateDynamicObject(1215,1287.79687500,-835.14410400,1085.19714355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (39)
	CreateDynamicObject(1215,1287.79687500,-839.10607910,1085.19714355,0.00000000,0.00000000,0.00000000); //object(bollardlight) (40)
	CreateDynamicObject(1215,1280.50219727,-824.18750000,1089.50183105,0.00000000,0.00000000,0.00000000); //object(bollardlight) (41)
	CreateDynamicObject(1215,1284.07141113,-824.18750000,1089.50183105,0.00000000,0.00000000,0.00000000); //object(bollardlight) (42)
	CreateDynamicObject(1215,1283.93554688,-783.58593750,1089.50183105,0.00000000,0.00000000,0.00000000); //object(bollardlight) (43)
	CreateDynamicObject(1215,1280.59936523,-783.58593750,1089.49462891,0.00000000,0.00000000,0.00000000); //object(bollardlight) (44)
	CreateDynamicObject(1215,1260.29687500,-783.79132080,1091.47058105,0.00000000,0.00000000,0.00000000); //object(bollardlight) (45)
	CreateDynamicObject(1215,1260.29687500,-787.14794922,1091.47058105,0.00000000,0.00000000,0.00000000); //object(bollardlight) (46)

	// -= Departamento de Propiedades =-
	CreateDynamicObject(1569,1797.35717773,-1580.51464844,13.07300282,0.00000000,0.00000000,100.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,1796.81225586,-1577.57690430,13.07767391,0.00000000,0.00000000,279.74755859); //object(adam_v_door) (2)
	CreateDynamicObject(1472,1800.52941895,-1574.42272949,12.63455391,0.00000000,0.00000000,105.99755859); //object(dyn_porch_1) (2)
	CreateDynamicObject(1472,1801.38061523,-1577.32031250,12.63399410,0.00000000,0.00000000,105.99609375); //object(dyn_porch_1) (3)
	CreateDynamicObject(1472,1800.95605469,-1575.87109375,12.62213421,0.00000000,0.00000000,105.99609375); //object(dyn_porch_1) (4)
	CreateDynamicObject(1472,1801.66552734,-1578.25341797,12.60899448,0.00000000,0.00000000,105.99609375); //object(dyn_porch_1) (7)
	CreateDynamicObject(1215,1811.69921875,-1582.51025391,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1811.79003906,-1594.67419434,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1803.12048340,-1602.07910156,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1793.95654297,-1601.67041016,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1794.03417969,-1595.36694336,13.10135460,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,1810.45861816,-1582.27087402,13.10609722,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,1819.61242676,-1552.57153320,13.15479088,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,1821.37585449,-1545.48754883,12.88018322,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,1761.34582520,-1593.70214844,13.09766674,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,1783.45178223,-1599.24829102,13.10340691,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,1783.85827637,-1595.18701172,13.05783367,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(803,1809.30261230,-1588.05151367,14.46618080,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (1)
	CreateDynamicObject(803,1809.41687012,-1593.08312988,14.46618080,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (2)
	CreateDynamicObject(803,1800.60620117,-1600.07067871,14.46618080,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (3)
	CreateDynamicObject(803,1797.69055176,-1598.20800781,14.45862961,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (4)
	CreateDynamicObject(803,1805.70275879,-1590.08654785,14.46618080,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (5)
	CreateDynamicObject(803,1802.75500488,-1592.08862305,14.46618080,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (6)
	CreateDynamicObject(803,1799.57788086,-1594.90075684,14.46618080,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (7)
	CreateDynamicObject(803,1777.89477539,-1595.91357422,14.23780251,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (8)
	CreateDynamicObject(803,1773.75244141,-1594.36010742,14.22629452,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (9)
	CreateDynamicObject(803,1769.71777344,-1594.00878906,14.23125744,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (10)
	CreateDynamicObject(803,1817.74841309,-1551.08935547,14.15836716,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (11)
	CreateDynamicObject(803,1818.64160156,-1547.25476074,14.02961254,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (12)
	CreateDynamicObject(803,1832.85449219,-1591.05566406,13.99213314,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (13)
	CreateDynamicObject(803,1834.41271973,-1585.31823730,14.02065182,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (14)
	CreateDynamicObject(803,1836.44274902,-1581.27856445,14.00952053,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (15)
	CreateDynamicObject(803,1839.50585938,-1576.67358398,14.01607323,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (16)
	CreateDynamicObject(803,1843.28247070,-1571.61462402,14.02187824,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (17)
	CreateDynamicObject(803,1859.97619629,-1558.68359375,14.01261234,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (18)
	CreateDynamicObject(803,1855.59680176,-1560.71130371,14.00440216,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (19)
	CreateDynamicObject(803,1851.79638672,-1563.22485352,13.99528408,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (20)
	CreateDynamicObject(803,1848.68701172,-1566.00720215,13.99904537,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (21)
	CreateDynamicObject(803,1845.51281738,-1569.13586426,14.01024914,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (22)
	CreateDynamicObject(803,1864.96569824,-1557.20678711,14.02788353,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (23)
	CreateDynamicObject(803,1870.12670898,-1556.10290527,13.85056877,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (24)
	CreateDynamicObject(803,1874.73901367,-1555.26135254,13.78205490,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (25)
	CreateDynamicObject(803,1874.73901367,-1555.26135254,13.78205490,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (26)
	CreateDynamicObject(712,1845.28002930,-1568.28161621,22.17357635,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (5)
	CreateDynamicObject(712,1853.41198730,-1561.94921875,22.17616272,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (6)
	CreateDynamicObject(712,1862.56274414,-1557.56701660,22.20068359,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (7)
	CreateDynamicObject(712,1870.59057617,-1555.91125488,22.00856209,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (8)
	CreateDynamicObject(712,1778.57983398,-1595.85168457,22.41531944,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (15)
	CreateDynamicObject(712,1771.82678223,-1594.72375488,22.41611099,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (16)
	CreateDynamicObject(712,1799.69921875,-1600.15026855,22.63868141,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (17)
	CreateDynamicObject(712,1809.75073242,-1591.44238281,22.64623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (18)
	CreateDynamicObject(712,1818.47766113,-1547.48132324,22.21883392,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (19)
	CreateDynamicObject(1569,247.85368347,107.03499603,1002.21875000,0.00000000,0.00000000,180.00000000,1); //object(adam_v_door) (4)
	CreateDynamicObject(1569,244.91113281,107.04492188,1002.21875000,0.00000000,0.00000000,0.00000000,1); //object(adam_v_door) (5)
	CreateDynamicObject(1569,239.59851074,116.06195831,1002.24090576,0.00000000,0.00000000,90.00000000,1); //object(adam_v_door) (6)
	CreateDynamicObject(1569,238.60630798,115.84797668,1002.21875000,0.00000000,0.00000000,179.75000000,1); //object(adam_v_door) (7)
	CreateDynamicObject(1569,239.63574219,119.06152344,1002.24090576,0.00000000,0.00000000,269.74731445,1); //object(adam_v_door) (8)
	CreateDynamicObject(1569,235.63046265,115.84765625,1002.21875000,0.00000000,0.00000000,359.74731445,1); //object(adam_v_door) (9)
	CreateDynamicObject(1569,260.44900513,123.80318451,1007.82031250,0.00000000,0.00000000,89.74731445,1); //object(adam_v_door) (10)
	CreateDynamicObject(1569,238.93830872,119.44120789,1002.21875000,0.00000000,0.00000000,179.74731445,1); //object(adam_v_door) (11)
	CreateDynamicObject(3055,260.36962891,126.89306641,1010.24713135,0.00000000,0.00000000,266.25000000,1); //object(kmb_shutter) (7)
	CreateDynamicObject(1569,260.45312500,126.77734375,1007.82031250,0.00000000,0.00000000,269.74182129,1); //object(adam_v_door) (12)
	CreateDynamicObject(1569,235.94824219,119.44628906,1002.21875000,0.00000000,0.00000000,359.74731445,1); //object(adam_v_door) (13)

	// -= Yakuza =-
	CreateDynamicObject(712,306.20562744,-1196.41357422,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (2)
	CreateDynamicObject(712,299.05926514,-1201.91027832,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (3)
	CreateDynamicObject(712,292.56890869,-1206.63232422,89.44571686,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (4)
	CreateDynamicObject(712,283.37661743,-1213.37524414,89.52438354,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (5)
	CreateDynamicObject(712,332.42181396,-1175.31738281,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (6)
	CreateDynamicObject(712,341.54577637,-1167.65173340,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (7)
	CreateDynamicObject(712,347.21405029,-1161.92822266,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (8)
	CreateDynamicObject(712,340.19323730,-1153.45947266,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (9)
	CreateDynamicObject(712,330.44393921,-1140.90295410,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (10)
	CreateDynamicObject(712,321.99609375,-1129.67407227,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (11)
	CreateDynamicObject(712,315.75488281,-1120.79333496,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (12)
	CreateDynamicObject(712,308.79772949,-1112.18188477,89.72353363,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (13)
	CreateDynamicObject(712,295.24108887,-1108.06762695,90.92267609,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (14)
	CreateDynamicObject(712,294.93750000,-1113.52514648,90.30763245,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (15)
	CreateDynamicObject(712,293.71929932,-1120.89538574,89.58510590,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (16)
	CreateDynamicObject(712,289.56683350,-1128.41369629,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (17)
	CreateDynamicObject(712,283.87799072,-1135.33959961,89.50925446,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (18)
	CreateDynamicObject(712,278.20291138,-1140.72485352,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (19)
	CreateDynamicObject(712,271.79641724,-1147.03588867,89.51342010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (20)
	CreateDynamicObject(712,262.91040039,-1151.06994629,88.94152832,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (21)
	CreateDynamicObject(8640,320.44692993,-1187.46069336,80.81514740,0.00000000,0.00000000,308.25000000); //object(chnatwnmll02_lvs) (1)
	CreateDynamicObject(8641,320.34573364,-1187.42370605,82.55113220,0.00000000,0.00000000,307.99987793); //object(chnatwnmll03_lvs) (1)
	CreateDynamicObject(1568,290.38342285,-1148.33520508,79.90989685,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (1)
	CreateDynamicObject(1568,305.99679565,-1182.44738770,79.91406250,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (2)
	CreateDynamicObject(1568,317.75469971,-1171.66394043,79.91406250,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (3)
	CreateDynamicObject(1568,338.38623047,-1151.59020996,79.90989685,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (4)
	CreateDynamicObject(1568,307.63638306,-1119.03857422,79.91406250,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (5)
	CreateDynamicObject(1568,283.90609741,-1218.17102051,74.43234253,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (6)
	CreateDynamicObject(1568,294.83050537,-1210.78344727,74.77244568,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (7)
	CreateDynamicObject(1568,304.87319946,-1203.48474121,75.01904297,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (8)
	CreateDynamicObject(1568,314.86801147,-1196.01184082,75.19188690,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (9)
	CreateDynamicObject(1568,330.20770264,-1183.76232910,75.50314331,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (10)
	CreateDynamicObject(1568,339.98922729,-1174.97570801,75.90392303,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (11)
	CreateDynamicObject(1568,347.25781250,-1168.51318359,76.27462006,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (12)
	CreateDynamicObject(1568,353.75982666,-1162.08398438,76.82390594,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (13)
	CreateDynamicObject(1215,318.70645142,-1190.47290039,75.85906219,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,324.05401611,-1186.22998047,75.96840668,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,311.74093628,-1177.21398926,79.42180634,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,313.21813965,-1178.77624512,78.79676819,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,314.50637817,-1180.13952637,78.09672546,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,316.15100098,-1181.88818359,77.34667969,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,317.17984009,-1183.01208496,76.99665833,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1215,318.56402588,-1184.52319336,76.42162323,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)

	// -= Interior HQ Taxistas =-
	CreateDynamicObject(1569,2522.56713867,-1287.39514160,1053.64062500,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,2522.57470703,-1284.39807129,1053.62780762,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (2)
	CreateDynamicObject(1569,2536.11181641,-1298.19995117,1053.64062500,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (3)
	CreateDynamicObject(1569,2539.10791016,-1298.18615723,1053.64062500,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (4)
	CreateDynamicObject(2190,2538.26782227,-1283.87353516,1054.90502930,0.00000000,0.00000000,60.00000000); //object(pc_1) (1)
	CreateDynamicObject(2190,2538.21704102,-1285.53796387,1054.90502930,0.00000000,0.00000000,59.99633789); //object(pc_1) (2)
	CreateDynamicObject(2190,2538.18237305,-1287.33483887,1054.90502930,0.00000000,0.00000000,79.99633789); //object(pc_1) (3)
	CreateDynamicObject(2186,2538.45361328,-1282.48754883,1053.64062500,0.00000000,0.00000000,90.00000000); //object(photocopier_1) (1)
	CreateDynamicObject(2225,2539.84204102,-1288.56848145,1053.64062500,0.00000000,0.00000000,180.00000000); //object(swank_hi_fi_2) (1)
	CreateDynamicObject(1671,2539.84936523,-1285.80029297,1054.10083008,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (1)
	CreateDynamicObject(1671,2539.85009766,-1283.98498535,1054.10083008,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (2)
	CreateDynamicObject(1671,2539.83666992,-1287.43640137,1054.10083008,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (3)
	CreateDynamicObject(14603,2541.86523438,-1304.07617188,1063.43542480,0.00000000,0.00000000,180.00000000); //object(bikeschl_main) (1)
	CreateDynamicObject(1569,2541.25683594,-1299.48400879,1061.65417480,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (5)
	CreateDynamicObject(1569,2544.23535156,-1299.49536133,1061.65417480,0.00000000,0.00000000,179.50000000); //object(adam_v_door) (6)
	CreateDynamicObject(1808,2542.97534180,-1305.94750977,1061.79492188,0.00000000,0.00000000,180.00000000); //object(cj_watercooler2) (1)
	CreateDynamicObject(1809,2534.33056641,-1299.66564941,1061.65417480,0.00000000,0.00000000,40.00000000); //object(med_hi_fi) (1)
	CreateDynamicObject(1828,2537.92846680,-1304.28942871,1061.65417480,0.00000000,0.00000000,0.00000000); //object(man_sdr_rug) (1)
	CreateDynamicObject(2230,2533.91821289,-1305.94934082,1061.65417480,0.00000000,0.00000000,131.00000000); //object(swank_speaker_2) (1)
	CreateDynamicObject(2596,2534.50634766,-1299.53039551,1064.75769043,0.00000000,0.00000000,30.00000000); //object(cj_sex_tv) (1)
	CreateDynamicObject(2631,2542.92553711,-1300.56860352,1061.65051270,0.00000000,0.00000000,0.00000000); //object(gym_mat1) (1)
	CreateDynamicObject(2853,2537.78247070,-1302.81042480,1062.15966797,0.00000000,0.00000000,0.00000000); //object(gb_bedmags03) (1)
	CreateDynamicObject(1671,2545.41381836,-1304.27368164,1062.11437988,0.00000000,0.00000000,190.00000000); //object(swivelchair_a) (4)
	CreateDynamicObject(1726,2536.01733398,-1301.32897949,1061.65417480,0.00000000,0.00000000,0.00000000); //object(mrk_seating2) (1)
	CreateDynamicObject(1727,2539.50756836,-1302.54394531,1061.65417480,0.00000000,0.00000000,270.00000000); //object(mrk_seating2b) (1)
	CreateDynamicObject(2311,2538.07568359,-1302.75427246,1061.65417480,0.00000000,0.00000000,180.00000000); //object(cj_tv_table2) (1)
	CreateDynamicObject(1671,2537.88256836,-1305.46716309,1062.11437988,0.00000000,0.00000000,169.99572754); //object(swivelchair_a) (5)
	CreateDynamicObject(1809,2534.33007812,-1299.66503906,1062.12963867,0.00000000,0.00000000,39.99572754); //object(med_hi_fi) (2)
	CreateDynamicObject(1809,2534.33007812,-1299.66503906,1062.65515137,0.00000000,0.00000000,39.99572754); //object(med_hi_fi) (3)
	CreateDynamicObject(1998,2544.52978516,-1304.06359863,1061.65832520,0.00000000,0.00000000,0.00000000); //object(officedesk1l) (1)
	CreateDynamicObject(2008,2546.47827148,-1303.08227539,1061.65417480,0.00000000,0.00000000,0.00000000); //object(officedesk1) (1)
	CreateDynamicObject(1671,2538.97070312,-1304.85253906,1062.11437988,0.00000000,0.00000000,219.99572754); //object(swivelchair_a) (6)
	CreateDynamicObject(1671,2547.34399414,-1304.04870605,1062.11437988,0.00000000,0.00000000,179.99755859); //object(swivelchair_a) (7)

	// -= Interior HQ LSMD =-
	CreateDynamicObject(1569,367.70098877,163.65301514,1018.98437500,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,367.70605469,160.67741394,1018.98437500,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (2)
	CreateDynamicObject(2924,369.67404175,161.08549500,1020.17797852,0.00000000,0.00000000,270.00000000); //object(kmb_crash3door) (1)
	CreateDynamicObject(2924,369.68917847,163.86270142,1020.17797852,0.00000000,0.00000000,90.00000000); //object(kmb_crash3door) (2)
	CreateDynamicObject(3055,367.80429077,163.41911316,1021.18249512,0.00000000,0.00000000,90.00000000); //object(kmb_shutter) (1)
	CreateDynamicObject(3055,369.55328369,163.37985229,1021.18249512,0.00000000,0.00000000,90.00000000); //object(kmb_shutter) (2)
	CreateDynamicObject(1671,366.39840698,168.43653870,1019.44458008,0.00000000,0.00000000,0.00000000); //object(swivelchair_a) (1)
	CreateDynamicObject(1727,360.40695190,169.52040100,1018.98437500,0.00000000,0.00000000,180.00000000); //object(mrk_seating2b) (1)
	CreateDynamicObject(1998,367.26852417,168.35902405,1018.98437500,0.00000000,0.00000000,180.00000000); //object(officedesk1l) (1)
	CreateDynamicObject(2008,365.37506104,167.38752747,1018.98437500,0.00000000,0.00000000,180.00000000); //object(officedesk1) (1)
	CreateDynamicObject(1671,364.49313354,168.43513489,1019.44458008,0.00000000,0.00000000,0.00000000); //object(swivelchair_a) (2)
	CreateDynamicObject(1726,359.18490601,169.48803711,1018.98437500,0.00000000,0.00000000,180.00000000); //object(mrk_seating2) (1)
	CreateDynamicObject(1726,359.16894531,169.49804688,1018.98437500,0.00000000,0.00000000,179.99450684); //object(mrk_seating2) (3)
	CreateDynamicObject(1997,349.48501587,169.45129395,1018.99121094,0.00000000,0.00000000,90.00000000); //object(hos_trolley) (1)
	CreateDynamicObject(1997,350.80545044,164.92907715,1018.98437500,0.00000000,0.00000000,90.00000000); //object(hos_trolley) (2)
	CreateDynamicObject(1997,350.82812500,164.01464844,1018.99121094,0.00000000,0.00000000,90.00000000); //object(hos_trolley) (3)
	CreateDynamicObject(1997,351.57690430,169.49650574,1018.99121094,0.00000000,0.00000000,90.00000000); //object(hos_trolley) (4)
	CreateDynamicObject(1569,367.70605469,160.67675781,1018.98437500,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (3)
	CreateDynamicObject(1569,367.70605469,160.67675781,1018.98437500,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (4)
	CreateDynamicObject(1569,366.17065430,186.88465881,1018.98437500,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (5)
	CreateDynamicObject(1569,363.26983643,186.88049316,1018.98437500,0.00000000,0.00000000,359.99450684); //object(adam_v_door) (6)
	CreateDynamicObject(2922,366.35269165,186.83412170,1020.59741211,0.00000000,0.00000000,180.00000000); //object(kmb_keypad) (1)

	// -= Ambientacion en la Playa =-
	CreateDynamicObject(2404,164.39707947,-1885.73474121,1.21609747,0.00000000,0.00000000,150.00000000); //object(cj_surf_board) (1)
	CreateDynamicObject(2404,163.89328003,-1885.19116211,1.15357602,0.00000000,0.00000000,109.99633789); //object(cj_surf_board) (2)
	CreateDynamicObject(2404,163.50099182,-1884.57653809,1.23369467,0.00000000,0.00000000,129.99511719); //object(cj_surf_board) (3)
	CreateDynamicObject(9237,342.54437256,-1833.14587402,10.81656265,0.00000000,0.00000000,20.00000000); //object(lighhouse_sfn) (1)
	CreateDynamicObject(9245,329.49218750,-1823.23681641,14.93171883,0.00000000,0.00000000,0.00000000); //object(cstguard_sfn01) (1)
	CreateDynamicObject(1610,331.83532715,-1864.76806641,1.96210575,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (1)
	CreateDynamicObject(1610,331.53213501,-1865.33178711,1.94749975,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (2)
	CreateDynamicObject(1610,331.32043457,-1864.82824707,1.96031046,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (3)
	CreateDynamicObject(1610,281.73818970,-1817.12548828,3.17763233,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (4)
	CreateDynamicObject(1610,282.34548950,-1818.14990234,3.15312767,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (5)
	CreateDynamicObject(1610,281.44238281,-1817.81982422,3.15808582,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (6)
	CreateDynamicObject(1610,281.29470825,-1818.92614746,3.12829018,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (7)
	CreateDynamicObject(1611,282.60696411,-1819.72021484,3.11279011,0.00000000,0.00000000,0.00000000); //object(sandcastle2) (1)
	CreateDynamicObject(1611,281.52166748,-1820.43371582,3.08946228,0.00000000,0.00000000,0.00000000); //object(sandcastle2) (2)
	CreateDynamicObject(1611,281.90682983,-1819.15014648,3.12491989,0.00000000,0.00000000,0.00000000); //object(sandcastle2) (3)
	CreateDynamicObject(1637,167.33903503,-1951.87133789,4.05971241,0.00000000,0.00000000,230.00000000); //object(od_pat_hutb) (1)
	CreateDynamicObject(1641,640.46832275,-1854.10803223,4.46093750,0.00000000,0.00000000,0.00000000); //object(beachtowel03) (1)
	CreateDynamicObject(1640,640.37249756,-1858.36914062,4.46093750,0.00000000,0.00000000,0.00000000); //object(beachtowel04) (2)
	CreateDynamicObject(1642,644.58508301,-1856.07775879,4.46093750,0.00000000,0.00000000,0.00000000); //object(beachtowel02) (1)
	CreateDynamicObject(1642,643.44720459,-1856.08886719,4.46093750,0.00000000,0.00000000,0.00000000); //object(beachtowel02) (2)

	// -= Fabrica de Crack =-
	CreateDynamicObject(3029,2577.65869141,-1291.55395508,1043.12500000,0.00000000,0.00000000,0.00000000); //object(cr1_door) (1)
	CreateDynamicObject(3029,2577.59521484,-1288.10595703,1043.12500000,0.00000000,0.00000000,180.00000000); //object(cr1_door) (2)
	CreateDynamicObject(11433,2615.10595703,-1397.93847656,35.76410675,0.00000000,0.00000000,270.00000000); //object(adobe_hoose2) (1)
	CreateDynamicObject(2971,2579.78198242,-1408.61816406,24.21718025,11.75000000,0.00000000,0.00000000); //object(k_smashboxes) (1)
	CreateDynamicObject(1441,2579.82324219,-1416.66271973,23.65164948,0.00000000,0.00000000,280.00000000); //object(dyn_box_pile_4) (1)
	CreateDynamicObject(1441,2579.24414062,-1418.90856934,23.65164948,0.00000000,0.00000000,129.99755859); //object(dyn_box_pile_4) (2)
	CreateDynamicObject(1431,2578.41040039,-1416.81762695,23.54761314,0.00000000,0.00000000,250.00000000); //object(dyn_box_pile) (1)
	CreateDynamicObject(1431,2611.39746094,-1391.26843262,34.28793335,0.00000000,0.00000000,149.99938965); //object(dyn_box_pile) (2)
	CreateDynamicObject(1431,2612.01586914,-1393.09716797,34.43891144,0.00000000,0.00000000,99.99633789); //object(dyn_box_pile) (3)
	CreateDynamicObject(1431,2609.24731445,-1391.05456543,34.27027893,0.00000000,0.00000000,179.99206543); //object(dyn_box_pile) (4)
	CreateDynamicObject(1431,2610.47094727,-1392.39611816,34.38103104,0.00000000,0.00000000,329.98901367); //object(dyn_box_pile) (5)
	CreateDynamicObject(1349,2608.46215820,-1392.48120117,34.41082382,0.00000000,0.00000000,340.00000000); //object(cj_shtrolly) (2)
	CreateDynamicObject(1349,2610.51855469,-1393.96862793,34.53362656,0.00000000,0.00000000,139.99938965); //object(cj_shtrolly) (3)
	CreateDynamicObject(1347,2611.41455078,-1396.24462891,34.71136856,0.00000000,0.00000000,0.00000000); //object(cj_wastebin) (1)
	CreateDynamicObject(1347,2611.75537109,-1398.81140137,34.61024094,0.00000000,0.00000000,0.00000000); //object(cj_wastebin) (2)
	CreateDynamicObject(1347,2583.84399414,-1414.73669434,23.58168221,0.00000000,0.00000000,0.00000000); //object(cj_wastebin) (4)
	CreateDynamicObject(1347,2606.96728516,-1353.91894531,34.31664276,4.17871094,10.52828979,359.22412109); //object(cj_wastebin) (5)
	CreateDynamicObject(1347,2580.56152344,-1348.25781250,35.90709305,6.49841309,0.00000000,0.00000000); //object(cj_wastebin) (6)
	CreateDynamicObject(1347,2632.42333984,-1353.01867676,33.86756134,5.49407959,358.48971558,2.13949585); //object(cj_wastebin) (7)
	CreateDynamicObject(12957,2599.39770508,-1405.75329590,35.94771957,0.00000000,0.00000000,0.00000000); //object(sw_pickupwreck01) (1)
	CreateDynamicObject(1265,2600.64306641,-1406.64221191,35.47858047,0.00000000,0.00000000,0.00000000); //object(blackbag2) (1)
	CreateDynamicObject(1265,2600.64257812,-1406.64160156,35.47858047,0.00000000,0.00000000,0.00000000); //object(blackbag2) (2)
	CreateDynamicObject(1265,2600.81591797,-1407.99816895,35.48643112,0.00000000,0.00000000,0.00000000); //object(blackbag2) (3)
	CreateDynamicObject(1265,2601.02563477,-1407.33215332,35.47992325,0.00000000,0.00000000,0.00000000); //object(blackbag2) (4)
	CreateDynamicObject(1265,2599.47656250,-1403.51159668,35.52506638,0.00000000,0.00000000,0.00000000); //object(blackbag2) (5)
	CreateDynamicObject(1265,2598.67211914,-1403.10681152,35.66256332,0.00000000,0.00000000,0.00000000); //object(blackbag2) (6)
	CreateDynamicObject(1265,2599.31176758,-1402.25085449,35.55323410,0.00000000,0.00000000,0.00000000); //object(blackbag2) (7)
	CreateDynamicObject(1265,2599.74633789,-1402.91320801,35.47895432,0.00000000,0.00000000,0.00000000); //object(blackbag2) (8)
	CreateDynamicObject(1265,2611.99243164,-1394.60925293,34.48517227,0.00000000,0.00000000,0.00000000); //object(blackbag2) (9)
	CreateDynamicObject(1265,2611.21484375,-1394.62841797,34.48675156,0.00000000,0.00000000,0.00000000); //object(blackbag2) (10)
	CreateDynamicObject(1265,2611.43994141,-1395.40637207,34.55097580,0.00000000,0.00000000,0.00000000); //object(blackbag2) (11)
	CreateDynamicObject(1265,2580.82421875,-1415.63940430,23.46904373,0.00000000,0.00000000,0.00000000); //object(blackbag2) (12)
	CreateDynamicObject(1265,2580.18725586,-1414.98901367,23.46904373,0.00000000,0.00000000,0.00000000); //object(blackbag2) (13)
	CreateDynamicObject(1265,2578.86157227,-1415.56359863,23.46904373,0.00000000,0.00000000,0.00000000); //object(blackbag2) (14)
	CreateDynamicObject(1265,2579.40551758,-1415.01501465,23.46904373,0.00000000,0.00000000,0.00000000); //object(blackbag2) (15)
	CreateDynamicObject(3877,2606.83837891,-1355.21374512,35.43122864,0.00000000,0.00000000,0.00000000); //object(sf_rooflite) (1)
	CreateDynamicObject(16089,2603.28857422,-1364.45837402,34.18356323,0.00000000,0.00000000,90.00000000); //object(des_pipestrut02) (1)
	CreateDynamicObject(16089,2603.20556641,-1375.23107910,34.19335938,0.00000000,0.00000000,90.00000000); //object(des_pipestrut02) (2)
	CreateDynamicObject(16089,2602.94921875,-1383.34143066,34.31224060,0.00000000,0.00000000,90.00000000); //object(des_pipestrut02) (3)
	CreateDynamicObject(16089,2586.79199219,-1412.02832031,24.41191673,0.00000000,0.00000000,2.00000000); //object(des_pipestrut02) (4)
	CreateDynamicObject(16089,2590.27661133,-1411.04748535,25.80319405,0.00000000,0.00000000,1.99951172); //object(des_pipestrut02) (5)
	CreateDynamicObject(16089,2596.56982422,-1410.82824707,27.99130249,0.00000000,0.00000000,1.99951172); //object(des_pipestrut02) (6)
	CreateDynamicObject(929,2598.96435547,-1399.66052246,36.10465240,0.00000000,0.00000000,0.00000000); //object(generator) (1)
	CreateDynamicObject(1689,2616.03295898,-1404.50158691,34.90619278,0.00000000,0.00000000,90.00000000); //object(gen_roofbit3) (2)
	CreateDynamicObject(2653,2599.76391602,-1384.09143066,41.75511551,0.00000000,0.00000000,270.00000000); //object(cj_aircon3) (1)
	CreateDynamicObject(2653,2606.53100586,-1384.09143066,41.75511551,0.00000000,0.00000000,270.00000000); //object(cj_aircon3) (2)
	CreateDynamicObject(2653,2604.86230469,-1374.48107910,41.63623428,0.00000000,0.00000000,270.00000000); //object(cj_aircon3) (3)
	CreateDynamicObject(2653,2599.55053711,-1374.48107910,41.63623428,0.00000000,0.00000000,270.00000000); //object(cj_aircon3) (4)
	CreateDynamicObject(3675,2633.31933594,-1418.73962402,36.27151871,0.00000000,0.00000000,89.99841309); //object(laxrf_refinerypipe) (7)
	CreateDynamicObject(3675,2633.46093750,-1424.56542969,36.27521515,0.00000000,0.00000000,89.99450684); //object(laxrf_refinerypipe) (9)
	CreateDynamicObject(3675,2633.40747070,-1430.40551758,36.28560638,0.00000000,0.00000000,89.99450684); //object(laxrf_refinerypipe) (10)
	CreateDynamicObject(10675,2512.89965820,-1528.85974121,26.20521545,0.00000000,0.00000000,0.00000000); //object(elecstionv_sfs) (1)
	CreateDynamicObject(10675,2527.56396484,-1528.84790039,26.17414665,0.00000000,0.00000000,0.00000000); //object(elecstionv_sfs) (2)
	CreateDynamicObject(2672,2535.83032227,-1320.97192383,1030.70129395,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_4) (1)
	CreateDynamicObject(2672,2537.53759766,-1319.67749023,1030.70129395,0.00000000,0.00000000,260.00000000); //object(proc_rubbish_4) (2)
	CreateDynamicObject(2674,2533.46899414,-1320.30981445,1030.44360352,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_2) (1)
	CreateDynamicObject(1264,2536.73046875,-1321.98339844,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (1)
	CreateDynamicObject(1264,2536.76635742,-1321.16015625,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (2)
	CreateDynamicObject(1264,2536.43310547,-1321.68664551,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (3)
	CreateDynamicObject(1264,2524.54370117,-1299.67211914,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (4)
	CreateDynamicObject(1264,2523.38623047,-1299.52758789,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (5)
	CreateDynamicObject(1264,2523.10937500,-1297.10595703,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (6)
	CreateDynamicObject(1264,2523.48583984,-1298.80517578,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (7)
	CreateDynamicObject(1264,2523.92089844,-1297.97949219,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (8)
	CreateDynamicObject(1264,2523.59277344,-1296.27612305,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (9)
	CreateDynamicObject(1264,2524.17919922,-1296.69604492,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (10)
	CreateDynamicObject(1264,2523.86987305,-1297.28710938,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (11)
	CreateDynamicObject(1264,2524.41406250,-1298.90087891,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (12)
	CreateDynamicObject(1264,2524.36743164,-1297.91052246,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (13)
	CreateDynamicObject(1264,2523.97607422,-1297.51293945,1031.57739258,0.00000000,0.00000000,0.00000000); //object(blackbag1) (14)
	CreateDynamicObject(1264,2523.92626953,-1299.89843750,1031.02429199,0.00000000,0.00000000,0.00000000); //object(blackbag1) (15)
	CreateDynamicObject(1264,2523.25244141,-1299.89843750,1031.61584473,0.00000000,0.00000000,0.00000000); //object(blackbag1) (20)
	CreateDynamicObject(1264,2523.89404297,-1299.76318359,1031.81494141,0.00000000,0.00000000,0.00000000); //object(blackbag1) (21)
	CreateDynamicObject(1264,2524.12475586,-1299.89843750,1031.44409180,0.00000000,0.00000000,0.00000000); //object(blackbag1) (22)
	CreateDynamicObject(1264,2524.16650391,-1299.81127930,1031.29150391,0.00000000,0.00000000,0.00000000); //object(blackbag1) (23)
	CreateDynamicObject(1264,2523.48632812,-1299.31298828,1031.34326172,0.00000000,0.00000000,0.00000000); //object(blackbag1) (24)
	CreateDynamicObject(1264,2524.37841797,-1299.27954102,1031.61315918,0.00000000,0.00000000,0.00000000); //object(blackbag1) (25)
	CreateDynamicObject(1264,2523.55908203,-1299.04492188,1031.78979492,0.00000000,0.00000000,0.00000000); //object(blackbag1) (26)
	CreateDynamicObject(1264,2523.40917969,-1299.71899414,1032.27185059,0.00000000,0.00000000,0.00000000); //object(blackbag1) (27)
	CreateDynamicObject(1264,2523.00000000,-1298.78149414,1030.89404297,0.00000000,0.00000000,0.00000000); //object(blackbag1) (28)
	CreateDynamicObject(1264,2523.63720703,-1298.60205078,1031.31506348,0.00000000,0.00000000,0.00000000); //object(blackbag1) (30)
	CreateDynamicObject(1264,2524.39648438,-1298.14355469,1031.64160156,0.00000000,0.00000000,0.00000000); //object(blackbag1) (31)
	CreateDynamicObject(3029,2522.59204102,-1303.38842773,1047.28906250,0.00000000,0.00000000,0.00000000); //object(cr1_door) (1)
	CreateDynamicObject(3029,2578.01733398,-1303.65710449,1036.77343750,0.00000000,0.00000000,180.00000000); //object(cr1_door) (2)
	CreateDynamicObject(934,2548.36840820,-1293.41027832,1044.45324707,0.00000000,0.00000000,90.00000000); //object(generator_big) (1)
	CreateDynamicObject(958,2548.23217773,-1292.69921875,1044.00183105,0.00000000,0.00000000,0.00000000); //object(cj_chip_maker) (1)
	CreateDynamicObject(959,2548.23364258,-1292.70715332,1043.99084473,0.00000000,0.00000000,0.00000000); //object(cj_chip_maker_bits) (1)
	CreateDynamicObject(1689,2534.97241211,-1305.77990723,1044.33593750,0.00000000,0.00000000,0.00000000); //object(gen_roofbit3) (3)
	CreateDynamicObject(3287,2535.00463867,-1306.63757324,1044.98864746,0.00000000,0.00000000,0.00000000); //object(cxrf_oiltank) (2)
	CreateDynamicObject(3029,2522.51171875,-1299.98535156,1047.28906250,0.00000000,0.00000000,179.99450684); //object(cr1_door) (3)
	CreateDynamicObject(3029,2578.09960938,-1307.14147949,1036.77343750,0.00000000,0.00000000,359.99450684); //object(cr1_door) (4)
	CreateDynamicObject(16666,2578.79003906,-1293.73120117,1043.12500000,0.00000000,0.00000000,268.00000000); //object(a51_machines) (1)
	CreateDynamicObject(3675,2534.06909180,-1304.14233398,1042.00524902,0.00000000,0.00000000,180.00000000); //object(laxrf_refinerypipe) (17)
	CreateDynamicObject(2780,2532.52416992,-1305.19335938,1040.77209473,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (4)
	CreateDynamicObject(3525,2537.26733398,-1305.93334961,1042.51770020,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (1)
	CreateDynamicObject(3525,2537.64013672,-1305.96008301,1042.51770020,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (2)
	CreateDynamicObject(3525,2537.16650391,-1305.92517090,1042.51770020,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (3)
	CreateDynamicObject(3525,2537.16601562,-1305.92480469,1042.86804199,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (4)
	CreateDynamicObject(3525,2537.58935547,-1305.95593262,1042.86804199,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (5)
	CreateDynamicObject(3525,2537.86279297,-1305.97521973,1042.86804199,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (6)
	CreateDynamicObject(3525,2611.66918945,-1398.79516602,33.93717575,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (7)
	CreateDynamicObject(3525,2611.38769531,-1396.26440430,33.93717575,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (8)
	CreateDynamicObject(3525,2632.43286133,-1353.01757812,33.15905380,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (9)
	CreateDynamicObject(3525,2580.42456055,-1348.23937988,35.35342789,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (10)
	CreateDynamicObject(3525,2606.98510742,-1354.00561523,33.64469910,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (11)
	CreateDynamicObject(3525,2583.77978516,-1414.77368164,23.05864143,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (12)

	// -= Departamento de Policia de Los Santos =-
	CreateDynamicObject(3049,1547.42285156,-1632.45214844,14.62494659,0.00000000,0.00000000,90.00000000); //object(des_quarrygate)(3)
	CreateDynamicObject(3049,1547.38012695,-1636.88391113,14.72191906,0.00000000,0.00000000,90.00000000); //object(des_quarrygate)(4)
	CreateDynamicObject(3049,1547.37988281,-1636.88378906,17.99691582,0.00000000,0.00000000,90.00000000); //object(des_quarrygate)(5)
	CreateDynamicObject(3049,1547.42285156,-1632.45214844,17.84995842,0.00000000,0.00000000,90.00000000); //object(des_quarrygate)(6)
	CreateDynamicObject(3049,1547.23535156,-1617.87792969,17.97169685,0.00000000,0.00000000,90.00000000); //object(des_quarrygate)(8)
	CreateDynamicObject(3049,1547.23535156,-1617.87792969,14.79669571,0.00000000,0.00000000,90.00000000); //object(des_quarrygate)(9)
	CreateDynamicObject(3089,1582.62548828,-1637.93566895,13.70856667,0.00000000,0.00000000,0.00000000); //object(ab_casdorlok)(1)
	CreateDynamicObject(3089,1577.26428223,-1637.31884766,13.89500332,0.00000000,0.00000000,90.00000000); //object(ab_casdorlok)(2)
	CreateDynamicObject(1418,1544.81396484,-1617.73449707,16.70034981,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(1)
	CreateDynamicObject(1418,1539.66857910,-1612.63623047,16.69925308,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_3)(2)
	CreateDynamicObject(1418,1539.63696289,-1615.95019531,16.69925308,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_3)(3)
	CreateDynamicObject(1418,1547.71826172,-1617.73205566,16.70034981,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(4)
	CreateDynamicObject(1418,1541.38281250,-1617.74218750,16.70034981,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(5)
	CreateDynamicObject(1418,1539.68017578,-1609.20568848,16.69925308,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_3)(6)
	CreateDynamicObject(1418,1539.77587891,-1605.74902344,16.69925308,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_3)(7)
	CreateDynamicObject(1418,1539.77160645,-1603.95971680,16.69925308,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_3)(8)
	CreateDynamicObject(1418,1541.51721191,-1602.29528809,16.68716621,0.00000000,0.00000000,180.00000000); //object(dyn_f_wood_3)(9)
	CreateDynamicObject(1418,1544.93872070,-1602.30981445,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(10)
	CreateDynamicObject(1418,1548.46630859,-1602.29248047,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(11)
	CreateDynamicObject(1418,1551.87158203,-1602.52905273,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(12)
	CreateDynamicObject(1418,1555.35620117,-1602.47460938,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(13)
	CreateDynamicObject(1418,1558.80139160,-1602.47595215,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(14)
	CreateDynamicObject(1418,1562.31213379,-1602.43591309,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(15)
	CreateDynamicObject(1418,1565.72753906,-1602.45654297,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(16)
	CreateDynamicObject(1418,1569.22485352,-1602.45043945,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(17)
	CreateDynamicObject(1418,1572.77368164,-1602.49218750,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(18)
	CreateDynamicObject(1418,1576.13928223,-1602.48571777,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(19)
	CreateDynamicObject(1418,1579.53076172,-1602.47949219,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(20)
	CreateDynamicObject(1418,1582.94116211,-1602.47326660,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(21)
	CreateDynamicObject(1418,1586.37280273,-1602.44653320,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(22)
	CreateDynamicObject(1418,1589.81262207,-1602.43969727,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(23)
	CreateDynamicObject(1418,1593.28881836,-1602.38427734,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(24)
	CreateDynamicObject(1418,1596.74682617,-1602.37609863,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(25)
	CreateDynamicObject(1418,1600.20898438,-1602.38903809,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(26)
	CreateDynamicObject(1418,1603.67639160,-1602.38024902,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(27)
	CreateDynamicObject(1418,1608.04858398,-1604.15893555,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(28)
	CreateDynamicObject(1418,1550.22082520,-1602.48376465,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(29)
	CreateDynamicObject(1418,1606.29785156,-1602.38378906,16.68716621,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_3)(30)
	CreateDynamicObject(1418,1608.08825684,-1607.60583496,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(31)
	CreateDynamicObject(1418,1608.06652832,-1611.02355957,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(32)
	CreateDynamicObject(1418,1608.06774902,-1614.39978027,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(33)
	CreateDynamicObject(1418,1608.07043457,-1617.95910645,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(34)
	CreateDynamicObject(1418,1608.10583496,-1621.38952637,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(35)
	CreateDynamicObject(1418,1608.09643555,-1624.72644043,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(36)
	CreateDynamicObject(1418,1608.10791016,-1628.19104004,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(37)
	CreateDynamicObject(1418,1608.11621094,-1631.64392090,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(38)
	CreateDynamicObject(1418,1608.08764648,-1635.12988281,16.69776344,0.00000000,0.00000000,89.99450684); //object(dyn_f_wood_3)(39)
	CreateDynamicObject(1418,1604.39465332,-1637.92346191,16.69084549,0.00000000,0.00000000,359.99450684); //object(dyn_f_wood_3)(40)
	CreateDynamicObject(1418,1606.21923828,-1637.92968750,16.69084549,0.00000000,0.00000000,359.98901367); //object(dyn_f_wood_3)(41)
	CreateDynamicObject(1418,1608.02307129,-1636.32031250,16.69776344,0.00000000,0.00000000,89.98901367); //object(dyn_f_wood_3)(42)
	CreateDynamicObject(1569,1567.05395508,-1689.59729004,5.20248079,0.00000000,0.00000000,0.00000000); //object(adam_v_door)(1)
	CreateDynamicObject(1569,1566.40075684,-1667.32702637,27.39560699,0.00000000,0.00000000,180.00000000); //object(adam_v_door)(2)
	CreateDynamicObject(1569,1570.03222656,-1689.58105469,5.20248079,0.00000000,0.00000000,179.99450684); //object(adam_v_door)(3)
	CreateDynamicObject(1569,1563.38818359,-1667.32495117,27.39560699,0.00000000,0.00000000,359.99450684); //object(adam_v_door)(4)
	CreateDynamicObject(3934,1564.02868652,-1642.70581055,27.40211487,0.00000000,0.00000000,0.00000000); //object(helipad01)(1)
	CreateDynamicObject(3934,1563.94396973,-1655.07092285,27.39560699,0.00000000,0.00000000,0.00000000); //object(helipad01)(2)
	CreateDynamicObject(1238,1576.68139648,-1622.68176270,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(6)
	CreateDynamicObject(1238,1575.13513184,-1622.61828613,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(7)
	CreateDynamicObject(1238,1573.14831543,-1622.56750488,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(8)
	CreateDynamicObject(1238,1570.98522949,-1622.66467285,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(9)
	CreateDynamicObject(1238,1569.05261230,-1622.74182129,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(10)
	CreateDynamicObject(1215,1592.39428711,-1637.75170898,13.11385441,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1577.17663574,-1617.64843750,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
	CreateDynamicObject(1215,1577.16857910,-1622.73547363,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,1547.58459473,-1632.66650391,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1547.59692383,-1622.96142578,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1216,1539.28930664,-1603.61645508,13.23887730,0.00000000,0.00000000,270.00000000); //object(phonebooth1)(2)
	CreateDynamicObject(1216,1539.25158691,-1604.23168945,13.23887730,0.00000000,0.00000000,270.00000000); //object(phonebooth1)(3)
	CreateDynamicObject(1216,1539.28527832,-1604.82519531,13.23887730,0.00000000,0.00000000,270.00000000); //object(phonebooth1)(4)
	CreateDynamicObject(1216,1539.27124023,-1605.40612793,13.23887730,0.00000000,0.00000000,270.00000000); //object(phonebooth1)(5)
	CreateDynamicObject(1257,1547.42126465,-1598.45043945,13.82606697,0.00000000,0.00000000,270.00000000); //object(bustopm)(1)
	CreateDynamicObject(1215,1578.99182129,-1620.34387207,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(1215,1584.85925293,-1637.71228027,12.95478249,0.00000000,0.00000000,0.00000000); //object(bollardlight)(8)
	CreateDynamicObject(1215,1573.27270508,-1697.81506348,5.78307343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1215,1588.16040039,-1697.46081543,5.78307343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1215,1588.55310059,-1682.43957520,5.78951931,0.00000000,0.00000000,0.00000000); //object(bollardlight)(13)
	CreateDynamicObject(1215,1605.94689941,-1706.31726074,5.78307343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(14)
	CreateDynamicObject(1215,1597.44531250,-1715.10449219,5.78307343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(15)
	CreateDynamicObject(1215,1606.00329590,-1681.95556641,5.78307343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(16)
	CreateDynamicObject(3850,1565.50451660,-1632.88171387,13.10520840,0.00000000,0.00000000,90.00000000); //object(carshowbann_sfsx)(2)
	CreateDynamicObject(3850,1562.06311035,-1632.89233398,13.10518265,0.00000000,0.00000000,90.00000000); //object(carshowbann_sfsx)(3)
	CreateDynamicObject(3850,1558.62817383,-1632.90393066,13.10515404,0.00000000,0.00000000,90.00000000); //object(carshowbann_sfsx)(4)
	CreateDynamicObject(3850,1575.43579102,-1632.91088867,13.10513687,0.00000000,0.00000000,90.00000000); //object(carshowbann_sfsx)(5)
	CreateDynamicObject(3850,1568.91308594,-1632.86804199,13.10524178,0.00000000,0.00000000,90.00000000); //object(carshowbann_sfsx)(6)
	CreateDynamicObject(3850,1555.22558594,-1632.89758301,13.10516930,0.00000000,0.00000000,90.00000000); //object(carshowbann_sfsx)(7)
	CreateDynamicObject(3850,1552.37145996,-1634.20837402,13.10191154,0.00000000,0.00000000,140.00000000); //object(carshowbann_sfsx)(8)
	CreateDynamicObject(3850,1551.25439453,-1637.24853516,13.10163689,0.00000000,0.00000000,179.99877930); //object(carshowbann_sfsx)(9)
	CreateDynamicObject(1238,1573.72338867,-1632.79846191,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone)(12)
	CreateDynamicObject(1238,1570.65856934,-1632.68823242,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone)(13)
	CreateDynamicObject(1238,1584.40368652,-1637.36181641,12.70863914,0.00000000,0.00000000,0.00000000); //object(trafficcone)(14)
	CreateDynamicObject(1238,1592.47399902,-1637.31091309,12.86239147,0.00000000,0.00000000,0.00000000); //object(trafficcone)(15)
	CreateDynamicObject(1238,1592.77929688,-1635.92395020,12.83912373,0.00000000,0.00000000,0.00000000); //object(trafficcone)(16)
	CreateDynamicObject(1238,1593.36743164,-1634.72204590,12.82862949,0.00000000,0.00000000,0.00000000); //object(trafficcone)(17)
	CreateDynamicObject(1238,1594.27343750,-1633.93298340,12.83062840,0.00000000,0.00000000,0.00000000); //object(trafficcone)(18)
	CreateDynamicObject(1238,1595.43945312,-1633.03112793,12.83514595,0.00000000,0.00000000,0.00000000); //object(trafficcone)(19)
	CreateDynamicObject(1238,1584.50061035,-1635.98205566,12.70863914,0.00000000,0.00000000,0.00000000); //object(trafficcone)(20)
	CreateDynamicObject(1238,1584.59191895,-1634.94677734,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone)(22)
	CreateDynamicObject(1238,1584.61926270,-1633.88000488,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone)(23)
	CreateDynamicObject(1238,1590.26171875,-1664.57678223,5.27808905,0.00000000,0.00000000,0.00000000); //object(trafficcone)(24)
	CreateDynamicObject(1238,1590.14147949,-1665.28417969,5.21534204,0.00000000,0.00000000,0.00000000); //object(trafficcone)(25)
	CreateDynamicObject(1238,1589.74584961,-1665.74060059,5.20726633,0.00000000,0.00000000,0.00000000); //object(trafficcone)(26)
	CreateDynamicObject(1238,1588.96667480,-1665.77551270,5.20783710,0.00000000,0.00000000,0.00000000); //object(trafficcone)(27)
	CreateDynamicObject(1238,1604.27868652,-1664.67187500,5.26286793,0.00000000,0.00000000,0.00000000); //object(trafficcone)(28)
	CreateDynamicObject(1238,1604.45629883,-1665.62231445,5.20731401,0.00000000,0.00000000,0.00000000); //object(trafficcone)(29)
	CreateDynamicObject(1238,1604.81530762,-1666.32214355,5.20677662,0.00000000,0.00000000,0.00000000); //object(trafficcone)(30)
	CreateDynamicObject(1238,1605.55883789,-1666.39770508,5.20817804,0.00000000,0.00000000,0.00000000); //object(trafficcone)(31)
	CreateDynamicObject(1238,1585.39392090,-1698.00671387,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(32)
	CreateDynamicObject(1238,1586.38830566,-1697.97949219,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(33)
	CreateDynamicObject(1238,1587.29785156,-1697.71362305,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(34)
	CreateDynamicObject(1238,1588.54907227,-1696.78417969,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(35)
	CreateDynamicObject(1238,1588.92443848,-1695.88427734,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(36)
	CreateDynamicObject(1238,1588.94970703,-1694.85144043,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(37)
	CreateDynamicObject(1238,1605.90100098,-1709.83850098,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(38)
	CreateDynamicObject(1238,1605.43041992,-1711.05554199,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(39)
	CreateDynamicObject(1238,1605.04296875,-1712.16918945,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(40)
	CreateDynamicObject(1238,1604.15673828,-1713.15710449,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(41)
	CreateDynamicObject(1238,1603.27795410,-1714.00830078,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(42)
	CreateDynamicObject(1238,1601.90734863,-1714.59130859,5.54337645,0.00000000,0.00000000,0.00000000); //object(trafficcone)(43)
	CreateDynamicObject(1238,1600.72143555,-1715.10986328,5.54337645,0.00000000,0.00000000,0.00000000); //object(trafficcone)(44)
	CreateDynamicObject(1238,1573.09436035,-1696.39147949,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(45)
	CreateDynamicObject(1238,1573.10986328,-1697.24633789,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(46)
	CreateDynamicObject(1238,1573.85290527,-1697.98242188,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(47)
	CreateDynamicObject(1238,1574.66784668,-1697.99670410,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(48)
	CreateDynamicObject(1238,1588.99304199,-1683.99047852,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(49)
	CreateDynamicObject(1238,1588.98181152,-1683.09436035,5.53693008,0.00000000,0.00000000,0.00000000); //object(trafficcone)(50)
	CreateDynamicObject(1238,1587.77661133,-1682.22644043,5.54337645,0.00000000,0.00000000,0.00000000); //object(trafficcone)(51)
	CreateDynamicObject(1238,1586.83398438,-1682.16760254,5.54337645,0.00000000,0.00000000,0.00000000); //object(trafficcone)(52)
	CreateDynamicObject(1215,1560.05737305,-1639.32934570,27.34144783,0.00000000,0.00000000,0.00000000); //object(bollardlight)(18)
	CreateDynamicObject(1215,1567.78759766,-1639.36340332,27.34144783,0.00000000,0.00000000,0.00000000); //object(bollardlight)(19)
	CreateDynamicObject(1215,1560.03405762,-1646.18115234,27.34144783,0.00000000,0.00000000,0.00000000); //object(bollardlight)(20)
	CreateDynamicObject(1215,1567.81408691,-1646.25463867,27.31644821,0.00000000,0.00000000,0.00000000); //object(bollardlight)(21)
	CreateDynamicObject(1215,1559.93774414,-1658.61059570,27.33493996,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1567.70849609,-1658.63513184,27.30994034,0.00000000,0.00000000,0.00000000); //object(bollardlight)(23)
	CreateDynamicObject(1215,1567.65783691,-1651.75817871,27.30994034,0.00000000,0.00000000,0.00000000); //object(bollardlight)(24)
	CreateDynamicObject(1215,1559.97766113,-1651.75427246,27.33493996,0.00000000,0.00000000,0.00000000); //object(bollardlight)(25)
	CreateDynamicObject(3526,1559.99633789,-1653.42517090,27.46402550,0.00000000,0.00000000,180.00000000); //object(vegasairportlight)(1)
	CreateDynamicObject(3526,1559.99450684,-1656.96533203,27.46402550,0.00000000,0.00000000,179.99450684); //object(vegasairportlight)(2)
	CreateDynamicObject(3526,1560.03552246,-1641.01672363,27.47053337,0.00000000,0.00000000,179.99450684); //object(vegasairportlight)(3)
	CreateDynamicObject(3526,1560.04357910,-1644.62719727,27.47053337,0.00000000,0.00000000,179.99450684); //object(vegasairportlight)(4)
	CreateDynamicObject(3526,1567.69763184,-1656.89868164,27.46402550,0.00000000,0.00000000,1.99450684); //object(vegasairportlight)(5)
	CreateDynamicObject(3526,1567.71630859,-1653.34277344,27.46402550,0.00000000,0.00000000,1.99401855); //object(vegasairportlight)(6)
	CreateDynamicObject(3526,1567.84716797,-1644.53613281,27.47053337,0.00000000,0.00000000,1.99401855); //object(vegasairportlight)(7)
	CreateDynamicObject(3526,1567.79260254,-1641.04772949,27.47053337,0.00000000,0.00000000,1.99401855); //object(vegasairportlight)(8)
	CreateDynamicObject(3526,1561.73046875,-1658.75659180,27.46402550,0.00000000,0.00000000,89.99401855); //object(vegasairportlight)(9)
	CreateDynamicObject(3526,1561.79443359,-1646.34497070,27.47053337,0.00000000,0.00000000,89.98901367); //object(vegasairportlight)(10)
	CreateDynamicObject(3526,1566.12219238,-1646.39025879,27.47053337,0.00000000,0.00000000,89.98901367); //object(vegasairportlight)(11)
	CreateDynamicObject(3526,1566.12548828,-1658.78295898,27.46402550,0.00000000,0.00000000,89.98901367); //object(vegasairportlight)(12)
	CreateDynamicObject(3526,1561.65185547,-1651.57434082,27.46402550,0.00000000,0.00000000,269.98901367); //object(vegasairportlight)(13)
	CreateDynamicObject(3526,1566.10949707,-1651.60888672,27.46402550,0.00000000,0.00000000,269.98901367); //object(vegasairportlight)(14)
	CreateDynamicObject(3526,1561.77185059,-1639.16809082,27.47053337,0.00000000,0.00000000,269.98901367); //object(vegasairportlight)(15)
	CreateDynamicObject(3526,1566.13427734,-1639.13720703,27.47053337,0.00000000,0.00000000,269.98901367); //object(vegasairportlight)(16)
	CreateDynamicObject(3666,1542.75903320,-1637.38964844,27.16581154,0.00000000,0.00000000,0.00000000); //object(airuntest_las)(1)
	CreateDynamicObject(3666,1542.71716309,-1650.63549805,27.06581306,0.00000000,0.00000000,0.00000000); //object(airuntest_las)(2)
	CreateDynamicObject(3666,1577.76696777,-1637.50817871,27.11581230,0.00000000,0.00000000,0.00000000); //object(airuntest_las)(3)
	CreateDynamicObject(1569,245.30969238,62.09825897,1002.64062500,0.00000000,0.00000000,0.00000000); //object(adam_v_door)(5)
	CreateDynamicObject(1569,258.88629150,85.09121704,1001.44531250,0.00000000,0.00000000,90.00000000); //object(adam_v_door)(6)
	CreateDynamicObject(2930,250.68835449,70.25926208,1006.48059082,0.00000000,0.00000000,0.00000000); //object(chinatgate)(1)
	CreateDynamicObject(2930,250.68661499,68.63360596,1006.48059082,0.00000000,0.00000000,0.00000000); //object(chinatgate)(2)
	CreateDynamicObject(2930,250.68481445,66.95758057,1006.48059082,0.00000000,0.00000000,0.00000000); //object(chinatgate)(3)
	CreateDynamicObject(1569,248.28320312,62.10839844,1002.64062500,0.00000000,0.00000000,179.99450684); //object(adam_v_door)(7)
	CreateDynamicObject(1569,258.86422729,88.03244019,1001.44531250,0.00000000,0.00000000,270.00000000); //object(adam_v_door)(8)
	CreateDynamicObject(1671,252.23876953,83.82056427,1001.90551758,0.00000000,0.00000000,180.00000000); //object(swivelchair_a)(1)
	CreateDynamicObject(1671,255.59442139,83.43107605,1001.90551758,0.00000000,0.00000000,159.99572754); //object(swivelchair_a)(2)
	CreateDynamicObject(2008,251.33691406,84.83926392,1001.44531250,0.00000000,0.00000000,0.00000000); //object(officedesk1)(1)
	CreateDynamicObject(2008,253.30058289,84.83101654,1001.44531250,0.00000000,0.00000000,0.00000000); //object(officedesk1)(2)
	CreateDynamicObject(1671,254.28819275,83.73998260,1001.90551758,0.00000000,0.00000000,179.99084473); //object(swivelchair_a)(4)
	CreateDynamicObject(2008,255.08425903,84.69614410,1001.44531250,0.00000000,0.00000000,340.00000000); //object(officedesk1)(4)
	CreateDynamicObject(2922,258.89843750,88.20301056,1002.96496582,0.00000000,0.00000000,80.00000000); //object(kmb_keypad)(1)
	CreateDynamicObject(2922,245.22082520,72.89062500,1004.08392334,0.00000000,0.00000000,349.99694824); //object(kmb_keypad)(2)
	CreateDynamicObject(2922,245.26139832,72.32812500,1004.09020996,0.00000000,0.00000000,179.99145508); //object(kmb_keypad)(3)
	CreateDynamicObject(2921,270.34863281,75.33593750,1002.76025391,0.00000000,0.00000000,350.00000000); //object(kmb_cam)(1)
	CreateDynamicObject(2921,259.39483643,72.91214752,1005.44946289,0.00000000,0.00000000,340.00000000); //object(kmb_cam)(2)
	CreateDynamicObject(2921,241.23225403,82.58593750,1006.67388916,0.00000000,0.00000000,89.99938965); //object(kmb_cam)(3)
	CreateDynamicObject(2207,218.83934021,76.75905609,1004.03906250,0.00000000,0.00000000,180.00000000); //object(med_office7_desk_1)(1)
	CreateDynamicObject(2308,215.35734558,74.33714294,1004.03906250,0.00000000,0.00000000,90.00000000); //object(med_office4_desk_4)(1)
	CreateDynamicObject(2206,214.27073669,76.31957245,1003.88891602,0.00000000,0.00000000,90.00000000); //object(med_office8_desk_02)(1)
	CreateDynamicObject(2206,214.24894714,79.09823608,1003.88891602,0.00000000,0.00000000,90.00000000); //object(med_office8_desk_02)(2)
	CreateDynamicObject(2008,251.38540649,65.05143738,1002.64062500,0.00000000,0.00000000,90.00000000); //object(officedesk1)(5)
	CreateDynamicObject(2008,251.39106750,66.97344971,1002.64062500,0.00000000,0.00000000,90.00000000); //object(officedesk1)(6)
	CreateDynamicObject(2008,251.38194275,68.93395233,1002.64062500,0.00000000,0.00000000,90.00000000); //object(officedesk1)(7)
	CreateDynamicObject(2008,251.38017273,70.85660553,1002.64062500,0.00000000,0.00000000,90.00000000); //object(officedesk1)(8)
	CreateDynamicObject(1671,252.36871338,66.00993347,1003.10083008,0.00000000,0.00000000,270.00000000); //object(swivelchair_a)(5)
	CreateDynamicObject(1671,252.38066101,67.90422058,1003.10083008,0.00000000,0.00000000,270.00000000); //object(swivelchair_a)(6)
	CreateDynamicObject(1671,252.44633484,69.97928619,1003.10083008,0.00000000,0.00000000,270.00000000); //object(swivelchair_a)(7)
	CreateDynamicObject(1723,243.05259705,62.79518127,1002.64062500,0.00000000,0.00000000,90.00000000); //object(mrk_seating1)(1)
	CreateDynamicObject(1723,242.79864502,68.83214569,1002.64062500,0.00000000,0.00000000,90.00000000); //object(mrk_seating1)(2)
	CreateDynamicObject(1724,243.33142090,71.74203491,1002.64062500,0.00000000,0.00000000,0.00000000); //object(mrk_seating1b)(1)
	CreateDynamicObject(2374,253.01278687,80.83593750,1004.98388672,0.00000000,0.00000000,0.00000000); //object(cj_tshirt)(1)
	CreateDynamicObject(2374,252.98776245,80.83593750,1004.10455322,0.00000000,0.00000000,0.00000000); //object(cj_tshirt)(2)
	CreateDynamicObject(2377,253.55282593,80.83593750,1004.07458496,0.00000000,0.00000000,0.00000000); //object(cj_jean_dark)(1)
	CreateDynamicObject(2377,253.56776428,80.83593750,1005.10388184,0.00000000,0.00000000,0.00000000); //object(cj_jean_dark)(2)
	CreateDynamicObject(2384,253.04666138,80.60324860,1003.24560547,0.00000000,0.00000000,0.00000000); //object(cj_8_jeans_dark)(1)
	CreateDynamicObject(2384,253.53044128,80.58859253,1003.24560547,0.00000000,0.00000000,0.00000000); //object(cj_8_jeans_dark)(2)
	CreateDynamicObject(2846,254.92286682,78.00425720,1002.64062500,0.00000000,0.00000000,340.00000000); //object(gb_bedclothes05)(1)
	CreateDynamicObject(2846,257.21994019,75.52366638,1002.64062500,0.00000000,0.00000000,80.00000000); //object(gb_bedclothes05)(2)
	CreateDynamicObject(2053,252.54672241,78.81929779,1003.20178223,0.00000000,0.00000000,70.00000000); //object(cj_jerry_hat)(1)
	CreateDynamicObject(2053,252.51950073,79.11333466,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(2)
	CreateDynamicObject(2053,252.52079773,79.40850830,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(3)
	CreateDynamicObject(2053,252.52279663,79.71816254,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(4)
	CreateDynamicObject(2053,252.53524780,80.03409576,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(5)
	CreateDynamicObject(2053,252.55606079,80.39560699,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(6)
	CreateDynamicObject(2053,252.73271179,78.96809387,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(7)
	CreateDynamicObject(2053,252.73564148,79.29362488,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(8)
	CreateDynamicObject(2053,252.74053955,79.59357452,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(9)
	CreateDynamicObject(2053,252.74171448,79.90465546,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(10)
	CreateDynamicObject(2053,252.74591064,80.20289612,1003.20178223,0.00000000,0.00000000,69.99938965); //object(cj_jerry_hat)(11)
	CreateDynamicObject(2391,254.16288757,80.83593750,1004.06451416,0.00000000,0.00000000,0.00000000); //object(cj_jean_cream)(1)
	CreateDynamicObject(2399,254.16519165,80.83593750,1005.05004883,0.00000000,0.00000000,0.00000000); //object(cj_4_s_sweater_2)(1)
	CreateDynamicObject(1672,235.28866577,75.01053619,1004.98370361,0.00000000,0.00000000,330.00000000); //object(gasgrenade)(1)
	CreateDynamicObject(1672,235.22433472,75.24486542,1004.93365479,0.00000000,0.00000000,359.99633789); //object(gasgrenade)(2)
	CreateDynamicObject(1672,235.39382935,75.17236328,1004.93365479,0.00000000,0.00000000,359.99450684); //object(gasgrenade)(3)
	CreateDynamicObject(2034,235.92776489,75.77127838,1004.89770508,0.00000000,0.00000000,30.00000000); //object(cj_sawnoff)(1)
	CreateDynamicObject(2034,235.91525269,76.06694031,1004.89770508,0.00000000,0.00000000,29.99816895); //object(cj_sawnoff)(2)
	CreateDynamicObject(2034,236.03843689,75.56952667,1004.89770508,0.00000000,0.00000000,29.99816895); //object(cj_sawnoff)(3)
	CreateDynamicObject(2034,236.00111389,75.22885132,1004.90887451,0.00000000,0.00000000,29.99816895); //object(cj_sawnoff)(4)
	CreateDynamicObject(2044,235.62309265,75.34559631,1004.90557861,0.00000000,0.00000000,0.00000000); //object(cj_mp5k)(1)
	CreateDynamicObject(2044,235.53004456,75.69470215,1004.89440918,0.00000000,0.00000000,0.00000000); //object(cj_mp5k)(2)
	CreateDynamicObject(2044,235.46008301,76.02694702,1004.89440918,0.00000000,0.00000000,0.00000000); //object(cj_mp5k)(3)
	CreateDynamicObject(2033,235.51986694,75.07212067,1004.90887451,0.00000000,0.00000000,0.00000000); //object(cj_sawnoff2)(1)
	CreateDynamicObject(2033,235.52653503,74.87045288,1004.90887451,0.00000000,0.00000000,0.00000000); //object(cj_sawnoff2)(2)
	CreateDynamicObject(970,1549.32666016,-1620.32165527,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1553.49572754,-1620.31567383,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1557.61584473,-1620.32666016,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1561.78161621,-1620.30090332,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,1565.93591309,-1620.29394531,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (6)
	CreateDynamicObject(970,1570.08300781,-1620.32116699,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,1574.23608398,-1620.31420898,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (8)
	CreateDynamicObject(970,1576.33496094,-1620.34423828,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (9)

	// -= Mappeados Departamento de Medicina de Los Santos =-
	CreateDynamicObject(1238,1149.91552734,-1292.08862305,12.99618912,0.00000000,0.00000000,0.00000000); //object(trafficcone)(1)
	CreateDynamicObject(1238,1135.48559570,-1292.09167480,12.86956120,0.00000000,0.00000000,0.00000000); //object(trafficcone)(8)
	CreateDynamicObject(1238,1132.91625977,-1292.05554199,12.86946487,0.00000000,0.00000000,0.00000000); //object(trafficcone)(9)
	CreateDynamicObject(1238,1134.20129395,-1292.04382324,12.86943245,0.00000000,0.00000000,0.00000000); //object(trafficcone)(10)
	CreateDynamicObject(3749,1141.37695312,-1294.32849121,18.44905472,0.00000000,0.00000000,0.00000000); //object(clubgate01_lax)(1)
	CreateDynamicObject(1238,1148.85314941,-1292.08691406,12.98476982,0.00000000,0.00000000,0.00000000); //object(trafficcone)(11)
	CreateDynamicObject(1238,1147.42504883,-1292.08459473,12.96942139,0.00000000,0.00000000,0.00000000); //object(trafficcone)(12)
	CreateDynamicObject(3475,1082.67907715,-1348.98669434,14.92330742,0.00000000,0.00000000,272.00000000); //object(vgsn_fncelec_pst)(1)
	CreateDynamicObject(3475,1138.10644531,-1367.13391113,15.36054993,0.00000000,0.00000000,259.99694824); //object(vgsn_fncelec_pst)(3)
	CreateDynamicObject(3475,1149.71044922,-1367.56738281,15.10210991,0.00000000,0.00000000,271.99951172); //object(vgsn_fncelec_pst)(4)
	CreateDynamicObject(3475,1143.91308594,-1367.70703125,15.12522125,0.00000000,0.00000000,271.99951172); //object(vgsn_fncelec_pst)(5)
	CreateDynamicObject(3475,1088.29907227,-1348.89807129,15.09342766,0.00000000,0.00000000,271.99951172); //object(vgsn_fncelec_pst)(6)
	CreateDynamicObject(1569,1160.44445801,-1330.48779297,30.49768829,0.00000000,0.00000000,0.00000000); //object(adam_v_door)(1)
	CreateDynamicObject(1569,1163.34484863,-1330.49511719,30.48350334,0.00000000,0.00000000,180.00000000); //object(adam_v_door)(2)
	CreateDynamicObject(1569,1171.72656250,-1324.81054688,14.40639305,0.00000000,0.00000000,90.00000000); //object(adam_v_door)(3)
	CreateDynamicObject(1569,1171.73461914,-1321.82092285,14.39964104,0.00000000,0.00000000,270.00000000); //object(adam_v_door)(4)
	CreateDynamicObject(712,1183.84594727,-1366.16430664,22.81914902,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(2)
	CreateDynamicObject(712,1183.84484863,-1350.83789062,22.80169106,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(5)
	CreateDynamicObject(712,1183.87597656,-1345.76464844,22.77748108,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(6)
	CreateDynamicObject(712,1178.49365234,-1334.48925781,22.69914627,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(7)
	CreateDynamicObject(712,1178.64001465,-1313.43908691,22.70321274,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(8)
	CreateDynamicObject(712,1181.40454102,-1300.64770508,22.83786392,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(9)
	CreateDynamicObject(712,1181.30468750,-1295.74707031,22.81595993,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(10)
	CreateDynamicObject(712,1217.74279785,-1382.86816406,21.92903328,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(11)
	CreateDynamicObject(712,1244.57421875,-1382.54003906,21.89953995,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(12)
	CreateDynamicObject(712,1230.92724609,-1382.62304688,21.90639114,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(13)
	CreateDynamicObject(712,1243.95410156,-1293.37792969,21.90944672,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(14)
	CreateDynamicObject(712,1217.79943848,-1293.12475586,22.06790543,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(15)
	CreateDynamicObject(712,1231.18066406,-1293.09082031,22.02798462,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(16)
	CreateDynamicObject(712,1230.99633789,-1320.12951660,22.73497009,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(17)
	CreateDynamicObject(712,1231.09082031,-1335.00976562,22.73831940,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(18)
	CreateDynamicObject(712,1232.24621582,-1348.70764160,22.73477364,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(19)
	CreateDynamicObject(712,1232.47570801,-1362.87475586,22.73062897,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(20)
	CreateDynamicObject(1215,1185.60839844,-1342.24157715,13.75747299,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1180.18017578,-1329.16027832,13.75209236,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
	CreateDynamicObject(1215,1180.27990723,-1318.38403320,13.75385094,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,1185.31542969,-1305.09570312,13.77715397,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1185.40258789,-1367.32421875,13.82101822,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(1215,1185.56176758,-1290.90856934,13.76824379,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1148.00219727,-1291.69055176,13.22099590,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(1215,1134.82287598,-1291.89624023,13.11518002,0.00000000,0.00000000,0.00000000); //object(bollardlight)(8)
	CreateDynamicObject(1215,1149.54272461,-1366.46716309,13.27770042,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1215,1145.09130859,-1366.84252930,13.30191612,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1215,1142.17163086,-1367.10437012,13.31790257,0.00000000,0.00000000,0.00000000); //object(bollardlight)(11)
	CreateDynamicObject(1215,1139.51574707,-1366.75390625,13.32856369,0.00000000,0.00000000,0.00000000); //object(bollardlight)(12)
	CreateDynamicObject(1215,1137.64465332,-1365.52148438,13.54869843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(13)
	CreateDynamicObject(1215,1147.47985840,-1366.47485352,13.28782654,0.00000000,0.00000000,0.00000000); //object(bollardlight)(14)
	CreateDynamicObject(1215,1163.71289062,-1330.01159668,31.04744530,0.00000000,0.00000000,0.00000000); //object(bollardlight)(15)
	CreateDynamicObject(1215,1159.91223145,-1330.09704590,31.06575775,0.00000000,0.00000000,0.00000000); //object(bollardlight)(16)
	CreateDynamicObject(1569,263.96432495,1856.32165527,7.75781250,0.00000000,0.00000000,92.00000000); //object(adam_v_door)(5)
	CreateDynamicObject(1569,1160.44433594,-1330.48730469,30.49768829,0.00000000,0.00000000,0.00000000); //object(adam_v_door)(6)
	CreateDynamicObject(1569,263.93151855,1859.32348633,7.76489449,0.00000000,0.00000000,269.99951172); //object(adam_v_door)(7)
	CreateDynamicObject(1569,267.19772339,1865.73754883,7.60937500,0.00000000,0.00000000,359.99951172); //object(adam_v_door)(8)
	CreateDynamicObject(3055,266.44143677,1865.85815430,9.80749512,0.00000000,0.00000000,0.00000000); //object(kmb_shutter)(1)
	CreateDynamicObject(1569,270.12252808,1865.74926758,7.60937500,0.00000000,0.00000000,179.99450684); //object(adam_v_door)(9)
	CreateDynamicObject(3055,310.81198120,1855.51403809,8.92468262,0.00000000,0.00000000,270.00000000); //object(kmb_shutter)(2)
	CreateDynamicObject(1569,270.12207031,1865.74902344,7.60937500,0.00000000,0.00000000,179.99450684); //object(adam_v_door)(11)
	CreateDynamicObject(1569,310.68499756,1853.83007812,6.72656250,0.00000000,0.00000000,89.99450684); //object(adam_v_door)(12)
	CreateDynamicObject(1569,310.68246460,1856.79492188,6.72656250,0.00000000,0.00000000,269.99450684); //object(adam_v_door)(13)
	CreateDynamicObject(1569,1145.33850098,-1319.37536621,12.57758713,0.00000000,0.00000000,269.98901367); //object(adam_v_door)(14)
	CreateDynamicObject(1569,1145.35058594,-1322.34912109,12.57738304,0.00000000,0.00000000,89.98901367); //object(adam_v_door)(15)
	CreateDynamicObject(1251,1190.45788574,-1381.72644043,12.46487617,0.00000000,0.00000000,0.00000000); //object(smashbar)(1)
	CreateDynamicObject(1251,1190.43640137,-1374.92211914,12.47675896,0.00000000,0.00000000,0.00000000); //object(smashbar)(2)
	CreateDynamicObject(1251,1190.44555664,-1368.19873047,12.48814487,0.00000000,0.00000000,0.00000000); //object(smashbar)(3)
	CreateDynamicObject(1251,1190.42431641,-1361.36682129,12.50007248,0.00000000,0.00000000,0.00000000); //object(smashbar)(4)
	CreateDynamicObject(1251,1190.42858887,-1354.58056641,12.49591064,0.00000000,0.00000000,0.00000000); //object(smashbar)(5)
	CreateDynamicObject(1251,1190.40649414,-1347.80676270,12.50551891,0.00000000,0.00000000,0.00000000); //object(smashbar)(6)
	CreateDynamicObject(1251,1190.41540527,-1341.02673340,12.50386333,0.00000000,0.00000000,0.00000000); //object(smashbar)(7)
	CreateDynamicObject(1251,1190.44628906,-1334.22265625,12.50312233,0.00000000,0.00000000,0.00000000); //object(smashbar)(8)
	CreateDynamicObject(1251,1190.46423340,-1327.39013672,12.50312233,0.00000000,0.00000000,0.00000000); //object(smashbar)(9)
	CreateDynamicObject(1251,1190.45703125,-1320.54199219,12.50312233,0.00000000,0.00000000,0.00000000); //object(smashbar)(10)
	CreateDynamicObject(1251,1190.42590332,-1313.74633789,12.50312233,0.00000000,0.00000000,0.00000000); //object(smashbar)(11)
	CreateDynamicObject(1251,1190.42285156,-1306.88964844,12.49596500,0.00000000,0.00000000,0.00000000); //object(smashbar)(12)
	CreateDynamicObject(1251,1190.45190430,-1300.11730957,12.49100399,0.00000000,0.00000000,0.00000000); //object(smashbar)(13)
	CreateDynamicObject(1251,1190.44165039,-1293.88012695,12.48643494,0.00000000,0.00000000,0.00000000); //object(smashbar)(14)
	CreateDynamicObject(8865,1200.94311523,-1374.74597168,12.51828003,0.00000000,0.00000000,0.00000000); //object(vgeplntr07_lvs) (1)
	CreateDynamicObject(8865,1200.87976074,-1352.12292480,12.64220333,0.00000000,0.00000000,0.00000000); //object(vgeplntr07_lvs) (2)
	CreateDynamicObject(8865,1200.94189453,-1330.04516602,12.63875294,0.00000000,0.00000000,0.00000000); //object(vgeplntr07_lvs) (3)
	CreateDynamicObject(8865,1200.97485352,-1307.60925293,12.63212299,0.00000000,0.00000000,0.00000000); //object(vgeplntr07_lvs) (4)
	CreateDynamicObject(1215,1200.97521973,-1297.80981445,13.19483566,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1200.96948242,-1317.41931152,13.19483566,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1201.05566406,-1320.12023926,13.20146561,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1201.00048828,-1339.95166016,13.20146561,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1200.90893555,-1342.05676270,13.20491600,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1200.89916992,-1362.03271484,13.20491600,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1201.06225586,-1364.73620605,13.08099270,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1201.01684570,-1384.83374023,13.08099270,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(803,1218.49597168,-1379.71118164,13.76560879,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (1)
	CreateDynamicObject(803,1218.29577637,-1375.42150879,13.78999615,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (2)
	CreateDynamicObject(803,1222.77124023,-1381.61328125,13.74866199,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (3)
	CreateDynamicObject(803,1240.30639648,-1381.26904297,13.73225689,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (4)
	CreateDynamicObject(803,1236.22924805,-1381.95690918,13.72603321,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (5)
	CreateDynamicObject(803,1238.03210449,-1377.30566406,13.75577164,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (6)
	CreateDynamicObject(803,1221.31652832,-1360.31591797,13.91149330,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (7)
	CreateDynamicObject(803,1222.47351074,-1358.08618164,13.91149330,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (8)
	CreateDynamicObject(803,1220.77124023,-1354.54248047,13.91149330,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (9)
	CreateDynamicObject(803,1218.67211914,-1300.20153809,13.89346313,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (10)
	CreateDynamicObject(803,1219.28320312,-1304.59240723,13.89697838,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (11)
	CreateDynamicObject(803,1219.07751465,-1308.14990234,13.89948463,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (12)
	CreateDynamicObject(803,1219.07385254,-1312.21569824,13.90518951,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (13)
	CreateDynamicObject(803,1219.07617188,-1316.47204590,13.90622807,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (14)
	CreateDynamicObject(803,1219.29357910,-1320.14404297,13.89931107,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (15)
	CreateDynamicObject(803,1219.29553223,-1323.70751953,13.90018082,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (16)
	CreateDynamicObject(803,1219.29736328,-1327.07629395,13.90100384,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (17)
	CreateDynamicObject(803,1219.29907227,-1330.18579102,13.90176296,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (18)
	CreateDynamicObject(803,1240.63842773,-1314.40161133,13.77413940,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (19)
	CreateDynamicObject(803,1240.23510742,-1308.99462891,13.77300835,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (20)
	CreateDynamicObject(803,1240.17529297,-1304.36120605,13.76982975,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (21)
	CreateDynamicObject(803,1240.80517578,-1312.67175293,13.77259254,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (22)
	CreateDynamicObject(803,1241.56433105,-1351.98156738,13.78280449,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (23)
	CreateDynamicObject(803,1241.53051758,-1329.34729004,13.77414513,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (24)
	CreateDynamicObject(803,1241.57983398,-1342.41381836,13.77604961,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (25)
	CreateDynamicObject(803,1242.60095215,-1365.99243164,13.76855183,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (26)
	CreateDynamicObject(803,1227.23083496,-1377.30541992,13.78684807,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (27)
	CreateDynamicObject(803,1221.59997559,-1341.00878906,13.90741348,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (28)
	CreateDynamicObject(803,1230.41784668,-1305.66613770,13.86093712,0.00000000,0.00000000,0.00000000); //object(genveg_bush09) (29)

	// -= Departamento de Transporte Publico =-
	CreateDynamicObject(3940,1773.10791016,-1918.17810059,15.52126694,0.00000000,0.00000000,0.00000000); //object(comms01)(1)
	CreateDynamicObject(16003,1802.62438965,-1913.09985352,13.76855469,0.00000000,0.00000000,90.00000000); //object(drvin_ticket)(1)
	CreateDynamicObject(16001,1804.23864746,-1929.70031738,12.38783073,0.00000000,0.00000000,270.00000000); //object(drvin_projhut)(1)
	CreateDynamicObject(16001,1804.22998047,-1919.16101074,12.39297485,0.00000000,0.00000000,270.00000000); //object(drvin_projhut)(2)
	CreateDynamicObject(6296,1754.38122559,-1894.06970215,14.77101898,0.00000000,0.00000000,0.00000000); //object(veropolice_law2)(1)
	CreateDynamicObject(10401,1777.18762207,-1895.16247559,14.67862892,0.00000000,0.00000000,136.00000000); //object(hc_shed02_sfs)(2)
	CreateDynamicObject(970,1790.89221191,-1902.23266602,12.94877720,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateDynamicObject(970,1790.92517090,-1897.29516602,12.94880199,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(2)
	CreateDynamicObject(970,1790.80090332,-1892.27832031,12.94870949,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(3)
	CreateDynamicObject(970,1790.66796875,-1887.27954102,12.94861221,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(4)
	CreateDynamicObject(1215,1790.59375000,-1885.03747559,12.96140003,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1790.74108887,-1889.44335938,12.96150780,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
	CreateDynamicObject(1215,1790.69335938,-1890.09570312,12.96147346,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,1790.83557129,-1894.39770508,12.96157742,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1790.85937500,-1895.05920410,12.96159554,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(1215,1790.91503906,-1900.06347656,12.96163654,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1790.95959473,-1899.38403320,12.96166897,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(1215,1790.95385742,-1904.39111328,12.96166515,0.00000000,0.00000000,0.00000000); //object(bollardlight)(8)
	CreateDynamicObject(1215,1801.95056152,-1911.65039062,12.96096802,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1215,1801.79711914,-1934.91442871,12.95444489,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1215,1776.52124023,-1931.18066406,12.95109081,0.00000000,0.00000000,0.00000000); //object(bollardlight)(11)
	CreateDynamicObject(1215,1776.32263184,-1928.53601074,12.95094585,0.00000000,0.00000000,0.00000000); //object(bollardlight)(12)
	CreateDynamicObject(1215,1776.43603516,-1910.33666992,12.95102882,0.00000000,0.00000000,0.00000000); //object(bollardlight)(13)
	CreateDynamicObject(1215,1759.93920898,-1900.70874023,13.12801266,0.00000000,0.00000000,0.00000000); //object(bollardlight)(14)
	CreateDynamicObject(1215,1759.82324219,-1887.35815430,13.11993694,0.00000000,0.00000000,0.00000000); //object(bollardlight)(15)
	CreateDynamicObject(1215,1759.13317871,-1890.66320801,13.12010574,0.00000000,0.00000000,0.00000000); //object(bollardlight)(16)
	CreateDynamicObject(1215,1759.21398926,-1897.58569336,13.12631130,0.00000000,0.00000000,0.00000000); //object(bollardlight)(17)
	CreateDynamicObject(1257,1815.65014648,-1907.86181641,13.83739662,0.00000000,0.00000000,180.00000000); //object(bustopm)(1)
	CreateDynamicObject(3749,1811.73632812,-1889.84765625,18.27247620,0.00000000,0.00000000,270.00000000); //object(clubgate01_lax)(1)
	CreateDynamicObject(1251,1826.52160645,-1918.89575195,12.47683430,0.00000000,0.00000000,0.00000000); //object(smashbar)(1)
	CreateDynamicObject(1251,1826.47814941,-1912.09973145,12.46553516,0.00000000,0.00000000,0.00000000); //object(smashbar)(2)
	CreateDynamicObject(1251,1826.46740723,-1905.20300293,12.45382404,0.00000000,0.00000000,0.00000000); //object(smashbar)(3)
	CreateDynamicObject(1251,1826.45434570,-1898.43469238,12.44235039,0.00000000,0.00000000,0.00000000); //object(smashbar)(4)
	CreateDynamicObject(1251,1826.44042969,-1891.69934082,12.43093872,0.00000000,0.00000000,0.00000000); //object(smashbar)(5)
	CreateDynamicObject(1251,1826.42675781,-1884.93969727,12.41948414,0.00000000,0.00000000,0.00000000); //object(smashbar)(6)
	CreateDynamicObject(1251,1826.41308594,-1878.12695312,12.40793419,0.00000000,0.00000000,0.00000000); //object(smashbar)(7)
	CreateDynamicObject(1251,1826.52075195,-1856.43432617,12.51874733,0.00000000,0.00000000,0.00000000); //object(smashbar)(8)
	CreateDynamicObject(1251,1826.52331543,-1849.59094238,12.51874733,0.00000000,0.00000000,0.00000000); //object(smashbar)(9)
	CreateDynamicObject(1251,1826.51660156,-1842.67126465,12.51874733,0.00000000,0.00000000,0.00000000); //object(smashbar)(10)
	CreateDynamicObject(1251,1826.47778320,-1835.63964844,12.51874733,0.00000000,0.00000000,0.00000000); //object(smashbar)(11)
	CreateDynamicObject(1251,1826.45239258,-1828.83874512,12.51874733,0.00000000,0.00000000,0.00000000); //object(smashbar)(12)
	CreateDynamicObject(1251,1826.47973633,-1822.02709961,12.51967335,0.00000000,0.00000000,0.00000000); //object(smashbar)(13)
	CreateDynamicObject(1251,1826.47460938,-1815.25415039,12.51140308,0.00000000,0.00000000,0.00000000); //object(smashbar)(14)
	CreateDynamicObject(1251,1826.50109863,-1808.44958496,12.50309467,0.00000000,0.00000000,0.00000000); //object(smashbar)(15)
	CreateDynamicObject(1251,1826.52746582,-1801.66503906,12.49481106,0.00000000,0.00000000,0.00000000); //object(smashbar)(16)
	CreateDynamicObject(1251,1826.49121094,-1794.87866211,12.48749733,0.00000000,0.00000000,0.00000000); //object(smashbar)(17)
	CreateDynamicObject(1251,1826.48693848,-1788.03784180,12.48749733,0.00000000,0.00000000,0.00000000); //object(smashbar)(18)
	CreateDynamicObject(1251,1826.51391602,-1781.25463867,12.48749733,0.00000000,0.00000000,0.00000000); //object(smashbar)(19)
	CreateDynamicObject(1237,1812.03369141,-1900.90917969,12.57208443,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(1)
	CreateDynamicObject(1237,1813.68981934,-1900.32238770,12.57427406,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(2)
	CreateDynamicObject(1237,1814.33801270,-1879.42590332,12.57812500,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(3)
	CreateDynamicObject(1237,1811.30322266,-1878.38073730,12.58416653,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(4)
	CreateDynamicObject(3475,1772.42126465,-1942.80358887,14.93595314,0.00000000,0.00000000,270.00000000); //object(vgsn_fncelec_pst)(3)
	CreateDynamicObject(3475,1778.22534180,-1942.80444336,14.93242836,0.00000000,0.00000000,270.00000000); //object(vgsn_fncelec_pst)(4)
	CreateDynamicObject(3475,1766.58618164,-1942.84130859,14.93874741,0.00000000,0.00000000,270.00000000); //object(vgsn_fncelec_pst)(5)
	CreateDynamicObject(3475,1760.98022461,-1941.34570312,14.95923805,0.00000000,0.00000000,240.00000000); //object(vgsn_fncelec_pst)(6)
	CreateDynamicObject(1418,1782.90039062,-1942.67187500,16.18828773,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(1)
	CreateDynamicObject(1418,1786.36877441,-1942.62231445,16.18828773,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(2)
	CreateDynamicObject(1418,1789.78784180,-1942.57812500,16.18828773,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(3)
	CreateDynamicObject(1418,1793.24206543,-1942.52526855,16.18828773,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(4)
	CreateDynamicObject(1418,1796.70983887,-1942.50964355,16.18828773,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(5)
	CreateDynamicObject(1418,1803.65258789,-1942.47802734,16.18828773,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(6)
	CreateDynamicObject(1418,1800.15917969,-1942.49414062,16.18828773,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(7)
	CreateDynamicObject(1418,1807.09582520,-1942.46228027,16.18828773,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(8)
	CreateDynamicObject(1418,1809.64501953,-1942.41235352,16.18828773,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_3)(9)
	CreateDynamicObject(994,1833.28503418,-1859.73889160,12.57812500,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2)(3)
	CreateDynamicObject(994,1833.24707031,-1853.40869141,12.57812500,0.00000000,0.00000000,80.25000000); //object(lhouse_barrier2)(4)
	CreateDynamicObject(994,1833.64367676,-1834.46105957,12.58538246,0.00000000,0.00000000,110.24963379); //object(lhouse_barrier2)(6)
	CreateDynamicObject(712,1864.34948730,-1864.89086914,22.16884804,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(2)
	CreateDynamicObject(712,1864.59338379,-1872.11108398,22.11266327,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(3)
	CreateDynamicObject(712,1864.16845703,-1877.88293457,22.06714630,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(4)
	CreateDynamicObject(712,1836.37182617,-1826.26940918,22.17748260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(5)
	CreateDynamicObject(712,1856.56066895,-1832.42504883,22.17725372,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(6)
	CreateDynamicObject(712,1875.45227051,-1838.23840332,22.17023849,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(7)
	CreateDynamicObject(712,1893.84362793,-1843.65234375,22.16469574,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(8)
	CreateDynamicObject(712,1913.90136719,-1848.37011719,22.15648651,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(9)
	CreateDynamicObject(712,1932.54687500,-1852.60034180,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(10)
	CreateDynamicObject(712,1949.91857910,-1856.57177734,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(11)
	CreateDynamicObject(712,1855.99169922,-1878.58056641,22.06651115,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(12)
	CreateDynamicObject(712,1846.35986328,-1878.06823730,22.11123085,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(13)
	CreateDynamicObject(712,1834.01782227,-1878.12194824,22.10112762,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(14)
	CreateDynamicObject(712,1801.86132812,-1845.75854492,22.17748260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(15)
	CreateDynamicObject(712,1784.42468262,-1844.29248047,22.17748260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(16)
	CreateDynamicObject(712,1766.64196777,-1839.24414062,22.16428757,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(17)
	CreateDynamicObject(712,1752.21508789,-1834.76062012,22.15443420,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(18)
	CreateDynamicObject(712,1738.59533691,-1831.22692871,22.15880585,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(19)
	CreateDynamicObject(712,1725.08593750,-1827.31066895,22.15569496,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(20)
	CreateDynamicObject(712,1712.02880859,-1825.49768066,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(21)
	CreateDynamicObject(712,1703.62890625,-1856.93981934,22.17506027,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(22)
	CreateDynamicObject(712,1704.00537109,-1849.70288086,22.15933990,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(23)
	CreateDynamicObject(712,1685.53808594,-1875.30834961,22.14414215,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(24)
	CreateDynamicObject(712,1679.14624023,-1879.98986816,22.14913368,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(25)
	CreateDynamicObject(1215,1814.15954590,-1895.39880371,13.14244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1813.83642578,-1883.58959961,13.05829430,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1833.02685547,-1853.47570801,13.14244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1833.10742188,-1859.85412598,13.14244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1845.93395996,-1860.13793945,13.14943123,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1826.36108398,-1874.18322754,12.86518955,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1826.52465820,-1859.86706543,12.97838593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1831.40441895,-1830.47094727,13.14244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1833.84143066,-1840.83679199,13.14244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1833.85534668,-1844.27746582,13.14244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1569,1834.09802246,-1841.07934570,12.57812500,0.00000000,0.00000000,270.00000000); //object(adam_v_door)(1)
	CreateDynamicObject(1569,1834.09277344,-1844.05603027,12.57812500,0.00000000,0.00000000,90.00000000); //object(adam_v_door)(2)
	CreateDynamicObject(1569,1758.41296387,-1894.81433105,12.57392216,0.00000000,0.00000000,90.00000000); //object(adam_v_door)(3)
	CreateDynamicObject(1251,1842.28308105,-1873.83569336,12.49443245,0.00000000,0.00000000,270.00000000); //object(smashbar)(7)
	CreateDynamicObject(1251,1835.22778320,-1873.80700684,12.49443245,0.00000000,0.00000000,270.00000000); //object(smashbar)(7)
	CreateDynamicObject(1251,1829.69042969,-1873.80847168,12.45920086,0.00000000,0.00000000,270.00000000); //object(smashbar)(7)
	CreateDynamicObject(1257,1827.88928223,-1766.56689453,13.82606697,0.00000000,0.00000000,0.00000000); //object(bustopm) (1)
	CreateDynamicObject(1257,2066.75390625,-1758.57360840,13.83660507,0.00000000,0.00000000,272.00000000); //object(bustopm) (2)
	CreateDynamicObject(1257,2401.18725586,-1738.48095703,13.82606697,0.00000000,0.00000000,271.99951172); //object(bustopm) (3)
	CreateDynamicObject(1257,2756.59350586,-1896.72412109,11.33387947,0.00000000,0.00000000,271.99951172); //object(bustopm) (4)
	CreateDynamicObject(1257,2829.35229492,-1639.97583008,11.24736786,0.00000000,0.00000000,351.99951172); //object(bustopm) (5)
	CreateDynamicObject(1257,2832.39184570,-1036.31616211,23.55489922,0.00000000,0.00000000,177.99645996); //object(bustopm) (6)
	CreateDynamicObject(1257,2655.18847656,-1053.69958496,69.85668945,0.00000000,0.00000000,269.99499512); //object(bustopm) (7)
	CreateDynamicObject(1257,2636.43066406,-1242.97363281,50.29423141,0.00000000,0.00000000,181.99450684); //object(bustopm) (8)
	CreateDynamicObject(1257,2457.08691406,-1429.43005371,24.22726631,0.00000000,0.00000000,359.99401855); //object(bustopm) (9)
	CreateDynamicObject(1257,2425.04882812,-1497.60253906,24.27140045,0.00000000,0.00000000,179.98901367); //object(bustopm) (10)
	CreateDynamicObject(1257,2320.18969727,-1652.73449707,14.40415955,0.00000000,0.00000000,87.98352051); //object(bustopm) (11)
	CreateDynamicObject(1257,2025.76464844,-1606.31103516,13.82606697,0.00000000,0.00000000,87.97851562); //object(bustopm) (12)
	CreateDynamicObject(1257,1732.10400391,-1434.70935059,13.82606697,0.00000000,0.00000000,87.97851562); //object(bustopm) (13)
	CreateDynamicObject(1257,1467.43542480,-1434.86975098,13.82606697,0.00000000,0.00000000,89.97851562); //object(bustopm) (14)
	CreateDynamicObject(1257,1470.34533691,-1166.85217285,24.29749489,0.00000000,0.00000000,267.97802734); //object(bustopm) (15)
	CreateDynamicObject(1257,1730.85559082,-1166.94299316,24.09951782,0.00000000,0.00000000,269.97302246); //object(bustopm) (16)
	CreateDynamicObject(1257,1872.79907227,-1154.60144043,24.14894676,0.00000000,0.00000000,359.97253418); //object(bustopm) (17)
	CreateDynamicObject(1257,2161.85888672,-1123.78259277,25.84495926,0.00000000,0.00000000,263.96704102); //object(bustopm) (18)
	CreateDynamicObject(1257,2327.72705078,-1160.16540527,27.25807381,0.00000000,0.00000000,267.96301270); //object(bustopm) (19)
	CreateDynamicObject(1257,2584.24902344,-1189.91833496,62.29977036,0.00000000,0.00000000,267.96203613); //object(bustopm) (20)
	CreateDynamicObject(1257,2881.39843750,-1410.36779785,11.35288048,0.00000000,0.00000000,359.96203613); //object(bustopm) (21)
	CreateDynamicObject(1257,2160.83520508,-1369.95678711,24.26650429,0.00000000,0.00000000,179.96154785); //object(bustopm) (22)
	CreateDynamicObject(1257,1865.75610352,-1334.72082520,13.83490562,0.00000000,0.00000000,91.96154785); //object(bustopm) (23)
	CreateDynamicObject(1257,1467.21801758,-1292.40051270,13.86549187,0.00000000,0.00000000,91.96105957); //object(bustopm) (24)
	CreateDynamicObject(1257,1236.70666504,-1389.30322266,13.68490410,0.00000000,0.00000000,91.96105957); //object(bustopm) (25)
	CreateDynamicObject(1257,950.69726562,-1389.32287598,13.67737961,0.00000000,0.00000000,91.96105957); //object(bustopm) (26)
	CreateDynamicObject(1257,769.76696777,-1389.02221680,13.91842842,0.00000000,0.00000000,91.96105957); //object(bustopm) (27)
	CreateDynamicObject(1257,382.35986328,-1486.81103516,32.29378510,0.00000000,0.00000000,129.96105957); //object(bustopm) (28)
	CreateDynamicObject(1257,273.95989990,-1503.78515625,32.97985458,0.00000000,0.00000000,139.95727539); //object(bustopm) (29)
	CreateDynamicObject(1257,473.66210938,-1315.24206543,15.83644009,0.00000000,0.00000000,307.95477295); //object(bustopm) (30)
	CreateDynamicObject(1257,811.17205811,-1058.57458496,25.22733879,0.00000000,0.00000000,277.95227051); //object(bustopm) (31)
	CreateDynamicObject(1257,1122.70617676,-961.71173096,43.01856613,0.00000000,0.00000000,271.94860840); //object(bustopm) (32)
	CreateDynamicObject(1257,1619.92419434,-979.32635498,38.60901642,0.00000000,0.00000000,265.94458008); //object(bustopm) (33)
	CreateDynamicObject(1257,2177.51708984,-1013.47009277,63.20137024,0.00000000,0.00000000,263.94055176); //object(bustopm) (34)
	CreateDynamicObject(1257,1347.72900391,-1049.16333008,27.00225258,0.00000000,0.00000000,181.93554688); //object(bustopm) (35)
	CreateDynamicObject(1257,989.78570557,-1134.72021484,24.10731697,0.00000000,0.00000000,89.93359375); //object(bustopm) (36)
	CreateDynamicObject(1257,621.88879395,-1607.56127930,16.53631973,0.00000000,0.00000000,179.92858887); //object(bustopm) (37)
	CreateDynamicObject(1257,136.30743408,-1587.14392090,11.66014671,0.00000000,0.00000000,319.92309570); //object(bustopm) (38)
	CreateDynamicObject(1257,424.93316650,-1778.52929688,5.82606697,0.00000000,0.00000000,267.92187500); //object(bustopm) (39)
	CreateDynamicObject(1257,1079.71777344,-1858.31176758,13.83387756,0.00000000,0.00000000,269.91809082); //object(bustopm) (40)
	CreateDynamicObject(1257,1274.89819336,-1858.23840332,13.82606697,0.00000000,0.00000000,269.91760254); //object(bustopm) (41)
	CreateDynamicObject(1257,1318.39843750,-1753.43359375,13.82606697,0.00000000,0.00000000,1.91760254); //object(bustopm) (42)
	CreateDynamicObject(1257,1620.91577148,-1738.52392578,13.82606697,0.00000000,0.00000000,271.91711426); //object(bustopm) (43)
	CreateDynamicObject(1257,1807.33032227,-1738.30004883,13.81645203,0.00000000,0.00000000,271.91711426); //object(bustopm) (44)
	CreateDynamicObject(1257,1923.55102539,-1758.24194336,13.82606697,0.00000000,0.00000000,271.91711426); //object(bustopm) (45)
	CreateDynamicObject(1257,1955.63586426,-2067.22314453,13.82606697,0.00000000,0.00000000,181.91711426); //object(bustopm) (46)
	CreateDynamicObject(1257,2215.99389648,-2191.29394531,13.82606697,0.00000000,0.00000000,225.91711426); //object(bustopm) (47)
	CreateDynamicObject(1257,2191.55639648,-2353.75000000,13.82606697,0.00000000,0.00000000,135.91186523); //object(bustopm) (48)
	CreateDynamicObject(1257,2416.16381836,-2440.67700195,13.97677040,0.00000000,0.00000000,225.91186523); //object(bustopm) (49)
	CreateDynamicObject(1257,2587.20605469,-2393.10278320,13.84107304,0.00000000,0.00000000,225.90637207); //object(bustopm) (50)
	CreateDynamicObject(1257,2399.38769531,-2657.29638672,13.94325447,0.00000000,0.00000000,91.90637207); //object(bustopm) (51)

	// -= Fronteras =-
	CreateDynamicObject(4514,56.74465942,-1538.00634766,5.81108999,0.00000000,0.00000000,260.00000000); //object(cn2_roadblock01ld) (1)
	CreateDynamicObject(4514,1699.38989258,451.01431274,31.92551994,0.00000000,0.00000000,161.99694824); //object(cn2_roadblock01ld) (2)
	CreateDynamicObject(1238,68.00440979,-1545.64318848,4.39945173,0.00000000,0.00000000,0.00000000); //object(trafficcone) (1)
	CreateDynamicObject(1238,67.95986938,-1543.69409180,4.37237930,0.00000000,0.00000000,0.00000000); //object(trafficcone) (2)
	CreateDynamicObject(1238,68.13162231,-1541.26855469,4.34024477,0.00000000,0.00000000,0.00000000); //object(trafficcone) (3)
	CreateDynamicObject(1238,68.10932922,-1538.57824707,4.29282808,0.00000000,0.00000000,0.00000000); //object(trafficcone) (4)
	CreateDynamicObject(1238,68.40509033,-1535.45922852,4.46465874,0.00000000,0.00000000,0.00000000); //object(trafficcone) (5)
	CreateDynamicObject(1238,68.44555664,-1532.96765137,4.44940805,0.00000000,0.00000000,0.00000000); //object(trafficcone) (6)
	CreateDynamicObject(1238,68.51672363,-1529.80578613,4.21381950,0.00000000,0.00000000,0.00000000); //object(trafficcone) (7)
	CreateDynamicObject(1238,68.29157257,-1526.95068359,4.28023767,0.00000000,0.00000000,0.00000000); //object(trafficcone) (8)
	CreateDynamicObject(1238,68.65044403,-1524.39819336,4.18367720,0.00000000,0.00000000,0.00000000); //object(trafficcone) (9)
	CreateDynamicObject(1238,68.97292328,-1522.10449219,4.64283895,0.00000000,0.00000000,0.00000000); //object(trafficcone) (10)
	CreateDynamicObject(4514,58.74609375,-1526.67187500,5.81108999,0.00000000,0.00000000,261.99645996); //object(cn2_roadblock01ld) (3)
	CreateDynamicObject(4514,1712.94079590,446.60488892,31.92551994,0.00000000,0.00000000,161.99340820); //object(cn2_roadblock01ld) (4)
	CreateDynamicObject(4514,1724.05627441,443.04153442,31.92551994,0.00000000,0.00000000,161.99340820); //object(cn2_roadblock01ld) (5)
	CreateDynamicObject(4514,558.11749268,416.88619995,19.83757019,0.00000000,0.00000000,211.99340820); //object(cn2_roadblock01ld) (6)
	CreateDynamicObject(4514,-191.78369141,280.95437622,12.73603058,0.00000000,0.00000000,167.99218750); //object(cn2_roadblock01ld) (7)
	CreateDynamicObject(4514,560.30273438,417.70605469,19.83757019,0.00000000,0.00000000,211.99218750); //object(cn2_roadblock01ld) (8)
	CreateDynamicObject(4514,-189.97843933,280.19873047,12.73603058,0.00000000,0.00000000,167.99194336); //object(cn2_roadblock01ld) (9)
	CreateDynamicObject(4514,-1207.69995117,-790.63470459,64.97314453,0.00000000,0.00000000,223.99194336); //object(cn2_roadblock01ld) (10)
	CreateDynamicObject(4514,-828.98864746,-1315.35217285,82.06417847,0.00000000,0.00000000,351.98925781); //object(cn2_roadblock01ld) (11)
	CreateDynamicObject(4514,-381.46166992,-837.02044678,48.18835449,0.00000000,0.00000000,245.98547363); //object(cn2_roadblock01ld) (12)
	CreateDynamicObject(4514,-86.81889343,-913.27758789,18.95369148,4.49981689,0.50155640,155.94445801); //object(cn2_roadblock01ld) (13)
	CreateDynamicObject(4514,331.19195557,-567.40081787,41.23693848,359.99902344,0.49835205,261.97912598); //object(cn2_roadblock01ld) (15)
	CreateDynamicObject(4514,807.24584961,-168.10166931,19.47859764,1.74447632,0.24453735,271.96704102); //object(cn2_roadblock01ld) (16)
	CreateDynamicObject(4514,329.25390625,-573.19726562,41.48695374,1.73583984,356.48986816,262.07885742); //object(cn2_roadblock01ld) (17)
	CreateDynamicObject(4514,754.73706055,-152.50363159,19.50846100,6.49127197,0.24313354,311.94647217); //object(cn2_roadblock01ld) (18)

	// -= Mappeado Arereopuerto =-
	CreateDynamicObject(1215,1971.63696289,-2171.74926758,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1966.97839355,-2176.42846680,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(1215,1956.45886230,-2176.42211914,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1951.67504883,-2171.78564453,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1215,1956.42956543,-2189.41284180,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(11)
	CreateDynamicObject(1215,1966.94946289,-2189.47387695,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(12)
	CreateDynamicObject(1238,1961.54089355,-2189.24267578,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(1)
	CreateDynamicObject(1238,1961.54431152,-2187.90209961,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(2)
	CreateDynamicObject(1238,1961.57690430,-2186.53247070,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(3)
	CreateDynamicObject(1238,1961.52319336,-2185.10205078,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(4)
	CreateDynamicObject(1238,1961.48608398,-2183.83398438,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(5)
	CreateDynamicObject(1238,1961.43505859,-2181.03271484,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(6)
	CreateDynamicObject(7981,1415.13256836,-2643.74169922,17.54521942,0.00000000,0.00000000,340.00000000); //object(smallradar02_lvs)(1)
	CreateDynamicObject(1238,1961.48925781,-2182.44531250,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(7)
	CreateDynamicObject(1238,1961.39416504,-2179.81494141,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(8)
	CreateDynamicObject(1238,1961.34472656,-2178.08081055,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(9)
	CreateDynamicObject(1238,1961.27941895,-2176.63671875,12.86505508,0.00000000,0.00000000,0.00000000); //object(trafficcone)(10)
	CreateDynamicObject(1215,2054.43212891,-2189.44140625,13.11833572,0.00000000,0.00000000,0.00000000); //object(bollardlight)(14)
	CreateDynamicObject(1215,2054.54394531,-2200.36206055,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(15)
	CreateDynamicObject(1215,1983.57397461,-2318.01440430,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(16)
	CreateDynamicObject(2773,1732.79650879,-2334.80078125,13.06410313,0.00000000,0.00000000,320.00000000); //object(cj_airprt_bar)(1)
	CreateDynamicObject(2773,1734.03332520,-2333.29370117,13.06410313,0.00000000,0.00000000,319.99877930); //object(cj_airprt_bar)(2)
	CreateDynamicObject(2773,1727.82446289,-2334.89282227,13.06410313,0.00000000,0.00000000,39.99877930); //object(cj_airprt_bar)(3)
	CreateDynamicObject(2773,1726.59008789,-2333.42163086,13.06410313,0.00000000,0.00000000,39.99572754); //object(cj_airprt_bar)(4)
	CreateDynamicObject(970,1748.21643066,-2311.41235352,13.09835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb)(1)
	CreateDynamicObject(970,1765.27685547,-2311.40454102,13.09835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb)(2)
	CreateDynamicObject(970,1748.21582031,-2311.41210938,13.09835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb)(3)
	CreateDynamicObject(970,1750.23742676,-2309.35864258,13.09835625,0.00000000,0.00000000,179.99450684); //object(fencesmallb)(7)
	CreateDynamicObject(970,1763.22363281,-2309.36279297,13.09835625,0.00000000,0.00000000,179.99450684); //object(fencesmallb)(8)
	CreateDynamicObject(1215,1734.77014160,-2332.37500000,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
	CreateDynamicObject(1215,1725.99157715,-2332.21948242,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,1748.20385742,-2313.77514648,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1765.31115723,-2313.90917969,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(1215,1760.88977051,-2309.43774414,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(8)
	CreateDynamicObject(1215,1752.50244141,-2309.41870117,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1257,1772.67651367,-2325.19824219,13.81465530,0.00000000,0.00000000,270.00000000); //object(bustopm)(1)
	CreateDynamicObject(1319,1765.18457031,-2313.66503906,13.09375000,0.00000000,0.00000000,50.00000000); //object(ws_ref_bollard)(1)
	CreateDynamicObject(1319,1748.34973145,-2313.55786133,13.09375000,0.00000000,0.00000000,309.99877930); //object(ws_ref_bollard)(2)
	CreateDynamicObject(712,1529.96960449,-2313.39306641,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(2)
	CreateDynamicObject(712,1524.54748535,-2323.71533203,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(3)
	CreateDynamicObject(712,1516.40075684,-2332.75952148,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(4)
	CreateDynamicObject(712,1506.67102051,-2338.35839844,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(5)
	CreateDynamicObject(712,1527.22192383,-2256.01025391,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(6)
	CreateDynamicObject(712,1530.68249512,-2267.03271484,22.15401268,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(7)
	CreateDynamicObject(712,1520.40942383,-2245.81616211,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(8)
	CreateDynamicObject(712,1511.10693359,-2237.55004883,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(9)
	CreateDynamicObject(712,1502.20520020,-2233.24902344,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(10)
	CreateDynamicObject(712,1410.69836426,-2301.34765625,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(11)
	CreateDynamicObject(712,1400.68115234,-2301.71044922,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(12)
	CreateDynamicObject(712,1385.73046875,-2301.72143555,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(13)
	CreateDynamicObject(712,1376.67822266,-2301.97778320,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(14)
	CreateDynamicObject(712,1409.87805176,-2272.01464844,22.12075806,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(15)
	CreateDynamicObject(712,1401.91601562,-2271.98242188,22.10325241,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(16)
	CreateDynamicObject(712,1383.07153320,-2272.49584961,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(17)
	CreateDynamicObject(712,1373.21557617,-2272.30175781,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(18)
	CreateDynamicObject(1215,1351.97033691,-2270.64697266,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(13)
	CreateDynamicObject(1215,1352.02465820,-2301.87451172,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(17)
	CreateDynamicObject(1215,1371.23266602,-2286.31250000,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(18)
	CreateDynamicObject(1215,1418.68994141,-2281.09106445,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(19)
	CreateDynamicObject(1215,1418.66491699,-2291.76611328,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(20)
	CreateDynamicObject(1215,1479.70617676,-2342.33666992,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(21)
	CreateDynamicObject(1215,1469.17041016,-2342.36865234,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1530.30273438,-2280.91479492,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(23)
	CreateDynamicObject(1215,1530.30847168,-2291.86376953,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(24)
	CreateDynamicObject(1215,1469.08813477,-2230.67871094,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(25)
	CreateDynamicObject(1215,1479.79040527,-2230.59277344,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(26)
	CreateDynamicObject(712,1584.25817871,-2152.18261719,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(21)
	CreateDynamicObject(712,1582.16564941,-2159.27978516,22.15401268,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(22)
	CreateDynamicObject(712,1581.65124512,-2166.34448242,22.15401268,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(23)
	CreateDynamicObject(712,1581.10852051,-2174.00634766,22.15401268,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(24)
	CreateDynamicObject(712,1581.24951172,-2181.61010742,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(26)
	CreateDynamicObject(712,1581.93457031,-2208.38818359,22.15401268,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(27)
	CreateDynamicObject(712,1581.76843262,-2218.65820312,22.15162659,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(28)
	CreateDynamicObject(712,1577.26245117,-2229.18701172,22.15530777,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(29)
	CreateDynamicObject(712,1567.37402344,-2233.61694336,22.15401268,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(30)
	CreateDynamicObject(712,1780.29895020,-2177.82568359,22.15404510,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(31)
	CreateDynamicObject(712,1764.21618652,-2177.63745117,22.15404510,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(32)
	CreateDynamicObject(712,1748.36657715,-2177.47802734,22.15383911,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(33)
	CreateDynamicObject(712,1732.69580078,-2178.30688477,22.15632439,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(34)
	CreateDynamicObject(712,1718.67443848,-2178.27197266,22.15404510,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(35)
	CreateDynamicObject(712,1702.16223145,-2178.47753906,22.15404510,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(36)
	CreateDynamicObject(712,1682.76647949,-2178.53173828,22.15404510,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(37)
	CreateDynamicObject(712,1663.16601562,-2177.97387695,22.15404510,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(38)

	// -= Presidencia de Los Santos =-
	CreateDynamicObject(1829,358.00112915,149.24652100,1025.25354004,0.00000000,0.00000000,230.00000000); //object(man_safenew) (1)
	CreateDynamicObject(1491,372.78445435,166.60067749,1007.38934326,0.00000000,0.00000000,180.00000000); //object(gen_doorint01) (1)
	CreateDynamicObject(3089,365.82388306,189.41748047,1008.71179199,0.00000000,0.00000000,0.00000000); //object(ab_casdorlok) (1)
	CreateDynamicObject(3089,367.28259277,189.90919495,1008.71179199,0.00000000,0.00000000,180.00000000); //object(ab_casdorlok) (2)
	CreateDynamicObject(712,1541.67944336,-1638.91552734,22.58096504,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(1)
	CreateDynamicObject(712,1542.03100586,-1648.28369141,22.58096504,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(2)
	CreateDynamicObject(712,1546.58435059,-1658.52941895,22.52081490,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(3)
	CreateDynamicObject(712,1546.72863770,-1664.49438477,22.52081490,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(4)
	CreateDynamicObject(712,1546.49157715,-1687.06994629,22.52079582,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(5)
	CreateDynamicObject(712,1546.48376465,-1693.08923340,22.52079582,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(6)
	CreateDynamicObject(712,1541.21789551,-1702.39916992,22.58096504,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(7)
	CreateDynamicObject(712,1541.96044922,-1713.43847656,22.58096504,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(8)
	CreateDynamicObject(712,1522.41613770,-1748.79333496,22.64623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(9)
	CreateDynamicObject(712,1528.73706055,-1749.02331543,22.64623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(10)
	CreateDynamicObject(712,1538.47094727,-1748.90869141,22.64623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(11)
	CreateDynamicObject(712,1546.38830566,-1748.74865723,22.64623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(12)
	CreateDynamicObject(712,1421.99682617,-1748.70190430,22.64623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(13)
	CreateDynamicObject(712,1443.44531250,-1748.86401367,22.64623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(14)
	CreateDynamicObject(712,1434.15808105,-1748.46398926,22.64623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(15)
	CreateDynamicObject(3851,1495.46972656,-1751.25585938,20.32030678,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(2)
	CreateDynamicObject(3851,1495.46972656,-1751.25585938,24.32029915,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(3)
	CreateDynamicObject(3851,1495.46972656,-1751.25585938,16.44531250,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(4)
	CreateDynamicObject(3851,1466.92053223,-1751.31689453,16.37031746,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(5)
	CreateDynamicObject(3851,1466.91992188,-1751.31640625,20.37030602,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(6)
	CreateDynamicObject(3851,1466.91992188,-1751.31640625,24.32029533,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(7)
	CreateDynamicObject(3851,1478.16015625,-1751.70019531,26.19530106,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(8)
	CreateDynamicObject(3851,1485.19824219,-1751.70898438,26.19530106,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(9)
	CreateDynamicObject(1215,1500.47570801,-1748.13513184,15.00963593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
	CreateDynamicObject(1215,1461.60485840,-1748.16137695,15.00963593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,1459.65136719,-1745.90625000,13.49460602,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1494.51782227,-1750.72119141,15.00963593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(1215,1467.84069824,-1750.63415527,15.00963593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1569,1479.57714844,-1772.69824219,17.79575539,0.00000000,0.00000000,0.00000000); //object(adam_v_door)(1)
	CreateDynamicObject(1569,1482.56079102,-1772.68737793,17.79575539,0.00000000,0.00000000,180.00000000); //object(adam_v_door)(2)
	CreateDynamicObject(1340,1465.17773438,-1623.90771484,14.17446136,0.00000000,0.00000000,0.00000000); //object(chillidogcart)(1)
	CreateDynamicObject(1341,1464.95715332,-1622.12451172,14.04188347,0.00000000,0.00000000,0.00000000); //object(icescart_prop)(1)
	CreateDynamicObject(6965,1479.85058594,-1639.89453125,15.93592834,0.00000000,0.00000000,0.00000000); //object(venefountain02)(1)
	CreateDynamicObject(1215,1474.14831543,-1674.36474609,13.61119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(8)
	CreateDynamicObject(1215,1474.82031250,-1674.37646484,13.61119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1215,1483.81970215,-1674.30603027,13.61119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1215,1484.54602051,-1674.31445312,13.61119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(11)
	CreateDynamicObject(1215,1496.89099121,-1614.60607910,14.35338593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(12)
	CreateDynamicObject(1215,1462.18115234,-1614.65258789,14.35338593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(13)
	CreateDynamicObject(1215,1463.38537598,-1613.62072754,13.93584442,0.00000000,0.00000000,0.00000000); //object(bollardlight)(14)
	CreateDynamicObject(1215,1495.82128906,-1613.63610840,13.94602871,0.00000000,0.00000000,0.00000000); //object(bollardlight)(15)
	CreateDynamicObject(1215,1487.78186035,-1748.35034180,15.00963593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(16)
	CreateDynamicObject(1215,1474.22619629,-1748.41113281,15.00963593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(17)
	CreateDynamicObject(1215,1468.15954590,-1762.60302734,18.36007881,0.00000000,0.00000000,0.00000000); //object(bollardlight)(18)
	CreateDynamicObject(1215,1493.94995117,-1762.55700684,18.36007881,0.00000000,0.00000000,0.00000000); //object(bollardlight)(19)
	CreateDynamicObject(1215,1502.57519531,-1745.86621094,13.42059803,0.00000000,0.00000000,0.00000000); //object(bollardlight)(20)
	CreateDynamicObject(1215,1449.97119141,-1751.18542480,13.61119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1408,1447.36279297,-1745.23889160,13.64224529,0.00000000,0.00000000,180.00000000); //object(dyn_f_wood_2)(1)
	CreateDynamicObject(1408,1441.90612793,-1745.24353027,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(2)
	CreateDynamicObject(1408,1436.47094727,-1745.23608398,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(3)
	CreateDynamicObject(1408,1431.02868652,-1745.25695801,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(4)
	CreateDynamicObject(1408,1425.58227539,-1745.27148438,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(5)
	CreateDynamicObject(1408,1420.18566895,-1745.30407715,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(6)
	CreateDynamicObject(1408,1414.78881836,-1745.31518555,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(7)
	CreateDynamicObject(1408,1409.37231445,-1745.30444336,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(8)
	CreateDynamicObject(1408,1405.36572266,-1745.30139160,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(9)
	CreateDynamicObject(1408,1514.68664551,-1745.33508301,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(10)
	CreateDynamicObject(1408,1520.17761230,-1745.31591797,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(11)
	CreateDynamicObject(1408,1525.61608887,-1745.31921387,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(12)
	CreateDynamicObject(1408,1531.08325195,-1745.29138184,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(13)
	CreateDynamicObject(1408,1536.52429199,-1745.28442383,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(14)
	CreateDynamicObject(1408,1541.96435547,-1745.31726074,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(15)
	CreateDynamicObject(1408,1547.44091797,-1745.31054688,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(16)
	CreateDynamicObject(1408,1552.80871582,-1745.26391602,13.64224529,0.00000000,0.00000000,179.99450684); //object(dyn_f_wood_2)(17)
	CreateDynamicObject(1408,1511.94421387,-1747.98388672,13.64224529,0.00000000,0.00000000,269.99450684); //object(dyn_f_wood_2)(19)
	CreateDynamicObject(1408,1449.92504883,-1748.08251953,13.64224529,0.00000000,0.00000000,89.98901367); //object(dyn_f_wood_2)(20)
	CreateDynamicObject(1215,1512.02868652,-1750.94750977,13.61119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(25)
	CreateDynamicObject(1215,1555.77746582,-1745.30456543,13.61119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(26)
	CreateDynamicObject(1215,1402.42810059,-1745.30407715,13.61119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(27)
	CreateDynamicObject(712,1456.12646484,-1712.39660645,23.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(16)
	CreateDynamicObject(712,1464.12988281,-1712.47448730,23.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(17)
	CreateDynamicObject(712,1492.82946777,-1712.61376953,23.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(18)
	CreateDynamicObject(712,1500.71643066,-1712.49780273,23.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(19)
	CreateDynamicObject(712,1454.53295898,-1616.44763184,23.38842010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(20)
	CreateDynamicObject(712,1504.59912109,-1616.47216797,23.38842010,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(21)
	CreateDynamicObject(18721,1480.63439941,-1638.78967285,16.49718475,0.00000000,0.00000000,0.00000000); //object(mulhouse03_cunte) (1)
	CreateDynamicObject(18721,1481.18798828,-1639.68176270,16.36631775,0.00000000,0.00000000,0.00000000); //object(mulhouse03_cunte) (2)
	CreateDynamicObject(18721,1480.90478516,-1640.61779785,15.97231960,0.00000000,0.00000000,0.00000000); //object(mulhouse03_cunte) (3)
	CreateDynamicObject(18721,1480.33410645,-1641.12011719,16.14499283,0.00000000,0.00000000,0.00000000); //object(mulhouse03_cunte) (4)
	CreateDynamicObject(18721,1479.38269043,-1641.13769531,16.25965309,0.00000000,0.00000000,0.00000000); //object(mulhouse03_cunte) (5)
	CreateDynamicObject(18721,1478.58728027,-1640.32409668,16.47438240,0.00000000,0.00000000,0.00000000); //object(mulhouse03_cunte) (6)
	CreateDynamicObject(18721,1478.53820801,-1639.63928223,16.35750198,0.00000000,0.00000000,0.00000000); //object(mulhouse03_cunte) (7)
	CreateDynamicObject(18721,1479.32739258,-1638.66845703,16.20303726,0.00000000,0.00000000,0.00000000); //object(mulhouse03_cunte) (8)
	CreateDynamicObject(18739,1471.26757812,-1639.73022461,13.19843769,0.00000000,0.00000000,0.00000000); //object(roads38ce) (1)
	CreateDynamicObject(18739,1488.42846680,-1639.51245117,13.19843769,0.00000000,0.00000000,0.00000000); //object(roads38ce) (2)
	CreateDynamicObject(18739,1480.14440918,-1629.88208008,13.19843769,0.00000000,0.00000000,0.00000000); //object(roads38ce) (3)
	CreateDynamicObject(18739,1479.43225098,-1649.77111816,13.19843769,0.00000000,0.00000000,0.00000000); //object(roads38ce) (4)
	CreateDynamicObject(1215,1479.43225098,-1649.73693848,13.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1471.27465820,-1639.74780273,13.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1480.12500000,-1629.89404297,13.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1488.35290527,-1639.52856445,13.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(2773,1492.81896973,-1583.29467773,13.06410313,0.00000000,0.00000000,320.00000000); //object(cj_airprt_bar) (1)
	CreateDynamicObject(2773,1491.23962402,-1585.25512695,13.06410313,0.00000000,0.00000000,319.99877930); //object(cj_airprt_bar) (2)
	CreateDynamicObject(2773,1503.54003906,-1583.49755859,13.06410313,0.00000000,0.00000000,29.99877930); //object(cj_airprt_bar) (3)
	CreateDynamicObject(2773,1483.40393066,-1771.67407227,18.31298447,0.00000000,0.00000000,319.99816895); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,1504.77929688,-1585.66992188,13.06410313,0.00000000,0.00000000,29.99816895); //object(cj_airprt_bar) (5)
	CreateDynamicObject(2773,1478.72924805,-1771.79931641,18.31298447,0.00000000,0.00000000,39.99328613); //object(cj_airprt_bar) (6)
	CreateDynamicObject(3851,1485.24829102,-1751.70922852,22.22030067,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(9)
	CreateDynamicObject(3851,1478.16015625,-1751.70019531,22.24530792,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx)(8)
	CreateDynamicObject(970,1498.15148926,-1748.27270508,14.99679375,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1461.81396484,-1750.37500000,14.99679375,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1500.27050781,-1750.36816406,14.99679375,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1494.01733398,-1748.30139160,14.99679375,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1489.88818359,-1748.30712891,14.99679375,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,1463.87451172,-1748.30456543,14.99679375,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (6)
	CreateDynamicObject(970,1467.94641113,-1748.34313965,14.99679375,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,1472.09130859,-1748.33422852,14.99679375,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (8)
	CreateDynamicObject(996,1574.66625977,-1743.00317383,13.29563046,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier1) (1)
	CreateDynamicObject(996,1574.64758301,-1751.09997559,13.29563046,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier1) (2)
	CreateDynamicObject(996,1574.64599609,-1759.17712402,13.29563046,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier1) (3)
	CreateDynamicObject(996,1574.60961914,-1767.33398438,13.28517532,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier1) (4)
	CreateDynamicObject(996,1330.28161621,-1727.10327148,13.29563046,0.00000000,0.00000000,180.00000000); //object(lhouse_barrier1) (5)
	CreateDynamicObject(1215,1574.72363281,-1742.24621582,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(17)
	CreateDynamicObject(1215,1574.57666016,-1783.10485840,13.10190868,0.00000000,0.00000000,0.00000000); //object(bollardlight)(17)
	CreateDynamicObject(996,1574.57031250,-1775.47753906,13.28770542,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier1) (6)
	CreateDynamicObject(996,1338.47290039,-1727.10156250,13.29563046,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (7)
	CreateDynamicObject(996,1346.67456055,-1727.10229492,13.29891205,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (8)
	CreateDynamicObject(996,1354.84631348,-1727.08618164,13.29910946,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (9)
	CreateDynamicObject(996,1363.03063965,-1727.11254883,13.29563046,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (10)
	CreateDynamicObject(996,1371.18603516,-1727.14123535,13.29563046,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (11)
	CreateDynamicObject(996,1379.37365723,-1727.14477539,13.29563046,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (12)
	CreateDynamicObject(996,1387.57739258,-1727.17321777,13.29563046,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (13)
	CreateDynamicObject(996,1395.80541992,-1727.17626953,13.29563046,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (14)
	CreateDynamicObject(996,1404.00500488,-1727.18676758,13.28783703,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (15)
	CreateDynamicObject(996,1412.13671875,-1727.21252441,13.28783703,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier1) (16)
	CreateDynamicObject(1215,1412.86816406,-1727.14758301,13.10340500,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1322.71484375,-1727.11486816,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1228,1350.81726074,-1722.26049805,13.02066708,0.00000000,0.00000000,280.00000000); //object(roadworkbarrier1) (1)
	CreateDynamicObject(1228,1352.36596680,-1678.77490234,13.03251743,0.00000000,0.00000000,179.99877930); //object(roadworkbarrier1) (2)
	CreateDynamicObject(1228,1346.73535156,-1722.23632812,12.99815845,0.00000000,0.00000000,259.99694824); //object(roadworkbarrier1) (3)
	CreateDynamicObject(1228,1352.26757812,-1683.19323730,13.03279972,0.00000000,0.00000000,179.99450684); //object(roadworkbarrier1) (4)
	CreateDynamicObject(1228,1348.87744141,-1588.90930176,12.86731148,0.00000000,0.00000000,269.99450684); //object(roadworkbarrier1) (5)
	CreateDynamicObject(1228,1354.65234375,-1590.52209473,12.95291615,0.00000000,0.00000000,239.98901367); //object(roadworkbarrier1) (6)
	CreateDynamicObject(1228,1351.83581543,-1589.71582031,12.91104984,0.00000000,0.00000000,257.98535156); //object(roadworkbarrier1) (7)
	CreateDynamicObject(1228,1352.24084473,-1619.92626953,13.03662777,0.00000000,0.00000000,179.98095703); //object(roadworkbarrier1) (8)
	CreateDynamicObject(1228,1352.23852539,-1622.43518066,13.03831577,0.00000000,0.00000000,179.97802734); //object(roadworkbarrier1) (9)
	CreateDynamicObject(996,1366.35925293,-1592.95959473,13.34666538,0.00000000,0.00000000,163.74450684); //object(lhouse_barrier1) (18)
	CreateDynamicObject(996,1399.10998535,-1400.56445312,13.13156796,0.00000000,0.00000000,179.74023438); //object(lhouse_barrier1) (20)
	CreateDynamicObject(996,1362.29394531,-1618.87695312,13.55081367,0.00000000,0.00000000,179.73632812); //object(lhouse_barrier1) (21)
	CreateDynamicObject(996,1390.80847168,-1400.57055664,13.13156796,0.00000000,0.00000000,179.73632812); //object(lhouse_barrier1) (22)
	CreateDynamicObject(996,1382.50097656,-1400.56201172,13.13156796,0.00000000,0.00000000,179.73632812); //object(lhouse_barrier1) (23)
	CreateDynamicObject(1238,1374.45825195,-1400.50341797,12.70870781,0.00000000,0.00000000,0.00000000); //object(trafficcone) (2)
	CreateDynamicObject(1238,1372.68017578,-1400.52612305,12.70870781,0.00000000,0.00000000,0.00000000); //object(trafficcone) (3)
	CreateDynamicObject(1238,1370.66577148,-1400.48168945,12.70870781,0.00000000,0.00000000,0.00000000); //object(trafficcone) (4)
	CreateDynamicObject(1238,1368.78479004,-1400.52905273,12.70870781,0.00000000,0.00000000,0.00000000); //object(trafficcone) (5)
	CreateDynamicObject(1238,1394.96728516,-1400.76489258,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (6)
	CreateDynamicObject(1238,1394.25451660,-1450.06408691,12.87286758,0.00000000,0.00000000,0.00000000); //object(trafficcone) (7)
	CreateDynamicObject(1238,1399.06481934,-1402.60241699,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (8)
	CreateDynamicObject(996,1428.40014648,-1440.76196289,13.13156796,0.00000000,0.00000000,179.73632812); //object(lhouse_barrier1) (25)
	CreateDynamicObject(996,1436.64807129,-1440.75085449,13.13156796,0.00000000,0.00000000,179.73632812); //object(lhouse_barrier1) (26)
	CreateDynamicObject(1238,1438.33459473,-1440.90136719,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (9)
	CreateDynamicObject(1238,1440.93908691,-1440.87670898,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (10)
	CreateDynamicObject(1238,1443.43298340,-1440.85131836,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (11)
	CreateDynamicObject(1238,1425.55395508,-1440.40246582,12.70870781,0.00000000,0.00000000,0.00000000); //object(trafficcone) (12)
	CreateDynamicObject(1238,1423.58508301,-1440.13732910,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (13)
	CreateDynamicObject(1238,1421.73242188,-1439.66113281,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (14)
	CreateDynamicObject(1238,1420.96508789,-1438.06445312,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (15)
	CreateDynamicObject(1226,1444.48950195,-1445.52917480,16.25723267,0.00000000,0.00000000,270.00000000); //object(lamppost3) (1)
	CreateDynamicObject(1226,1415.64343262,-1445.48010254,16.26494789,0.00000000,0.00000000,259.99694824); //object(lamppost3) (2)
	CreateDynamicObject(1226,1368.93164062,-1391.36706543,16.38418198,0.00000000,0.00000000,87.98901367); //object(lamppost3) (16)
	CreateDynamicObject(1238,1418.56201172,-1390.59472656,12.70870781,0.00000000,0.00000000,0.00000000); //object(trafficcone) (16)
	CreateDynamicObject(1238,1421.19860840,-1390.72448730,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (17)
	CreateDynamicObject(1238,1423.57202148,-1391.68420410,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (18)
	CreateDynamicObject(1238,1425.34167480,-1394.49597168,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (19)
	CreateDynamicObject(1238,1425.46374512,-1397.37939453,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (20)
	CreateDynamicObject(1215,1368.03979492,-1400.54919434,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,1399.24218750,-1400.89550781,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1215,1417.91662598,-1390.48986816,12.95485115,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
	CreateDynamicObject(1215,1425.46069336,-1397.87548828,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
	CreateDynamicObject(1215,1421.51232910,-1440.46276855,12.95485115,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
	CreateDynamicObject(1215,1443.99829102,-1440.68920898,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
	CreateDynamicObject(1238,1397.32714844,-1401.43359375,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (21)
	CreateDynamicObject(1238,1392.34667969,-1449.87109375,12.87286758,0.00000000,0.00000000,0.00000000); //object(trafficcone) (22)
	CreateDynamicObject(1238,1390.58789062,-1448.71435547,12.87286758,0.00000000,0.00000000,0.00000000); //object(trafficcone) (23)
	CreateDynamicObject(1238,1389.30273438,-1447.22448730,12.87286758,0.00000000,0.00000000,0.00000000); //object(trafficcone) (24)
	CreateDynamicObject(1238,1388.50537109,-1446.05114746,12.87286758,0.00000000,0.00000000,0.00000000); //object(trafficcone) (25)
	CreateDynamicObject(996,1371.45886230,-1575.10131836,13.36418247,0.00000000,0.00000000,163.74023438); //object(lhouse_barrier1) (28)
	CreateDynamicObject(996,1405.17053223,-1450.82153320,13.59506989,0.00000000,0.00000000,179.74023438); //object(lhouse_barrier1) (29)
	CreateDynamicObject(1238,1402.35180664,-1437.59692383,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (26)
	CreateDynamicObject(1238,1403.46984863,-1439.52636719,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (27)
	CreateDynamicObject(1238,1405.45129395,-1440.69409180,12.70099258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (28)
	CreateDynamicObject(1226,1394.23022461,-1444.50878906,16.25723267,0.00000000,0.00000000,219.99694824); //object(lamppost3) (29)
	CreateDynamicObject(1226,1392.72863770,-1425.89233398,16.25723267,0.00000000,0.00000000,179.99572754); //object(lamppost3) (30)
	CreateDynamicObject(1226,1390.44726562,-1411.01818848,16.25723267,0.00000000,0.00000000,229.99450684); //object(lamppost3) (31)
	CreateDynamicObject(1226,1370.07983398,-1410.26806641,16.27009773,0.00000000,0.00000000,259.99328613); //object(lamppost3) (32)
	CreateDynamicObject(1226,1401.77514648,-1391.08166504,16.25723267,0.00000000,0.00000000,89.99145508); //object(lamppost3) (33)
	CreateDynamicObject(1226,1423.61267090,-1392.18542480,16.25723267,0.00000000,0.00000000,49.98901367); //object(lamppost3) (34)
	CreateDynamicObject(1226,1425.36218262,-1414.54943848,16.25723267,0.00000000,0.00000000,359.98779297); //object(lamppost3) (35)
	CreateDynamicObject(1226,1427.20886230,-1435.43188477,16.25723267,0.00000000,0.00000000,39.98352051); //object(lamppost3) (36)
	CreateDynamicObject(1226,1444.42150879,-1436.56762695,16.25723267,0.00000000,0.00000000,89.97924805); //object(lamppost3) (37)
	CreateDynamicObject(1269,1082.37048340,-1390.53454590,13.61479568,0.00000000,0.00000000,110.00000000); //object(parkingmeter) (2)
	CreateDynamicObject(1269,1091.58312988,-1390.55529785,13.56296062,0.00000000,0.00000000,103.99514771); //object(parkingmeter) (4)
	CreateDynamicObject(1269,1101.78942871,-1390.20947266,13.50715637,0.00000000,0.00000000,103.99108887); //object(parkingmeter) (5)
	CreateDynamicObject(996,1434.65014648,-1602.85900879,13.29563046,0.00000000,0.00000000,269.73632812); //object(lhouse_barrier1) (30)
	CreateDynamicObject(996,1434.57629395,-1611.05981445,13.29563046,0.00000000,0.00000000,269.73083496); //object(lhouse_barrier1) (31)
	CreateDynamicObject(996,1434.61242676,-1619.93188477,13.29563046,0.00000000,0.00000000,269.73083496); //object(lhouse_barrier1) (32)
	CreateDynamicObject(996,1434.57653809,-1628.35949707,13.29563046,0.00000000,0.00000000,269.73083496); //object(lhouse_barrier1) (33)
	CreateDynamicObject(996,1434.58044434,-1636.66979980,13.29563046,0.00000000,0.00000000,270.23083496); //object(lhouse_barrier1) (34)
	CreateDynamicObject(996,1434.58728027,-1644.93237305,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (35)
	CreateDynamicObject(996,1434.59643555,-1653.17004395,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (36)
	CreateDynamicObject(996,1434.59863281,-1661.42028809,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (37)
	CreateDynamicObject(996,1434.62658691,-1669.64416504,13.30044746,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (38)
	CreateDynamicObject(996,1434.62915039,-1677.87597656,13.30041027,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (39)
	CreateDynamicObject(996,1434.65063477,-1686.11914062,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (40)
	CreateDynamicObject(996,1434.65771484,-1694.40490723,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (41)
	CreateDynamicObject(996,1434.67675781,-1703.13574219,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (42)
	CreateDynamicObject(996,1434.74877930,-1711.45471191,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (43)
	CreateDynamicObject(996,1444.23852539,-1597.65661621,13.29563046,0.00000000,0.00000000,0.23071289); //object(lhouse_barrier1) (45)
	CreateDynamicObject(996,1452.48352051,-1597.61877441,13.29563046,0.00000000,0.00000000,0.23071289); //object(lhouse_barrier1) (46)
	CreateDynamicObject(996,1460.80554199,-1597.64257812,13.29563046,0.00000000,0.00000000,0.23071289); //object(lhouse_barrier1) (47)
	CreateDynamicObject(996,1469.04016113,-1597.65625000,13.29563046,0.00000000,0.00000000,0.23071289); //object(lhouse_barrier1) (48)
	CreateDynamicObject(996,1477.25463867,-1597.57458496,13.29563046,0.00000000,0.00000000,0.23071289); //object(lhouse_barrier1) (49)
	CreateDynamicObject(996,1485.48242188,-1597.54870605,13.29563046,0.00000000,0.00000000,0.23071289); //object(lhouse_barrier1) (50)
	CreateDynamicObject(996,1493.73400879,-1597.54821777,13.29563046,0.00000000,0.00000000,0.23071289); //object(lhouse_barrier1) (51)
	CreateDynamicObject(996,1502.03186035,-1597.54638672,13.29563046,0.00000000,0.00000000,0.23071289); //object(lhouse_barrier1) (52)
	CreateDynamicObject(996,1510.31005859,-1597.59899902,13.29563046,0.00000000,0.00000000,0.23071289); //object(lhouse_barrier1) (53)
	CreateDynamicObject(996,1524.54052734,-1603.03662109,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (54)
	CreateDynamicObject(996,1524.55285645,-1611.28430176,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (55)
	CreateDynamicObject(996,1524.56250000,-1619.54150391,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (56)
	CreateDynamicObject(996,1524.53527832,-1627.79980469,13.29563046,0.00000000,0.00000000,270.23071289); //object(lhouse_barrier1) (57)
	CreateDynamicObject(996,1524.52966309,-1636.10180664,13.29563046,0.00000000,0.00000000,269.73071289); //object(lhouse_barrier1) (58)
	CreateDynamicObject(996,1524.51843262,-1644.32946777,13.29563046,0.00000000,0.00000000,269.72534180); //object(lhouse_barrier1) (59)
	CreateDynamicObject(996,1524.47961426,-1652.55334473,13.28793049,0.00000000,0.00000000,269.72534180); //object(lhouse_barrier1) (60)
	CreateDynamicObject(996,1524.47863770,-1660.84167480,13.28793049,0.00000000,0.00000000,269.72534180); //object(lhouse_barrier1) (61)
	CreateDynamicObject(996,1524.45031738,-1669.03210449,13.29563046,0.00000000,0.00000000,269.72534180); //object(lhouse_barrier1) (62)
	CreateDynamicObject(996,1524.41625977,-1677.23339844,13.29563046,0.00000000,0.00000000,269.72534180); //object(lhouse_barrier1) (63)
	CreateDynamicObject(996,1524.36328125,-1695.38513184,13.29563046,0.00000000,0.00000000,269.72534180); //object(lhouse_barrier1) (64)
	CreateDynamicObject(996,1524.42187500,-1685.40136719,13.29563046,0.00000000,0.00000000,269.72534180); //object(lhouse_barrier1) (65)
	CreateDynamicObject(996,1524.41271973,-1703.81384277,13.29563046,0.00000000,0.00000000,269.72534180); //object(lhouse_barrier1) (66)
	CreateDynamicObject(996,1524.37988281,-1712.14770508,13.29563046,0.00000000,0.00000000,269.72534180); //object(lhouse_barrier1) (68)
	CreateDynamicObject(7091,1500.08203125,-1750.25781250,29.05866241,0.00000000,0.00000000,90.75000000); //object(vegasflag02) (1)
	CreateDynamicObject(7091,1462.04455566,-1750.25781250,29.05131531,0.00000000,0.00000000,90.00000000); //object(vegasflag02) (2)
	CreateDynamicObject(7091,1484.60754395,-1750.88281250,28.95911598,0.00000000,0.00000000,90.74707031); //object(vegasflag02) (4)
	CreateDynamicObject(7091,1478.03015137,-1750.88281250,29.00450134,0.00000000,0.00000000,90.74707031); //object(vegasflag02) (5)
	CreateDynamicObject(7091,1743.60302734,-1863.92993164,27.11013031,0.00000000,0.00000000,90.00000000); //object(vegasflag02) (6)
	CreateDynamicObject(970,1671.59863281,-1890.65795898,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (10)
	CreateDynamicObject(970,1667.44616699,-1890.65466309,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (11)
	CreateDynamicObject(970,1663.31677246,-1890.67016602,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (12)
	CreateDynamicObject(970,1659.14733887,-1890.67321777,13.10358524,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (14)
	CreateDynamicObject(970,1655.00097656,-1890.67285156,13.10358524,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (15)
	CreateDynamicObject(970,1650.83776855,-1890.66333008,13.10554314,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (16)
	CreateDynamicObject(970,1636.26721191,-1899.38964844,13.10483837,0.00000000,0.00000000,92.00000000); //object(fencesmallb) (17)
	CreateDynamicObject(970,1671.57763672,-1901.42297363,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (20)
	CreateDynamicObject(970,1667.47131348,-1901.42700195,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (21)
	CreateDynamicObject(970,1663.29943848,-1901.42199707,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (22)
	CreateDynamicObject(970,1659.17773438,-1901.42211914,13.10358524,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (23)
	CreateDynamicObject(970,1655.02282715,-1901.42028809,13.10358524,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (24)
	CreateDynamicObject(970,1650.84606934,-1901.42126465,13.10358524,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (25)
	CreateDynamicObject(970,1646.71105957,-1901.43737793,13.10358524,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (26)
	CreateDynamicObject(970,1642.59313965,-1901.43200684,13.10358524,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (27)
	CreateDynamicObject(970,1638.44030762,-1901.46496582,13.10329437,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (28)
	CreateDynamicObject(970,1646.66699219,-1890.65625000,13.10656452,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (30)
	CreateDynamicObject(970,1644.53796387,-1888.59313965,13.10650063,0.00000000,0.00000000,91.99951172); //object(fencesmallb) (31)
	CreateDynamicObject(970,1673.67810059,-1888.58312988,13.09835625,0.00000000,0.00000000,89.99951172); //object(fencesmallb) (32)
	CreateDynamicObject(970,1673.67858887,-1899.34082031,13.09835625,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (33)
	CreateDynamicObject(1269,1673.54028320,-1885.67028809,13.36478519,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (6)
	CreateDynamicObject(1269,1669.55749512,-1886.68591309,13.36478519,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (7)
	CreateDynamicObject(1269,1665.15808105,-1886.61584473,13.36478519,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (8)
	CreateDynamicObject(1269,1648.87634277,-1885.75610352,13.37154388,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (11)
	CreateDynamicObject(1269,1643.54516602,-1900.17175293,13.37001419,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (12)
	CreateDynamicObject(1269,1636.14013672,-1897.30371094,13.37231731,0.00000000,0.00000000,30.00000000); //object(parkingmeter) (13)
	CreateDynamicObject(1269,1647.53881836,-1900.53649902,13.37001419,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (14)
	CreateDynamicObject(1269,1651.34851074,-1900.51367188,13.37001419,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (15)
	CreateDynamicObject(1269,1655.42175293,-1900.79394531,13.37001419,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (16)
	CreateDynamicObject(1269,1659.97595215,-1900.75695801,13.37001419,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (17)
	CreateDynamicObject(1269,1664.87243652,-1900.69775391,13.36478519,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (18)
	CreateDynamicObject(1269,1669.48925781,-1900.98889160,13.36478519,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (19)
	CreateDynamicObject(1238,1673.79748535,-1882.20092773,12.87178040,0.00000000,0.00000000,0.00000000); //object(trafficcone) (29)
	CreateDynamicObject(1238,1674.33972168,-1880.81506348,12.86502552,0.00000000,0.00000000,0.00000000); //object(trafficcone) (30)
	CreateDynamicObject(1238,1674.98876953,-1879.48632812,12.85911751,0.00000000,0.00000000,0.00000000); //object(trafficcone) (31)
	CreateDynamicObject(1238,1636.28942871,-1895.85803223,12.87325764,0.00000000,0.00000000,0.00000000); //object(trafficcone) (32)
	CreateDynamicObject(1238,1644.25646973,-1890.62817383,12.87386513,0.00000000,0.00000000,0.00000000); //object(trafficcone) (35)
	CreateDynamicObject(1238,1642.90051270,-1889.97058105,12.87387180,0.00000000,0.00000000,0.00000000); //object(trafficcone) (36)
	CreateDynamicObject(1238,1641.41455078,-1888.95263672,12.87337494,0.00000000,0.00000000,0.00000000); //object(trafficcone) (37)
	CreateDynamicObject(1238,1640.23437500,-1887.63977051,12.87273407,0.00000000,0.00000000,0.00000000); //object(trafficcone) (38)
	CreateDynamicObject(1238,1640.01940918,-1886.29895020,12.87207890,0.00000000,0.00000000,0.00000000); //object(trafficcone) (39)
	CreateDynamicObject(1238,1639.80261230,-1884.70947266,12.87130165,0.00000000,0.00000000,0.00000000); //object(trafficcone) (40)
	CreateDynamicObject(1238,1639.67541504,-1883.06909180,12.87050056,0.00000000,0.00000000,0.00000000); //object(trafficcone) (41)
	CreateDynamicObject(1238,1634.64880371,-1893.41711426,12.87555504,0.00000000,0.00000000,0.00000000); //object(trafficcone) (42)
	CreateDynamicObject(1238,1633.40905762,-1892.49182129,12.87510300,0.00000000,0.00000000,0.00000000); //object(trafficcone) (43)
	CreateDynamicObject(1238,1632.25231934,-1891.43017578,12.87458420,0.00000000,0.00000000,0.00000000); //object(trafficcone) (44)
	CreateDynamicObject(1238,1631.44042969,-1889.64489746,12.87371254,0.00000000,0.00000000,0.00000000); //object(trafficcone) (45)
	CreateDynamicObject(1238,1630.90148926,-1887.94726562,12.87288380,0.00000000,0.00000000,0.00000000); //object(trafficcone) (46)
	CreateDynamicObject(1238,1630.83496094,-1886.35583496,12.87210655,0.00000000,0.00000000,0.00000000); //object(trafficcone) (47)
	CreateDynamicObject(1238,1630.83959961,-1884.61083984,12.87125397,0.00000000,0.00000000,0.00000000); //object(trafficcone) (48)
	CreateDynamicObject(1238,1630.90161133,-1882.82592773,12.87038231,0.00000000,0.00000000,0.00000000); //object(trafficcone) (49)
	CreateDynamicObject(1269,1656.87426758,-1885.85278320,13.37284660,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (21)
	CreateDynamicObject(1269,1652.75878906,-1885.70251465,13.37151814,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (22)
	CreateDynamicObject(1269,1660.87109375,-1886.03527832,13.37001419,0.00000000,0.00000000,0.00000000); //object(parkingmeter) (23)
	CreateDynamicObject(1238,1636.06542969,-1894.34082031,12.87405205,0.00000000,0.00000000,0.00000000); //object(trafficcone) (50)

	// -= Centro de Noticias de San Andreas =-
	CreateDynamicObject(1251,784.00750732,-1325.06250000,12.49530983,0.00000000,0.00000000,88.75000000); //object(smashbar) (1)
	CreateDynamicObject(1251,777.13793945,-1324.94189453,12.49530983,0.00000000,0.00000000,88.74755859); //object(smashbar) (3)
	CreateDynamicObject(1251,770.31243896,-1324.77783203,12.49530983,0.00000000,0.00000000,88.74755859); //object(smashbar) (4)
	CreateDynamicObject(1251,763.44262695,-1324.62878418,12.49530983,0.00000000,0.00000000,88.74755859); //object(smashbar) (5)
	CreateDynamicObject(1251,756.58789062,-1324.49401855,12.49530983,0.00000000,0.00000000,88.74755859); //object(smashbar) (6)
	CreateDynamicObject(1251,784.05700684,-1315.25231934,12.48749733,0.00000000,0.00000000,88.74755859); //object(smashbar) (7)
	CreateDynamicObject(1251,777.18786621,-1315.08190918,12.48749733,0.00000000,0.00000000,88.74755859); //object(smashbar) (8)
	CreateDynamicObject(1251,770.39636230,-1314.97473145,12.48749733,0.00000000,0.00000000,88.74755859); //object(smashbar) (9)
	CreateDynamicObject(1251,763.52313232,-1314.83337402,12.48749733,0.00000000,0.00000000,88.74755859); //object(smashbar) (10)
	CreateDynamicObject(1251,757.30383301,-1314.67211914,12.48749733,0.00000000,0.00000000,88.74755859); //object(smashbar) (11)
	CreateDynamicObject(3749,778.07116699,-1330.56347656,18.40746689,0.00000000,0.00000000,0.00000000); //object(clubgate01_lax) (1)
	CreateDynamicObject(4100,777.98950195,-1384.88159180,14.42522430,0.00000000,0.00000000,320.25000000); //object(meshfence1_lan) (1)
	CreateDynamicObject(4100,777.98925781,-1384.88085938,15.57523727,0.00000000,0.00000000,320.24597168); //object(meshfence1_lan) (2)
	CreateDynamicObject(4597,773.46008301,-1362.44995117,13.00877380,0.00000000,0.00000000,270.00000000); //object(crprkblok4_lan2) (1)
	CreateDynamicObject(18850,739.88250732,-1371.40087891,15.67221451,0.00000000,0.00000000,0.00000000); //object(lodcehollyhil03) (1)
	CreateDynamicObject(4832,702.95324707,-1375.08862305,59.28059387,0.00000000,0.00000000,180.00000000); //object(airtwer_las) (1)
	CreateDynamicObject(7586,695.68487549,-1359.02734375,28.01071548,0.00000000,0.00000000,0.00000000); //object(miragebuild07) (1)
	CreateDynamicObject(3763,695.34600830,-1359.69104004,64.15263367,0.00000000,0.00000000,0.00000000); //object(ce_radarmast3) (1)
	CreateDynamicObject(1595,657.26898193,-1333.06237793,25.99443626,0.00000000,0.00000000,220.00000000); //object(satdishbig) (2)
	CreateDynamicObject(1595,655.69097900,-1380.44604492,26.15735435,0.00000000,0.00000000,330.00000000); //object(satdishbig) (3)
	CreateDynamicObject(1595,697.93988037,-1381.58032227,40.63858032,0.00000000,0.00000000,359.99572754); //object(satdishbig) (5)
	CreateDynamicObject(1595,721.99218750,-1333.39794922,32.64882660,0.00000000,0.00000000,129.99453735); //object(satdishbig) (6)
	CreateDynamicObject(1569,732.09246826,-1349.56030273,12.64206791,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,732.09246826,-1346.60009766,12.64095402,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (2)
	CreateDynamicObject(1569,649.69732666,-1355.25292969,12.55472088,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (3)
	CreateDynamicObject(1569,649.64947510,-1358.25805664,12.58898830,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (4)
	CreateDynamicObject(1215,649.65832520,-1355.09362793,13.11832237,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,649.52673340,-1358.45556641,13.13683319,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,783.74829102,-1329.76147461,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,772.42480469,-1329.39868164,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,781.70513916,-1384.74780273,13.29061794,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,774.12023926,-1384.79589844,13.28200340,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,773.20422363,-1364.55297852,13.09138107,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,773.19415283,-1360.81164551,13.09136868,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,773.49774170,-1380.68896484,13.22608185,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,773.42285156,-1344.34472656,13.09164810,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,728.68762207,-1358.73669434,27.64436340,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1215,752.57135010,-1358.95690918,27.51454353,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
	CreateDynamicObject(1215,728.33996582,-1383.76928711,27.49436569,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
	CreateDynamicObject(1215,756.68750000,-1383.50781250,27.59436417,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
	CreateDynamicObject(1215,654.68688965,-1334.38610840,21.25141525,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
	CreateDynamicObject(1215,651.63562012,-1379.60705566,23.55826759,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
	CreateDynamicObject(1215,732.09246826,-1349.73803711,13.07123470,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,732.09246826,-1346.48840332,13.07837677,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(17064,743.64251709,-1355.46447754,12.25000381,0.00000000,0.00000000,180.00000000); //object(cw2_garage) (1)
	CreateDynamicObject(3055,217.55868530,128.73887634,1000.46246338,0.00000000,0.00000000,90.00000000); //object(kmb_shutter) (1)
	CreateDynamicObject(14391,263.90100098,107.32901001,1004.57727051,0.00000000,0.00000000,90.00000000); //object(dr_gsnew07) (1)
	CreateDynamicObject(14391,261.05078125,108.85546875,1004.57727051,0.00000000,0.00000000,0.00000000); //object(dr_gsnew07) (2)
	CreateDynamicObject(14391,269.83337402,119.43377686,1004.57727051,0.00000000,0.00000000,180.00000000); //object(dr_gsnew07) (3)
	CreateDynamicObject(1671,265.63916016,109.23923492,1004.07739258,0.00000000,0.00000000,0.00000000); //object(swivelchair_a) (1)
	CreateDynamicObject(1671,264.15429688,109.31157684,1004.07739258,0.00000000,0.00000000,0.00000000); //object(swivelchair_a) (2)
	CreateDynamicObject(1671,263.45947266,110.25763702,1004.07739258,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (3)
	CreateDynamicObject(1671,263.45684814,111.43928528,1004.07739258,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (4)
	CreateDynamicObject(1671,267.66928101,120.08361816,1004.07739258,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (5)
	CreateDynamicObject(1671,267.63024902,118.49846649,1004.07739258,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (6)
	CreateDynamicObject(1671,267.62026978,117.08683014,1004.07739258,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (7)

	// -= Familia Corleone =-
	CreateDynamicObject(3877,1245.91955566,-737.93139648,95.69634247,0.00000000,0.00000000,22.00000000); //object(sf_rooflite)(1)
	CreateDynamicObject(3877,1234.90991211,-743.35656738,96.59786987,0.00000000,0.00000000,27.74462891); //object(sf_rooflite)(2)
	CreateDynamicObject(3749,1245.53210449,-768.04809570,96.79566193,0.00000000,0.00000000,0.00000000); //object(clubgate01_lax)(1)
	CreateDynamicObject(3749,1245.56225586,-768.22186279,85.64577484,1.24996948,180.00000000,180.00000000); //object(clubgate01_lax)(2)
	CreateDynamicObject(712,1234.47485352,-745.09918213,104.50531769,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(2)
	CreateDynamicObject(712,1201.53173828,-825.16638184,87.92285156,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(4)
	CreateDynamicObject(712,1236.02966309,-753.73510742,103.12082672,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(5)
	CreateDynamicObject(712,1252.97473145,-750.76123047,102.39271545,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(20)
	CreateDynamicObject(712,1308.62438965,-790.58624268,89.26918793,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(21)
	CreateDynamicObject(712,1312.19812012,-809.82421875,87.35800934,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(22)
	CreateDynamicObject(712,1312.93127441,-798.65393066,87.72296143,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(23)
	CreateDynamicObject(712,1207.14270020,-832.57800293,87.00296783,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(25)
	CreateDynamicObject(712,1216.12182617,-837.89404297,86.18798828,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(26)
	CreateDynamicObject(712,1224.52270508,-841.70330811,85.27411652,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(27)
	CreateDynamicObject(712,1234.04724121,-842.11694336,84.72535706,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(28)
	CreateDynamicObject(712,1247.10363770,-838.49591064,85.32206726,0.00000000,0.00000000,0.00000000); //object(vgs_palm03)(29)

	// -= Alhambra =-
	CreateDynamicObject(18648,1837.25781250,-1678.88269043,21.87788391,0.00000000,0.00000000,0.00000000); //object(wall2) (1)
	CreateDynamicObject(18648,1837.25781250,-1685.87438965,21.88265228,0.00000000,0.00000000,0.00000000); //object(wall2) (2)
	CreateDynamicObject(18648,1837.25781250,-1678.91857910,16.68293381,0.00000000,0.00000000,0.00000000); //object(wall2) (3)
	CreateDynamicObject(18648,1837.25781250,-1685.98852539,16.66990852,0.00000000,0.00000000,0.00000000); //object(wall2) (4)
	CreateDynamicObject(18648,1837.25781250,-1682.40417480,21.81660080,0.00000000,0.00000000,0.00000000); //object(wall2) (5)
	CreateDynamicObject(18648,1837.25781250,-1682.29089355,16.61502266,0.00000000,0.00000000,0.00000000); //object(wall2) (6)
	CreateDynamicObject(18647,1837.32275391,-1678.94592285,12.33896255,0.00000000,0.00000000,0.00000000); //object(wall1) (1)
	CreateDynamicObject(18647,1837.31750488,-1680.91027832,12.33886147,0.00000000,0.00000000,0.00000000); //object(wall1) (2)
	CreateDynamicObject(18647,1837.17980957,-1682.98889160,12.45162392,0.00000000,0.00000000,0.00000000); //object(wall1) (3)
	CreateDynamicObject(18647,1837.29541016,-1684.94384766,12.33843422,0.00000000,0.00000000,0.00000000); //object(wall1) (4)
	CreateDynamicObject(18647,1837.30676270,-1686.76391602,12.33865356,0.00000000,0.00000000,0.00000000); //object(wall1) (5)
	CreateDynamicObject(18654,491.58795166,-0.94342518,1001.07812500,0.00000000,0.00000000,50.00000000); //object(darkpoly) (1)
	CreateDynamicObject(18654,492.52639771,-2.58347321,1001.07067871,0.00000000,0.00000000,49.99877930); //object(darkpoly) (2)
	CreateDynamicObject(18654,480.79522705,-2.51794338,1001.07812500,0.00000000,0.00000000,129.99880981); //object(darkpoly) (4)
	CreateDynamicObject(18654,482.91659546,-1.13074589,1001.07812500,0.00000000,0.00000000,99.99572754); //object(darkpoly) (5)
	CreateDynamicObject(18655,483.47811890,-1.08612442,1001.07812500,0.00000000,0.00000000,100.00000000); //object(bridge) (1)
	CreateDynamicObject(18655,480.46325684,-2.94154453,1001.07812500,0.00000000,0.00000000,129.99755859); //object(bridge) (2)
	CreateDynamicObject(18655,491.73944092,-1.81725502,1001.07812500,0.00000000,0.00000000,49.99572754); //object(bridge) (3)
	CreateDynamicObject(18655,492.88452148,-2.96348000,1001.07067871,0.00000000,0.00000000,49.99328613); //object(bridge) (4)
	CreateDynamicObject(18653,483.21142578,-1.10907841,1001.07812500,0.00000000,0.00000000,100.00000000); //object(innerfence) (1)
	CreateDynamicObject(18653,491.65078735,-1.38171196,1001.07812500,0.00000000,0.00000000,29.99755859); //object(innerfence) (2)
	CreateDynamicObject(18653,492.67468262,-2.74787140,1001.07067871,0.00000000,0.00000000,45.99267578); //object(innerfence) (3)
	CreateDynamicObject(18653,480.67614746,-2.78500462,1001.07812500,0.00000000,0.00000000,135.98876953); //object(innerfence) (4)
	CreateDynamicObject(18651,484.91516113,-3.60626793,1001.40625000,0.00000000,0.00000000,270.00000000); //object(otunnel) (1)
	CreateDynamicObject(18651,486.86315918,-3.60016918,1001.40625000,0.00000000,0.00000000,270.00000000); //object(otunnel) (2)
	CreateDynamicObject(18651,488.80969238,-3.57825279,1001.40625000,0.00000000,0.00000000,270.00000000); //object(otunnel) (3)
	CreateDynamicObject(18651,490.08804321,-3.56308937,1001.40625000,0.00000000,0.00000000,270.00000000); //object(otunnel) (4)
	CreateDynamicObject(18652,483.93368530,-2.58714962,1001.40625000,0.00000000,0.00000000,0.00000000); //object(oroadbit) (1)
	CreateDynamicObject(18652,483.94595337,-1.11022663,1001.40625000,0.00000000,0.00000000,0.00000000); //object(oroadbit) (2)
	CreateDynamicObject(18652,491.08007812,-2.54492188,1001.40625000,0.00000000,0.00000000,0.00000000); //object(oroadbit) (3)
	CreateDynamicObject(18650,483.76904297,-14.16375160,999.70312500,0.00000000,0.00000000,0.00000000); //object(kickcrowd01) (1)
	CreateDynamicObject(18650,491.78170776,-14.09650898,999.70312500,0.00000000,0.00000000,0.00000000); //object(kickcrowd01) (2)
	CreateDynamicObject(18650,487.81460571,-9.99411964,999.70312500,0.00000000,0.00000000,90.00000000); //object(kickcrowd01) (3)
	CreateDynamicObject(18650,488.00186157,-18.16731453,999.70312500,0.00000000,0.00000000,90.00000000); //object(kickcrowd01) (4)
	CreateDynamicObject(18651,479.18130493,-22.38672066,1003.05120850,0.00000000,0.00000000,0.00000000); //object(otunnel) (5)
	CreateDynamicObject(18651,477.28839111,-22.43288231,1003.04425049,0.00000000,0.00000000,0.00000000); //object(otunnel) (6)
	CreateDynamicObject(18652,488.01077271,-21.22652817,1002.13281250,0.00000000,0.00000000,270.00000000); //object(oroadbit) (5)
	CreateDynamicObject(18652,486.06582642,-21.26163864,1002.13281250,0.00000000,0.00000000,270.00000000); //object(oroadbit) (6)
	CreateDynamicObject(18652,484.11834717,-21.27013016,1002.13281250,0.00000000,0.00000000,270.00000000); //object(oroadbit) (7)
	CreateDynamicObject(18652,482.15002441,-21.22028351,1002.13281250,0.00000000,0.00000000,269.50000000); //object(oroadbit) (8)
	CreateDynamicObject(18652,480.18222046,-21.22203636,1002.13281250,0.00000000,0.00000000,269.50000000); //object(oroadbit) (9)
	CreateDynamicObject(18646,477.22729492,-16.40727043,1003.82910156,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (1)
	CreateDynamicObject(18646,477.22817993,-15.57135677,1003.82910156,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (2)
	CreateDynamicObject(18646,477.27688599,-14.85038757,1003.82910156,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (3)
	CreateDynamicObject(18646,477.25708008,-14.33161449,1003.82910156,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (4)
	CreateDynamicObject(18646,477.25738525,-13.89871502,1003.82910156,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (5)
	CreateDynamicObject(18646,477.26330566,-13.53905582,1003.82910156,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (6)
	CreateDynamicObject(18646,492.73831177,-2.90983486,1001.16442871,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (7)
	CreateDynamicObject(18646,492.48867798,-2.74020195,1001.16442871,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (8)
	CreateDynamicObject(18646,491.82913208,-1.76205730,1001.17187500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (9)
	CreateDynamicObject(18646,491.57791138,-1.73200607,1001.17187500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (10)
	CreateDynamicObject(18646,480.63729858,-3.04520893,1001.17187500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (11)
	CreateDynamicObject(18646,481.05136108,-2.85732555,1001.17187500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (12)
	CreateDynamicObject(18646,483.08728027,-1.76928234,1001.17187500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (13)
	CreateDynamicObject(18646,483.34194946,-1.50265026,1001.17187500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (14)
	CreateDynamicObject(18646,483.86962891,-10.07955170,999.77343750,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (15)
	CreateDynamicObject(18646,483.83496094,-18.14863777,999.77343750,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (16)
	CreateDynamicObject(18646,491.73840332,-18.08456039,999.77343750,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (17)
	CreateDynamicObject(18646,491.70840454,-10.06427383,999.77343750,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (18)
	CreateDynamicObject(18646,501.20034790,-15.89995003,1000.81994629,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (19)
	CreateDynamicObject(18646,500.72433472,-16.28449059,1000.81250000,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (20)
	CreateDynamicObject(18646,500.49462891,-16.78012466,1000.81250000,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (21)
	CreateDynamicObject(18646,503.69891357,-19.08621597,1000.95312500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (22)
	CreateDynamicObject(18646,503.69552612,-19.45597267,1000.95312500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (23)
	CreateDynamicObject(18646,503.79907227,-19.88812065,1000.95312500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (24)
	CreateDynamicObject(18646,503.71682739,-20.20236778,1000.95312500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (25)
	CreateDynamicObject(18646,503.69076538,-20.52037239,1000.95312500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (26)
	CreateDynamicObject(18646,503.66470337,-20.83837700,1000.95312500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (27)
	CreateDynamicObject(18646,503.74633789,-21.23589516,1000.95312500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (28)
	CreateDynamicObject(18646,503.77688599,-21.58339882,1000.95312500,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (29)
	CreateDynamicObject(18646,499.82965088,-16.39624786,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (30)
	CreateDynamicObject(18646,499.63113403,-17.47093391,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (31)
	CreateDynamicObject(18646,499.79782104,-18.47970581,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (32)
	CreateDynamicObject(18646,499.87448120,-19.23336601,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (33)
	CreateDynamicObject(18646,499.87985229,-19.95985413,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (34)
	CreateDynamicObject(18646,499.83883667,-20.85282516,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (35)
	CreateDynamicObject(18646,500.01150513,-21.59832001,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (36)
	CreateDynamicObject(18646,499.92626953,-22.38980293,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (37)
	CreateDynamicObject(18646,499.85787964,-23.02494431,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (38)
	CreateDynamicObject(18646,499.81472778,-23.66999054,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (39)
	CreateDynamicObject(18646,499.85015869,-24.33963776,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (40)
	CreateDynamicObject(18646,499.91162109,-16.79909325,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (41)
	CreateDynamicObject(18646,499.85885620,-15.82378101,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (42)
	CreateDynamicObject(18646,500.03359985,-15.06645298,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (43)
	CreateDynamicObject(18646,499.87860107,-14.56992340,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (44)
	CreateDynamicObject(18646,499.79467773,-14.05541515,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (45)
	CreateDynamicObject(18646,499.86398315,-13.52003002,1004.82031250,0.00000000,0.00000000,0.00000000); //object(ramplandpad) (46)
	CreateDynamicObject(18718,479.36181641,-20.88427544,1001.42803955,0.00000000,0.00000000,0.00000000); //object(ceroad_hill20) (6)
	CreateDynamicObject(18718,489.30688477,-20.89062500,1001.38677979,0.00000000,0.00000000,0.00000000); //object(ceroad_hill20) (7)
	CreateDynamicObject(18724,480.68951416,-1.94531250,1001.70672607,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (1)
	CreateDynamicObject(18724,481.19052124,-6.44531345,1000.14758301,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (2)
	CreateDynamicObject(18724,483.29043579,-6.44531345,999.78131104,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (3)
	CreateDynamicObject(18724,477.38281250,-2.25406170,1002.18737793,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (4)
	CreateDynamicObject(18724,497.19009399,-1.94531250,1004.05859375,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (5)
	CreateDynamicObject(18724,495.10748291,-1.94996452,1001.67761230,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (6)
	CreateDynamicObject(18724,496.32119751,-6.07631683,1001.69201660,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (7)
	CreateDynamicObject(18724,488.68118286,-20.89062500,1002.04693604,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (8)
	CreateDynamicObject(18724,485.72586060,-20.89062500,1002.16235352,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (9)
	CreateDynamicObject(18724,483.83792114,-20.89062500,1002.04675293,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (10)
	CreateDynamicObject(18724,482.92349243,-20.89062500,1002.07781982,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (11)
	CreateDynamicObject(18724,481.11721802,-20.88427353,1002.04675293,0.00000000,0.00000000,0.00000000); //object(drg_nu_ext) (12)
	CreateDynamicObject(18654,473.39962769,-26.89453506,1002.10937500,0.00000000,0.00000000,210.00000000); //object(darkpoly) (3)
	CreateDynamicObject(18654,473.43865967,-21.48804474,1002.10937500,0.00000000,0.00000000,129.99819946); //object(darkpoly) (6)
	CreateDynamicObject(18655,1836.80603027,-1677.82922363,12.33257294,0.00000000,0.00000000,50.00000000); //object(bridge) (5)
	CreateDynamicObject(18655,1837.00988770,-1687.19091797,12.32405472,0.00000000,0.00000000,319.99877930); //object(bridge) (6)
	CreateDynamicObject(18648,1837.07666016,-1630.70776367,30.82812500,0.00000000,0.00000000,0.00000000); //object(wall2) (7)
	CreateDynamicObject(18648,1837.10156250,-1632.65942383,30.82812500,0.00000000,0.00000000,0.00000000); //object(wall2) (8)
	CreateDynamicObject(18648,1837.06530762,-1634.62292480,30.82812500,0.00000000,0.00000000,0.00000000); //object(wall2) (9)
	CreateDynamicObject(18648,1837.06689453,-1636.20117188,30.82812500,0.00000000,0.00000000,0.00000000); //object(wall2) (10)
	CreateDynamicObject(18648,1837.89746094,-1628.85534668,30.82812500,0.00000000,0.00000000,316.00000000); //object(wall2) (11)
	CreateDynamicObject(18648,1839.68371582,-1628.10327148,30.82812500,0.00000000,0.00000000,269.99975586); //object(wall2) (12)
	CreateDynamicObject(18648,1841.75012207,-1628.11254883,30.82812500,0.00000000,0.00000000,269.99450684); //object(wall2) (13)
	CreateDynamicObject(18648,1843.83288574,-1628.10888672,30.82812500,0.00000000,0.00000000,269.99450684); //object(wall2) (14)
	CreateDynamicObject(18648,1845.43725586,-1628.08178711,30.82812500,0.00000000,0.00000000,269.99450684); //object(wall2) (15)
	CreateDynamicObject(18648,1843.96264648,-1735.33178711,33.17742920,0.00000000,0.00000000,269.99450684); //object(wall2) (16)
	CreateDynamicObject(18648,1842.24902344,-1735.32727051,33.17742920,0.00000000,0.00000000,269.99450684); //object(wall2) (17)
	CreateDynamicObject(18648,1840.82397461,-1735.35498047,33.17742920,0.00000000,0.00000000,269.99450684); //object(wall2) (18)
	CreateDynamicObject(18648,1839.31030273,-1734.73596191,33.17742920,0.00000000,0.00000000,223.99450684); //object(wall2) (19)
	CreateDynamicObject(18648,1838.66577148,-1733.00854492,33.17742920,0.00000000,0.00000000,181.98925781); //object(wall2) (20)
	CreateDynamicObject(18648,1838.63867188,-1731.05126953,33.17742920,0.00000000,0.00000000,179.98852539); //object(wall2) (21)
	CreateDynamicObject(18648,1838.57666016,-1730.09313965,33.17742920,0.00000000,0.00000000,179.98352051); //object(wall2) (22)
	CreateDynamicObject(18649,1837.44396973,-1678.98742676,28.14062500,0.00000000,0.00000000,2.00000000); //object(ramplandpad01) (1)
	CreateDynamicObject(18649,1837.42553711,-1681.07702637,28.14062500,0.00000000,0.00000000,1.99951172); //object(ramplandpad01) (2)
	CreateDynamicObject(18649,1837.34631348,-1683.13891602,28.14062500,0.00000000,0.00000000,1.99951172); //object(ramplandpad01) (3)
	CreateDynamicObject(18649,1837.51171875,-1685.41906738,28.14062500,0.00000000,0.00000000,1.99951172); //object(ramplandpad01) (4)
	CreateDynamicObject(18649,1837.69030762,-1686.86010742,28.14062500,0.00000000,0.00000000,1.99951172); //object(ramplandpad01) (5)
	CreateDynamicObject(3475,1837.72656250,-1674.95385742,14.69948959,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (1)
	CreateDynamicObject(3475,1837.72656250,-1669.93640137,14.69948769,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (2)
	CreateDynamicObject(3475,1837.72656250,-1664.13964844,14.69948959,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (3)
	CreateDynamicObject(3475,1837.72656250,-1657.52014160,14.69948959,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (4)
	CreateDynamicObject(3475,1837.72656250,-1651.53186035,14.69948959,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (5)
	CreateDynamicObject(3475,1837.72656250,-1646.20471191,14.69845390,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (6)
	CreateDynamicObject(3475,1837.72656250,-1640.35961914,14.68867493,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (7)
	CreateDynamicObject(3475,1837.72656250,-1633.52917480,14.68867493,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (8)
	CreateDynamicObject(3475,1837.71875000,-1692.15539551,14.69933891,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (9)
	CreateDynamicObject(3475,1837.71875000,-1698.11633301,14.69933701,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (10)
	CreateDynamicObject(3475,1837.71875000,-1702.65820312,14.69933701,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (11)
	CreateDynamicObject(3475,1837.71875000,-1707.70703125,14.69933701,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (12)
	CreateDynamicObject(3475,1837.71875000,-1713.48815918,14.69933891,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (13)
	CreateDynamicObject(3475,1837.71875000,-1718.65466309,14.69933701,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (14)
	CreateDynamicObject(3475,1837.71228027,-1723.35375977,14.69921494,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (15)
	CreateDynamicObject(3475,1837.71875000,-1729.09594727,14.69933701,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst) (16)
	CreateDynamicObject(3475,1837.38439941,-1731.70605469,14.69933701,0.00000000,0.00000000,180.00000000); //object(vgsn_fncelec_pst) (17)
	CreateDynamicObject(2773,1828.08435059,-1676.29724121,13.06410313,0.00000000,0.00000000,60.00000000); //object(cj_airprt_bar) (1)
	CreateDynamicObject(2773,1830.30224609,-1677.58728027,13.06410313,0.00000000,0.00000000,59.99633789); //object(cj_airprt_bar) (2)
	CreateDynamicObject(2773,1832.21679688,-1678.74475098,13.04158115,0.00000000,0.00000000,59.99633789); //object(cj_airprt_bar) (3)
	CreateDynamicObject(2773,1834.18994141,-1680.07983398,12.95912647,1.49826050,357.24902344,60.06832886); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,1834.18420410,-1685.09936523,12.95936489,2.74682617,357.24475098,122.12292480); //object(cj_airprt_bar) (5)
	CreateDynamicObject(2773,1832.18408203,-1686.37402344,13.04294872,0.00000000,357.24243164,121.98672485); //object(cj_airprt_bar) (7)
	CreateDynamicObject(2773,1830.29858398,-1687.65148926,13.06410313,0.00000000,357.24243164,121.98672485); //object(cj_airprt_bar) (8)
	CreateDynamicObject(2773,1828.23217773,-1688.92419434,13.06410313,0.00000000,357.24243164,121.98672485); //object(cj_airprt_bar) (9)
	CreateDynamicObject(3666,1826.99865723,-1675.71179199,13.06056023,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
	CreateDynamicObject(3666,1835.32312012,-1680.82080078,12.90822983,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
	CreateDynamicObject(3666,1835.34655762,-1684.35205078,12.90724945,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (4)
	CreateDynamicObject(3666,1826.96569824,-1689.61865234,13.06056023,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (6)
	CreateDynamicObject(1569,1837.30102539,-1680.98889160,12.31510544,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,1837.32055664,-1683.99743652,12.31548309,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (2)
	CreateDynamicObject(1569,491.92477417,-25.16756630,999.67187500,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (3)
	CreateDynamicObject(1569,494.87707520,-25.17539978,999.67187500,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (4)

	// -= Mecanicos =-
	CreateDynamicObject(7023,2426.17968750,-2081.24804688,12.54687500,0.00000000,0.00000000,0.00000000); //object(vgngatesecurity)(1)
	CreateDynamicObject(3475,2424.26074219,-2098.21972656,14.92304993,0.00000000,0.00000000,0.00000000); //object(vgsn_fncelec_pst)(2)
	CreateDynamicObject(16001,2427.41210938,-2104.67578125,12.54687500,0.00000000,0.00000000,90.00000000); //object(drvin_projhut)(1)
	CreateDynamicObject(8230,2481.57226562,-2109.08935547,14.60590363,0.00000000,0.00000000,0.00000000); //object(vgsbikeschl01)(1)
	CreateDynamicObject(8231,2481.49121094,-2108.91503906,14.42506027,0.00000000,0.00000000,0.00000000); //object(vgsbikeschl05)(1)
	CreateDynamicObject(12925,2499.04882812,-2117.97656250,12.54687500,0.00000000,0.00000000,179.99450684); //object(sw_shed01)(1)
	CreateDynamicObject(12925,2498.93847656,-2110.30175781,12.54687500,0.00000000,0.00000000,179.99450684); //object(sw_shed01)(2)
	CreateDynamicObject(12925,2498.83789062,-2102.18750000,12.54687500,0.00000000,0.00000000,179.99450684); //object(sw_shed01)(3)
	CreateDynamicObject(13027,2524.25195312,-2087.17675781,15.76187706,0.00000000,0.00000000,90.00000000); //object(ce_spray)(1)
	CreateDynamicObject(3292,2529.09082031,-2117.70312500,12.54687500,0.00000000,0.00000000,55.99731445); //object(cxf_payspray_)(1)
	CreateDynamicObject(3292,2462.48144531,-2112.19238281,12.54687500,0.00000000,0.00000000,0.00000000); //object(cxf_payspray_)(2)
	CreateDynamicObject(3293,2467.16699219,-2109.52636719,15.77315903,0.00000000,0.00000000,0.00000000); //object(des_paysinterior)(1)
	CreateDynamicObject(970,2443.95410156,-2104.08398438,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateDynamicObject(970,2441.86523438,-2104.07421875,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(2)
	CreateDynamicObject(970,2446.03271484,-2106.17651367,13.09835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb)(3)
	CreateDynamicObject(970,2445.99951172,-2110.29541016,13.10447311,0.00000000,0.00000000,270.00000000); //object(fencesmallb)(4)
	CreateDynamicObject(970,2446.00976562,-2114.45800781,13.09835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb)(5)
	CreateDynamicObject(970,2446.00659180,-2118.60351562,13.09835625,0.00000000,0.00000000,270.00000000); //object(fencesmallb)(6)
	CreateDynamicObject(970,2443.89355469,-2120.66137695,13.09835625,0.00000000,0.00000000,180.00000000); //object(fencesmallb)(7)
	CreateDynamicObject(970,2441.80444336,-2120.66967773,13.09835625,0.00000000,0.00000000,179.99450684); //object(fencesmallb)(8)
	CreateDynamicObject(970,2437.69042969,-2120.67919922,13.09835625,0.00000000,0.00000000,179.99450684); //object(fencesmallb)(9)
	CreateDynamicObject(970,2433.53808594,-2120.67675781,13.09835625,0.00000000,0.00000000,179.99450684); //object(fencesmallb)(10)
	CreateDynamicObject(970,2429.39624023,-2120.69091797,13.09835625,0.00000000,0.00000000,179.99450684); //object(fencesmallb)(11)
	CreateDynamicObject(970,2427.23266602,-2120.68750000,13.09835625,0.00000000,0.00000000,179.99450684); //object(fencesmallb)(12)
	CreateDynamicObject(970,2431.32446289,-2103.95751953,13.10447311,0.00000000,0.00000000,179.99450684); //object(fencesmallb)(13)
	CreateDynamicObject(3850,2490.66992188,-2098.38671875,13.09278393,0.00000000,0.00000000,269.99450684); //object(carshowbann_sfsx)(3)
	CreateDynamicObject(3850,2480.46533203,-2098.30761719,13.09278393,0.00000000,0.00000000,269.99450684); //object(carshowbann_sfsx)(5)
	CreateDynamicObject(3850,2477.02221680,-2098.32617188,13.09278393,0.00000000,0.00000000,269.99450684); //object(carshowbann_sfsx)(6)
	CreateDynamicObject(3850,2473.59570312,-2098.35742188,13.09278393,0.00000000,0.00000000,269.98901367); //object(carshowbann_sfsx)(7)
	CreateDynamicObject(3850,2471.40380859,-2099.99023438,13.09278393,0.00000000,0.00000000,159.99450684); //object(carshowbann_sfsx)(8)
	CreateDynamicObject(3850,2487.24584961,-2098.42504883,13.09278393,0.00000000,0.00000000,269.99450684); //object(carshowbann_sfsx)(10)
	CreateDynamicObject(1215,2485.46240234,-2098.42871094,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,2482.18676758,-2098.35888672,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
	CreateDynamicObject(1215,2470.82812500,-2101.93945312,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,2439.67382812,-2104.08789062,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,2446.01538086,-2103.94091797,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(1215,2433.42187500,-2103.99023438,13.11731529,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,2446.04003906,-2120.84082031,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(1215,2425.02563477,-2120.83666992,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(8)
	CreateDynamicObject(1215,2419.27954102,-2081.30981445,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1215,2421.94433594,-2084.00390625,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1215,2422.03247070,-2095.05566406,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(11)
	CreateDynamicObject(1215,2419.34179688,-2097.59179688,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(12)
	CreateDynamicObject(1215,2516.22851562,-2083.03906250,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(13)
	CreateDynamicObject(1215,2516.08105469,-2091.28613281,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(14)
	CreateDynamicObject(1215,2463.19042969,-2101.59277344,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(15)
	CreateDynamicObject(970,2516.96801758,-2095.19824219,13.09835625,0.00000000,0.00000000,33.99511719); //object(fencesmallb)(14)
	CreateDynamicObject(970,2506.93432617,-2098.65600586,13.09835625,0.00000000,0.00000000,7.99255371); //object(fencesmallb)(16)
	CreateDynamicObject(1215,2515.14453125,-2096.45458984,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(17)
	CreateDynamicObject(1215,2509.04443359,-2098.27246094,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(18)
	CreateDynamicObject(3292,2526.44433594,-2091.86157227,12.54687500,0.00000000,0.00000000,90.00000000); //object(cxf_payspray_)(3)
	CreateDynamicObject(3293,2529.29760742,-2112.48339844,15.77315903,0.00000000,0.00000000,54.00000000); //object(des_paysinterior)(2)
	CreateDynamicObject(1215,2525.38232422,-2104.84057617,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(19)
	CreateDynamicObject(1215,2520.81054688,-2111.43652344,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(20)
	CreateDynamicObject(970,2525.31542969,-2103.21875000,13.09835625,0.00000000,0.00000000,299.99267578); //object(fencesmallb)(17)
	CreateDynamicObject(970,2524.24023438,-2101.39257812,13.09835625,0.00000000,0.00000000,299.99267578); //object(fencesmallb)(18)
	CreateDynamicObject(970,2522.17285156,-2097.80273438,13.09835625,0.00000000,0.00000000,299.99267578); //object(fencesmallb)(19)
	CreateDynamicObject(970,2516.50488281,-2115.56250000,13.09835625,0.00000000,0.00000000,3.98803711); //object(fencesmallb)(20)
	CreateDynamicObject(970,2512.35449219,-2115.81933594,13.09835625,0.00000000,0.00000000,3.98803711); //object(fencesmallb)(21)
	CreateDynamicObject(970,2508.24121094,-2116.13085938,13.09835625,0.00000000,0.00000000,3.98803711); //object(fencesmallb)(22)
	CreateDynamicObject(1191,2519.59204102,-2113.89599609,16.53292084,0.00000000,0.00000000,60.00000000); //object(fbmp_lr_t1)(1)
	CreateDynamicObject(1191,2519.58032227,-2113.91357422,16.06511116,0.00000000,0.00000000,59.99633789); //object(fbmp_lr_t1)(2)
	CreateDynamicObject(1191,2519.56640625,-2113.93408203,15.53797531,0.00000000,0.00000000,59.99633789); //object(fbmp_lr_t1)(3)
	CreateDynamicObject(1186,2520.55566406,-2112.46679688,14.85471153,0.00000000,0.00000000,235.99731445); //object(rbmp_lr_sv2)(1)
	CreateDynamicObject(1186,2520.56933594,-2112.44726562,14.20057678,0.00000000,0.00000000,235.99731445); //object(rbmp_lr_sv2)(2)
	CreateDynamicObject(1096,2537.18066406,-2114.08618164,17.32735252,0.00000000,0.00000000,150.00000000); //object(wheel_gn3)(1)
	CreateDynamicObject(1096,2536.45996094,-2115.15429688,17.31963730,0.00000000,0.00000000,149.99087524); //object(wheel_gn3)(2)
	CreateDynamicObject(1096,2536.46801758,-2115.14257812,16.13334656,0.00000000,0.00000000,149.99633789); //object(wheel_gn3)(3)
	CreateDynamicObject(1096,2537.16601562,-2114.10742188,16.11367416,0.00000000,0.00000000,149.99084473); //object(wheel_gn3)(4)
	CreateDynamicObject(1097,2527.51367188,-2106.61230469,17.26939201,0.00000000,0.00000000,235.99731445); //object(wheel_gn4)(1)
	CreateDynamicObject(1097,2528.56860352,-2107.32373047,17.27414513,0.00000000,0.00000000,235.99731445); //object(wheel_gn4)(2)
	CreateDynamicObject(1097,2529.59277344,-2108.01464844,17.27875710,0.00000000,0.00000000,235.99731445); //object(wheel_gn4)(3)
	CreateDynamicObject(1097,2530.60986328,-2108.70068359,17.31233788,0.00000000,0.00000000,235.99731445); //object(wheel_gn4)(4)
	CreateDynamicObject(1076,2534.76782227,-2117.24560547,13.04633236,0.00000000,0.00000000,144.00000000); //object(wheel_lr4)(1)
	CreateDynamicObject(1076,2534.20410156,-2118.01269531,13.04633236,0.00000000,0.00000000,143.99230957); //object(wheel_lr4)(2)
	CreateDynamicObject(1076,2533.56054688,-2118.85937500,13.04633236,0.00000000,0.00000000,143.99230957); //object(wheel_lr4)(3)
	CreateDynamicObject(1075,2536.07519531,-2112.51074219,13.04633236,0.00000000,0.00000000,209.99816895); //object(wheel_sr2)(1)
	CreateDynamicObject(1075,2535.33398438,-2112.00781250,13.04633236,0.00000000,0.00000000,249.99389648); //object(wheel_sr2)(2)
	CreateDynamicObject(1008,2535.77832031,-2113.42675781,12.55419827,0.00000000,0.00000000,59.99633789); //object(nto_b_l)(1)
	CreateDynamicObject(1008,2535.48046875,-2113.24023438,12.55419827,0.00000000,0.00000000,59.99084473); //object(nto_b_l)(2)
	CreateDynamicObject(1008,2535.17919922,-2113.02734375,12.55419827,0.00000000,0.00000000,59.99633789); //object(nto_b_l)(3)
	CreateDynamicObject(1008,2534.89062500,-2112.77246094,12.55419827,0.00000000,0.00000000,59.99084473); //object(nto_b_l)(4)
	CreateDynamicObject(1010,2534.59765625,-2111.45898438,12.55419827,0.00000000,0.00000000,321.99829102); //object(nto_b_tw)(1)
	CreateDynamicObject(1010,2534.33398438,-2111.83886719,12.55419827,0.00000000,0.00000000,321.99829102); //object(nto_b_tw)(2)
	CreateDynamicObject(1010,2534.05371094,-2112.20605469,12.55419827,0.00000000,0.00000000,321.99829102); //object(nto_b_tw)(3)
	CreateDynamicObject(1010,2534.65600586,-2112.37377930,12.55419827,0.00000000,0.00000000,241.99829102); //object(nto_b_tw)(4)
	CreateDynamicObject(970,2522.21972656,-2119.76464844,13.09835625,0.00000000,0.00000000,93.98803711); //object(fencesmallb)(23)
	CreateDynamicObject(970,2534.73632812,-2094.87304688,13.09835625,0.00000000,0.00000000,359.98901367); //object(fencesmallb)(24)
	CreateDynamicObject(970,2538.74902344,-2094.88769531,13.09835625,0.00000000,0.00000000,359.98352051); //object(fencesmallb)(25)
	CreateDynamicObject(970,2540.64843750,-2112.67553711,13.09835625,0.00000000,0.00000000,7.98803711); //object(fencesmallb)(20)
	CreateDynamicObject(970,2540.64843750,-2112.67480469,14.24833870,0.00000000,0.00000000,7.98706055); //object(fencesmallb)(20)
	CreateDynamicObject(970,2525.31542969,-2103.21875000,14.14834023,0.00000000,0.00000000,299.99267578); //object(fencesmallb)(17)
	CreateDynamicObject(970,2524.24023438,-2101.39257812,14.14834023,0.00000000,0.00000000,299.99267578); //object(fencesmallb)(18)
	CreateDynamicObject(970,2522.17285156,-2097.80273438,14.17333984,0.00000000,0.00000000,299.99267578); //object(fencesmallb)(19)
	CreateDynamicObject(970,2538.74902344,-2094.88769531,14.17333984,0.00000000,0.00000000,359.98352051); //object(fencesmallb)(25)
	CreateDynamicObject(970,2534.73632812,-2094.87304688,14.17333984,0.00000000,0.00000000,359.98901367); //object(fencesmallb)(24)
	CreateDynamicObject(970,2522.21972656,-2119.76464844,13.99834251,0.00000000,0.00000000,93.98803711); //object(fencesmallb)(23)
	CreateDynamicObject(970,2516.50488281,-2115.56250000,14.14835930,0.00000000,0.00000000,3.98803711); //object(fencesmallb)(20)
	CreateDynamicObject(970,2512.35449219,-2115.81933594,14.14834023,0.00000000,0.00000000,3.98803711); //object(fencesmallb)(21)
	CreateDynamicObject(970,2508.24121094,-2116.13085938,14.14834023,0.00000000,0.00000000,3.98803711); //object(fencesmallb)(22)
	CreateDynamicObject(1663,2485.16552734,-2109.59716797,13.18214989,0.00000000,0.00000000,170.00000000); //object(swivelchair_b) (1)
	CreateDynamicObject(1726,2486.48291016,-2101.00439453,12.72193527,0.00000000,0.00000000,0.00000000); //object(mrk_seating2) (1)
	CreateDynamicObject(1726,2489.63842773,-2102.15722656,12.72193527,0.00000000,0.00000000,270.00000000); //object(mrk_seating2) (2)
	CreateDynamicObject(1727,2488.76074219,-2104.86791992,12.72193527,0.00000000,0.00000000,210.00000000); //object(mrk_seating2b) (1)
	CreateDynamicObject(1727,2487.19213867,-2105.32714844,12.72193527,0.00000000,0.00000000,159.99816895); //object(mrk_seating2b) (2)
	CreateDynamicObject(2008,2482.47607422,-2108.43676758,12.72193527,0.00000000,0.00000000,0.00000000); //object(officedesk1) (1)
	CreateDynamicObject(2008,2484.38574219,-2108.49902344,12.72193527,0.00000000,0.00000000,352.00000000); //object(officedesk1) (2)
	CreateDynamicObject(1663,2483.40771484,-2109.53564453,13.18214989,0.00000000,0.00000000,179.99694824); //object(swivelchair_b) (2)
	CreateDynamicObject(2172,2489.91088867,-2112.13696289,12.72193527,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_1) (1)
	CreateDynamicObject(2172,2489.90209961,-2114.04174805,12.72193527,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_1) (2)
	CreateDynamicObject(2172,2489.34008789,-2115.95947266,12.72193527,0.00000000,0.00000000,210.00000000); //object(med_office2_desk_1) (3)
	CreateDynamicObject(2172,2487.44677734,-2116.73217773,12.72193527,0.00000000,0.00000000,179.99816895); //object(med_office2_desk_1) (4)
	CreateDynamicObject(2172,2485.53051758,-2116.71166992,12.72193527,0.00000000,0.00000000,179.99450684); //object(med_office2_desk_1) (5)
	CreateDynamicObject(1671,2488.63916016,-2112.68432617,13.18214989,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (1)
	CreateDynamicObject(1671,2488.66040039,-2114.35961914,13.18214989,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (2)
	CreateDynamicObject(1671,2488.25439453,-2115.17578125,13.18214989,0.00000000,0.00000000,30.00000000); //object(swivelchair_a) (3)
	CreateDynamicObject(1671,2486.89233398,-2115.41333008,13.18214989,0.00000000,0.00000000,359.99816895); //object(swivelchair_a) (4)
	CreateDynamicObject(1671,2485.08691406,-2115.36401367,13.18214989,0.00000000,0.00000000,359.99450684); //object(swivelchair_a) (5)
	CreateDynamicObject(3051,2469.75585938,-2102.22900391,17.86498260,316.03369141,91.93023682,2.02920532); //object(lift_dr) (1)
	CreateDynamicObject(3051,2467.12719727,-2102.26733398,17.86498260,316.03271484,91.92810059,0.77673340); //object(lift_dr) (2)
	CreateDynamicObject(3051,2464.65112305,-2102.26293945,17.86498260,316.02722168,91.92260742,2.77404785); //object(lift_dr) (3)
	CreateDynamicObject(927,2464.90917969,-2116.78735352,15.79972363,0.00000000,0.00000000,180.00000000); //object(piping_detail) (1)
	CreateDynamicObject(927,2466.58789062,-2116.79443359,14.19974804,0.00000000,0.00000000,179.99450684); //object(piping_detail) (2)
	CreateDynamicObject(929,2466.82666016,-2116.87646484,13.51528072,0.00000000,0.00000000,270.00000000); //object(generator) (1)
	CreateDynamicObject(958,2467.06665039,-2116.26538086,13.43103600,0.00000000,0.00000000,0.00000000); //object(cj_chip_maker) (1)
	CreateDynamicObject(959,2466.76269531,-2117.55126953,13.43771839,0.00000000,0.00000000,0.00000000); //object(cj_chip_maker_bits) (1)
	CreateDynamicObject(1353,2465.12426758,-2116.27539062,13.22473240,0.00000000,0.00000000,180.00000000); //object(cj_aircon) (1)
	CreateDynamicObject(1690,2459.78906250,-2105.24169922,17.57433128,0.00000000,0.00000000,178.50000000); //object(gen_roofbit4) (1)
	CreateDynamicObject(1690,2459.67626953,-2112.36474609,17.57433128,0.00000000,0.00000000,178.49487305); //object(gen_roofbit4) (2)
	CreateDynamicObject(2649,2463.55712891,-2116.47558594,14.30599499,0.00000000,0.00000000,0.00000000); //object(cj_aircon2) (1)
	CreateDynamicObject(3675,2456.76123047,-2114.92333984,19.38418961,0.00000000,0.00000000,230.00000000); //object(laxrf_refinerypipe) (1)
	CreateDynamicObject(3675,2456.76342773,-2118.19384766,19.38418961,0.00000000,0.00000000,229.99877930); //object(laxrf_refinerypipe) (2)
	CreateDynamicObject(3675,2457.30493164,-2121.22436523,19.45392990,0.00000000,0.00000000,229.99877930); //object(laxrf_refinerypipe) (3)
	CreateDynamicObject(16666,2456.11718750,-2124.55517578,12.55299187,0.00000000,0.00000000,0.00000000); //object(a51_machines) (1)
	CreateDynamicObject(920,2468.79858398,-2115.74609375,13.03900719,0.00000000,0.00000000,196.00000000); //object(y_generator) (1)
	CreateDynamicObject(959,2460.27758789,-2102.13427734,13.41283607,0.00000000,0.00000000,0.00000000); //object(cj_chip_maker_bits) (2)
	CreateDynamicObject(958,2460.27441406,-2102.12182617,13.42371368,0.00000000,0.00000000,0.00000000); //object(cj_chip_maker) (2)

	// -= Basura Acomulada =-
	CreateDynamicObject(850,1393.03283691,-1630.39758301,12.65836811,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_1) (1)
	CreateDynamicObject(850,1390.96496582,-1630.01867676,12.65836811,0.00000000,0.00000000,60.00000000); //object(cj_urb_rub_1) (2)
	CreateDynamicObject(850,1392.02307129,-1628.16650391,12.65836811,0.00000000,0.00000000,79.99633789); //object(cj_urb_rub_1) (3)
	CreateDynamicObject(850,1389.13122559,-1630.43774414,12.65836811,0.00000000,0.00000000,49.99145508); //object(cj_urb_rub_1) (4)
	CreateDynamicObject(850,1392.52490234,-1626.36999512,12.65836811,0.00000000,0.00000000,99.98779297); //object(cj_urb_rub_1) (5)
	CreateDynamicObject(850,1389.57629395,-1627.91149902,12.65836811,0.00000000,0.00000000,149.98657227); //object(cj_urb_rub_1) (6)
	CreateDynamicObject(3119,1386.82690430,-1630.83923340,12.85073280,0.00000000,0.00000000,10.00000000); //object(cs_ry_props) (1)
	CreateDynamicObject(3119,1386.54113770,-1630.39172363,12.85073280,0.00000000,0.00000000,339.99755859); //object(cs_ry_props) (2)
	CreateDynamicObject(3119,1386.33996582,-1630.04162598,12.85073280,0.00000000,0.00000000,309.99389648); //object(cs_ry_props) (3)
	CreateDynamicObject(2971,1392.28039551,-1623.83642578,12.54687500,0.00000000,0.00000000,50.00000000); //object(k_smashboxes) (1)
	CreateDynamicObject(2971,1392.46582031,-1621.30651855,12.54687500,0.00000000,0.00000000,339.99877930); //object(k_smashboxes) (2)
	CreateDynamicObject(2968,1391.49206543,-1622.58239746,12.84340572,0.00000000,0.00000000,0.00000000); //object(cm_box) (1)
	CreateDynamicObject(2968,1390.77111816,-1623.46118164,12.84340572,0.00000000,0.00000000,0.00000000); //object(cm_box) (2)
	CreateDynamicObject(2968,1390.82763672,-1622.52478027,12.84340572,0.00000000,0.00000000,0.00000000); //object(cm_box) (3)
	CreateDynamicObject(1462,1390.99829102,-1624.38708496,12.54687500,0.00000000,0.00000000,310.00000000); //object(dyn_woodpile) (1)
	CreateDynamicObject(1450,1390.39428711,-1624.16345215,13.14714146,0.00000000,0.00000000,320.00000000); //object(dyn_crate_3) (1)
	CreateDynamicObject(1442,1389.76684570,-1623.01928711,13.14535809,0.00000000,0.00000000,0.00000000); //object(dyn_firebin0) (1)
	CreateDynamicObject(1442,1390.74975586,-1625.48254395,13.14535809,0.00000000,0.00000000,0.00000000); //object(dyn_firebin0) (2)
	CreateDynamicObject(1442,1385.11682129,-1630.70727539,13.14535809,0.00000000,0.00000000,0.00000000); //object(dyn_firebin0) (3)
	CreateDynamicObject(1441,1393.32824707,-1630.36791992,13.19852352,0.00000000,0.00000000,260.00000000); //object(dyn_box_pile_4) (1)
	CreateDynamicObject(1441,1391.91699219,-1631.27575684,13.19852352,0.00000000,0.00000000,199.99694824); //object(dyn_box_pile_4) (2)
	CreateDynamicObject(1440,1393.11059570,-1628.18395996,13.06599140,0.00000000,0.00000000,270.00000000); //object(dyn_box_pile_3) (1)
	CreateDynamicObject(1440,1393.06701660,-1626.18725586,13.06599140,0.00000000,0.00000000,300.00000000); //object(dyn_box_pile_3) (2)
	CreateDynamicObject(1438,1389.83386230,-1630.29687500,12.54687500,0.00000000,0.00000000,180.00000000); //object(dyn_box_pile_2) (1)
	CreateDynamicObject(1431,1390.00354004,-1621.27746582,13.09448814,0.00000000,0.00000000,350.00000000); //object(dyn_box_pile) (1)
	CreateDynamicObject(1431,1389.63073730,-1622.14013672,13.09448814,0.00000000,0.00000000,349.99694824); //object(dyn_box_pile) (2)
	CreateDynamicObject(1431,1388.62744141,-1620.68408203,13.09448814,0.00000000,0.00000000,235.99694824); //object(dyn_box_pile) (3)
	CreateDynamicObject(1358,1382.30627441,-1629.84509277,13.75042152,0.00000000,0.00000000,180.00000000); //object(cj_skip_rubbish) (1)
	CreateDynamicObject(1349,1388.60437012,-1624.67138672,13.11725998,0.00000000,0.00000000,0.00000000); //object(cj_shtrolly) (2)
	CreateDynamicObject(1349,1388.74255371,-1623.64172363,13.11725998,0.00000000,0.00000000,320.00000000); //object(cj_shtrolly) (3)
	CreateDynamicObject(1349,1387.45178223,-1623.95434570,12.89226341,275.25000000,0.00000000,279.99877930); //object(cj_shtrolly) (4)
	CreateDynamicObject(1264,1392.94091797,-1626.66540527,13.20559216,0.00000000,0.00000000,0.00000000); //object(blackbag1) (1)
	CreateDynamicObject(1264,1392.59973145,-1625.50231934,13.79652119,0.00000000,0.00000000,0.00000000); //object(blackbag1) (2)
	CreateDynamicObject(1264,1392.16845703,-1625.32739258,13.30875206,0.00000000,0.00000000,0.00000000); //object(blackbag1) (3)
	CreateDynamicObject(1264,1392.57568359,-1626.03283691,13.09681988,0.00000000,0.00000000,0.00000000); //object(blackbag1) (4)
	CreateDynamicObject(1264,1391.77673340,-1625.47424316,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (5)
	CreateDynamicObject(1264,1392.91198730,-1629.75695801,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (6)
	CreateDynamicObject(1264,1391.53186035,-1629.92663574,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (7)
	CreateDynamicObject(1264,1391.07971191,-1629.97326660,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (8)
	CreateDynamicObject(1264,1389.94909668,-1625.20190430,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (9)
	CreateDynamicObject(1264,1388.26037598,-1621.83007812,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (10)
	CreateDynamicObject(1264,1387.40881348,-1621.73364258,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (11)
	CreateDynamicObject(1264,1388.40600586,-1622.48388672,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (12)
	CreateDynamicObject(1264,1387.66540527,-1622.38464355,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (13)
	CreateDynamicObject(1264,1384.89672852,-1629.76269531,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (14)
	CreateDynamicObject(1264,1384.09741211,-1628.58154297,13.12295437,0.00000000,0.00000000,0.00000000); //object(blackbag1) (15)
	CreateDynamicObject(1264,1384.91894531,-1628.98730469,13.01901913,0.00000000,0.00000000,0.00000000); //object(blackbag1) (16)
	CreateDynamicObject(2672,1388.60559082,-1624.24255371,12.82633686,0.00000000,0.00000000,70.00000000); //object(proc_rubbish_4) (1)
	CreateDynamicObject(2673,1386.99780273,-1628.88183594,12.63470268,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_5) (1)
	CreateDynamicObject(2673,1386.86145020,-1628.36999512,12.63470268,0.00000000,0.00000000,90.00000000); //object(proc_rubbish_5) (2)
	CreateDynamicObject(2676,1390.18017578,-1626.24768066,12.65019894,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_8) (1)

	// -= Departamento de Inteligencia y Investigacion =-
	CreateDynamicObject(3055,2497.42456055,2373.14111328,5.43066311,0.00000000,0.00000000,270.00000000); //object(kmb_shutter) (1)
	CreateDynamicObject(3055,2497.42724609,2380.95776367,5.43000650,0.00000000,0.00000000,270.00000000); //object(kmb_shutter) (3)
	CreateDynamicObject(3055,2497.42675781,2380.95703125,10.15499496,0.00000000,0.00000000,270.00000000); //object(kmb_shutter) (4)
	CreateDynamicObject(3055,2497.42382812,2373.14062500,10.15565968,0.00000000,0.00000000,270.00000000); //object(kmb_shutter) (5)
	CreateDynamicObject(1569,368.82641602,195.04579163,1007.38281250,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,368.83065796,192.06961060,1007.38281250,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (2)
	CreateDynamicObject(1569,359.47537231,217.56327820,1007.38281250,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (5)
	CreateDynamicObject(1569,356.57662964,217.55679321,1007.38281250,0.00000000,0.00000000,359.99450684); //object(adam_v_door) (6)
	CreateDynamicObject(1569,1418.56250000,-1555.15234375,12.57157516,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (7)
	CreateDynamicObject(1569,1418.53747559,-1552.15380859,12.56855774,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (8)
	CreateDynamicObject(3055,1405.53955078,-1497.41711426,14.76204109,0.00000000,0.00000000,346.75000000); //object(kmb_shutter) (6)
	CreateDynamicObject(1215,1388.84497070,-1550.61682129,13.23335457,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1395.73254395,-1552.52172852,13.12903404,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1400.49108887,-1496.35986328,13.13143349,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1409.40856934,-1498.53393555,13.12470627,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1419.21667480,-1555.66650391,13.12682343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,1419.20446777,-1551.92114258,13.12682343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,1419.25085449,-1574.05224609,13.12370110,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,1419.32434082,-1577.86608887,13.13394642,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,1419.25561523,-1572.30432129,13.11864948,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,1419.30871582,-1568.63476562,13.11689758,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,1419.17333984,-1566.97436523,13.12903690,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1215,1419.47241211,-1563.33154297,13.12636757,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
	CreateDynamicObject(1215,1419.27636719,-1561.77673340,13.12522888,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
	CreateDynamicObject(1215,1419.32775879,-1558.24694824,13.12264347,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
	CreateDynamicObject(1215,1419.29089355,-1549.13903809,13.11875534,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
	CreateDynamicObject(1215,1419.46069336,-1546.30859375,13.11653900,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
	CreateDynamicObject(1215,1406.25207520,-1582.02856445,13.12701797,0.00000000,0.00000000,0.00000000); //object(bollardlight) (17)
	CreateDynamicObject(1215,1409.91540527,-1582.01989746,13.12433434,0.00000000,0.00000000,0.00000000); //object(bollardlight) (18)
	CreateDynamicObject(1215,1411.58361816,-1582.03735352,13.12311268,0.00000000,0.00000000,0.00000000); //object(bollardlight) (19)
	CreateDynamicObject(1215,1415.26611328,-1581.95922852,13.12041473,0.00000000,0.00000000,0.00000000); //object(bollardlight) (20)
	CreateDynamicObject(1215,1384.41748047,-1577.66101074,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (22)
	CreateDynamicObject(1215,1375.19165039,-1575.95214844,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
	CreateDynamicObject(1238,1388.78210449,-1550.96667480,12.98714638,0.00000000,0.00000000,0.00000000); //object(trafficcone) (1)
	CreateDynamicObject(1238,1388.48559570,-1552.15295410,12.98451805,0.00000000,0.00000000,0.00000000); //object(trafficcone) (2)
	CreateDynamicObject(1238,1388.13037109,-1553.43395996,12.97831345,0.00000000,0.00000000,0.00000000); //object(trafficcone) (3)
	CreateDynamicObject(1238,1387.63745117,-1555.65295410,12.96765709,0.00000000,0.00000000,0.00000000); //object(trafficcone) (4)
	CreateDynamicObject(1238,1387.96154785,-1554.48400879,12.97331810,0.00000000,0.00000000,0.00000000); //object(trafficcone) (5)
	CreateDynamicObject(8843,1403.95837402,-1510.82995605,12.57901573,0.00000000,0.00000000,346.00000000); //object(arrows01_lvs) (1)
	CreateDynamicObject(8843,1399.38623047,-1510.21838379,12.60974693,0.00000000,0.00000000,165.99792480); //object(arrows01_lvs) (2)
	CreateDynamicObject(8855,1401.95788574,-1509.87768555,12.83093929,0.00000000,0.00000000,346.75000000); //object(vgeplntr04_lvs) (1)
	CreateDynamicObject(1215,1399.64514160,-1519.53552246,13.39344597,0.00000000,0.00000000,0.00000000); //object(bollardlight) (25)
	CreateDynamicObject(1215,1404.20544434,-1500.19982910,13.39344597,0.00000000,0.00000000,0.00000000); //object(bollardlight) (26)
	CreateDynamicObject(3055,1404.54174805,-1497.18090820,14.76204109,0.00000000,0.00000000,346.74499512); //object(kmb_shutter) (7)

	// -= Paisajes y Luces extras =-
	CreateDynamicObject(970,1358.92089844,-1747.20483398,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1361.04394531,-1749.27990723,13.09155560,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1361.00012207,-1754.04968262,13.07087803,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1358.90197754,-1756.15307617,13.05929375,0.00000000,0.00000000,180.00000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,1356.81286621,-1756.16748047,13.05929375,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (6)
	CreateDynamicObject(970,1343.60168457,-1756.20593262,13.05929375,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (7)
	CreateDynamicObject(970,1347.73999023,-1756.18408203,13.05929375,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (8)
	CreateDynamicObject(970,1341.50012207,-1754.10827637,13.06607723,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (9)
	CreateDynamicObject(970,1341.47448730,-1749.96679688,13.07725143,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (10)
	CreateDynamicObject(970,1341.47888184,-1745.83447266,13.08834362,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (11)
	CreateDynamicObject(970,1341.49523926,-1743.74536133,13.09392357,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (12)
	CreateDynamicObject(1215,1356.77026367,-1747.24462891,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1361.11645508,-1751.67529297,13.09339046,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1354.61999512,-1756.29235840,13.07213593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1349.84887695,-1756.24328613,13.07213593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1341.29394531,-1741.59277344,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,1345.72949219,-1722.17150879,13.13521290,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,1351.78735352,-1722.13989258,13.17219639,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,1352.13220215,-1416.27185059,13.07162189,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,1348.09899902,-1416.23254395,13.05872154,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(712,1350.17700195,-1418.27954102,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (3)
	CreateDynamicObject(712,1349.32153320,-1431.68090820,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (4)
	CreateDynamicObject(712,1348.54553223,-1442.08203125,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (5)
	CreateDynamicObject(712,1346.79956055,-1453.91271973,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (6)
	CreateDynamicObject(712,1342.64697266,-1472.59350586,22.13843918,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (7)
	CreateDynamicObject(712,1339.71752930,-1479.71459961,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (8)
	CreateDynamicObject(712,1330.99548340,-1496.67297363,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (9)
	CreateDynamicObject(712,1328.70336914,-1500.60351562,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (10)
	CreateDynamicObject(712,1317.60046387,-1517.32836914,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (11)
	CreateDynamicObject(712,1315.72290039,-1520.88159180,22.13843918,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (12)
	CreateDynamicObject(712,1305.07226562,-1716.09851074,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (13)
	CreateDynamicObject(712,1307.90356445,-1540.91589355,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (14)
	CreateDynamicObject(712,1306.19519043,-1553.42651367,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (15)
	CreateDynamicObject(647,1350.27429199,-1422.06079102,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (1)
	CreateDynamicObject(647,1349.41992188,-1428.46472168,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (2)
	CreateDynamicObject(647,1349.50512695,-1424.93139648,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (3)
	CreateDynamicObject(647,1348.91613770,-1434.35156250,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (4)
	CreateDynamicObject(647,1348.66918945,-1438.39111328,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (5)
	CreateDynamicObject(647,1348.10559082,-1445.04919434,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (6)
	CreateDynamicObject(647,1347.42163086,-1450.38635254,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (7)
	CreateDynamicObject(647,1346.06481934,-1457.08972168,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (8)
	CreateDynamicObject(647,1345.33666992,-1460.73156738,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (9)
	CreateDynamicObject(647,1344.42016602,-1464.50842285,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (10)
	CreateDynamicObject(647,1343.29272461,-1468.03857422,14.37099743,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (11)
	CreateDynamicObject(647,1341.67224121,-1474.79797363,14.37099743,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (12)
	CreateDynamicObject(647,1340.63159180,-1477.37500000,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (13)
	CreateDynamicObject(647,1338.63610840,-1482.22216797,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (14)
	CreateDynamicObject(647,1336.70056152,-1485.93908691,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (15)
	CreateDynamicObject(647,1334.88476562,-1489.50805664,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (16)
	CreateDynamicObject(647,1333.10278320,-1493.01220703,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (17)
	CreateDynamicObject(647,1327.24560547,-1503.18225098,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (18)
	CreateDynamicObject(647,1325.34240723,-1505.77636719,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (19)
	CreateDynamicObject(647,1323.59741211,-1508.66833496,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (20)
	CreateDynamicObject(647,1321.47229004,-1511.24377441,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (21)
	CreateDynamicObject(647,1318.99206543,-1514.62426758,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (22)
	CreateDynamicObject(647,1314.66552734,-1523.31591797,14.37099743,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (23)
	CreateDynamicObject(647,1312.94555664,-1527.24353027,14.37099743,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (24)
	CreateDynamicObject(647,1311.50695801,-1530.50732422,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (25)
	CreateDynamicObject(647,1310.32482910,-1533.17565918,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (26)
	CreateDynamicObject(647,1307.75012207,-1543.72460938,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (27)
	CreateDynamicObject(647,1307.14404297,-1547.47082520,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (28)
	CreateDynamicObject(647,1306.45385742,-1551.27490234,14.37879086,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (29)
	CreateDynamicObject(1215,1349.38598633,-1448.07019043,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,1342.85668945,-1477.27868652,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1215,1331.61059570,-1499.78344727,13.06078243,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
	CreateDynamicObject(1215,1317.94006348,-1519.73059082,13.10401726,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
	CreateDynamicObject(1215,1310.01196289,-1539.50988770,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
	CreateDynamicObject(1215,1306.84313965,-1538.76562500,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
	CreateDynamicObject(1215,1315.20788574,-1518.72912598,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
	CreateDynamicObject(1215,1328.22900391,-1498.08825684,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (17)
	CreateDynamicObject(1215,1339.50756836,-1475.99353027,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (18)
	CreateDynamicObject(1215,1346.09948730,-1447.58044434,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (19)
	CreateDynamicObject(712,1285.32299805,-1779.35241699,22.64993286,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (16)
	CreateDynamicObject(712,1285.13623047,-1763.04467773,22.64993286,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (17)
	CreateDynamicObject(712,1285.16455078,-1745.18139648,22.64993286,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (18)
	CreateDynamicObject(647,1285.33923340,-1748.18469238,14.88249111,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (30)
	CreateDynamicObject(647,1285.33032227,-1748.10363770,14.88249111,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (31)
	CreateDynamicObject(647,1285.31250000,-1751.63232422,14.88249111,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (32)
	CreateDynamicObject(647,1285.25891113,-1756.31689453,14.88249111,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (33)
	CreateDynamicObject(647,1285.20275879,-1769.65881348,14.88249111,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (34)
	CreateDynamicObject(647,1285.36206055,-1774.30895996,14.88249111,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (35)
	CreateDynamicObject(3877,1304.77832031,-1686.20117188,14.21261597,0.00000000,0.00000000,0.00000000); //object(sf_rooflite) (1)
	CreateDynamicObject(3877,1304.95507812,-1843.39746094,14.21261597,0.00000000,0.00000000,0.00000000); //object(sf_rooflite) (2)
	CreateDynamicObject(712,1306.19433594,-1553.42578125,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (20)
	CreateDynamicObject(712,1304.92810059,-1706.54809570,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (21)
	CreateDynamicObject(712,1304.58752441,-1690.44909668,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (22)
	CreateDynamicObject(712,1285.02612305,-1804.66113281,22.43319321,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (23)
	CreateDynamicObject(712,1285.04052734,-1815.84191895,22.39652252,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (24)
	CreateDynamicObject(712,1284.62719727,-1830.95141602,22.39854431,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (25)
	CreateDynamicObject(712,1252.64819336,-1840.74414062,22.32747459,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (26)
	CreateDynamicObject(712,1244.27758789,-1839.67822266,22.44051743,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (27)
	CreateDynamicObject(712,1235.01159668,-1839.88903809,22.43641090,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (28)
	CreateDynamicObject(712,1227.20556641,-1840.53381348,22.35789680,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (29)
	CreateDynamicObject(712,1199.04772949,-1839.76843262,22.46005058,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (30)
	CreateDynamicObject(712,1192.81091309,-1839.96350098,22.44728088,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (31)
	CreateDynamicObject(712,1192.64294434,-1830.60070801,22.46177864,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (32)
	CreateDynamicObject(996,1304.27270508,-1838.89733887,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (1)
	CreateDynamicObject(996,1304.26440430,-1830.64831543,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (2)
	CreateDynamicObject(996,1304.31958008,-1822.44628906,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (3)
	CreateDynamicObject(996,1304.23437500,-1814.22448730,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (4)
	CreateDynamicObject(996,1304.32946777,-1805.90441895,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (5)
	CreateDynamicObject(996,1304.40100098,-1797.60327148,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (6)
	CreateDynamicObject(996,1304.54528809,-1789.22973633,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (7)
	CreateDynamicObject(996,1304.50988770,-1777.94006348,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (8)
	CreateDynamicObject(996,1304.54516602,-1769.75610352,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (9)
	CreateDynamicObject(996,1304.52661133,-1761.59436035,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (10)
	CreateDynamicObject(996,1304.72998047,-1751.69616699,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (11)
	CreateDynamicObject(996,1304.71398926,-1743.48510742,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (12)
	CreateDynamicObject(996,1304.70861816,-1735.17968750,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (13)
	CreateDynamicObject(996,1304.82238770,-1726.75183105,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (14)
	CreateDynamicObject(996,1304.90893555,-1718.36779785,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (15)
	CreateDynamicObject(996,1304.92822266,-1710.09716797,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (16)
	CreateDynamicObject(996,1305.00292969,-1701.35302734,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (17)
	CreateDynamicObject(996,1304.80822754,-1693.69152832,13.29563046,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier1) (18)
	CreateDynamicObject(1215,1311.11376953,-901.24169922,39.14244843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (21)
	CreateDynamicObject(1215,1320.27868652,-901.44104004,39.14244843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (22)
	CreateDynamicObject(1215,1311.27587891,-911.13427734,38.05143738,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
	CreateDynamicObject(1215,1320.05273438,-911.65100098,37.17313385,0.00000000,0.00000000,0.00000000); //object(bollardlight) (24)
	CreateDynamicObject(1215,1342.69580078,-918.47552490,35.07364655,0.00000000,0.00000000,0.00000000); //object(bollardlight) (25)
	CreateDynamicObject(1215,1334.12097168,-914.92584229,35.86180496,0.00000000,0.00000000,0.00000000); //object(bollardlight) (26)
	CreateDynamicObject(1215,1218.99804688,-923.20465088,42.65807343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (27)
	CreateDynamicObject(1215,1218.37426758,-919.66333008,42.65807343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (28)
	CreateDynamicObject(1215,1183.27319336,-921.66802979,42.87384033,0.00000000,0.00000000,0.00000000); //object(bollardlight) (29)
	CreateDynamicObject(1215,1211.82617188,-919.75164795,42.58707809,0.00000000,0.00000000,0.00000000); //object(bollardlight) (30)
	CreateDynamicObject(1215,1176.62390137,-892.94775391,42.89308548,0.00000000,0.00000000,0.00000000); //object(bollardlight) (31)
	CreateDynamicObject(1215,1207.02307129,-888.65179443,42.58761978,0.00000000,0.00000000,0.00000000); //object(bollardlight) (32)
	CreateDynamicObject(1215,907.35046387,-1766.88867188,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (33)
	CreateDynamicObject(1215,911.56945801,-1763.24890137,13.10270309,0.00000000,0.00000000,0.00000000); //object(bollardlight) (34)
	CreateDynamicObject(1215,922.93664551,-1763.61694336,13.11022568,0.00000000,0.00000000,0.00000000); //object(bollardlight) (35)
	CreateDynamicObject(1215,927.32775879,-1767.92443848,13.11417961,0.00000000,0.00000000,0.00000000); //object(bollardlight) (36)
	CreateDynamicObject(3430,1479.99682617,-1722.42419434,14.20988750,0.00000000,0.00000000,0.00000000); //object(vegasbooth01) (1)
	CreateDynamicObject(3437,1276.60021973,-1724.47326660,18.90747643,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (1)
	CreateDynamicObject(3437,1271.04370117,-1724.32556152,18.90747643,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (2)
	CreateDynamicObject(3437,1253.40026855,-1724.39904785,18.91960526,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (3)
	CreateDynamicObject(3437,1260.21105957,-1724.65173340,18.91751099,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (4)
	CreateDynamicObject(3437,1014.96527100,-1115.69421387,28.75880241,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (5)
	CreateDynamicObject(3437,1008.72265625,-1115.87792969,28.76032829,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1003.80236816,-1117.07165527,28.75903893,0.00000000,0.00000000,32.00000000); //object(ballypllr01_lvs) (7)
	CreateDynamicObject(3437,1001.05871582,-1121.21704102,28.75903893,0.00000000,0.00000000,71.99768066); //object(ballypllr01_lvs) (8)
	CreateDynamicObject(3437,1001.30792236,-1125.18554688,28.75903893,0.00000000,0.00000000,123.99340820); //object(ballypllr01_lvs) (9)
	CreateDynamicObject(3437,1004.19598389,-1127.41638184,28.75903893,0.00000000,0.00000000,123.99169922); //object(ballypllr01_lvs) (10)
	CreateDynamicObject(3437,1029.61694336,-1115.26000977,28.75481415,0.00000000,0.00000000,3.99172974); //object(ballypllr01_lvs) (11)
	CreateDynamicObject(3437,1036.10278320,-1115.09875488,28.75889015,0.00000000,0.00000000,3.98803711); //object(ballypllr01_lvs) (12)
	CreateDynamicObject(3437,1041.09423828,-1117.42651367,28.75903893,0.00000000,0.00000000,323.98803711); //object(ballypllr01_lvs) (13)
	CreateDynamicObject(3437,1042.76623535,-1121.96435547,28.75903893,0.00000000,0.00000000,283.98681641); //object(ballypllr01_lvs) (14)
	CreateDynamicObject(3437,1041.28015137,-1126.76977539,28.75903893,0.00000000,0.00000000,233.98559570); //object(ballypllr01_lvs) (15)
	CreateDynamicObject(3440,1026.41552734,-1120.18066406,25.25562668,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (4)
	CreateDynamicObject(3441,1007.58197021,-1155.53833008,24.81053162,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (1)
	CreateDynamicObject(3441,999.94616699,-1155.40893555,24.82134056,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (2)
	CreateDynamicObject(3430,1035.49096680,-1122.87182617,24.55864906,0.00000000,0.00000000,320.00000000); //object(vegasbooth01) (2)
	CreateDynamicObject(1569,1020.94317627,-1120.86608887,22.87153816,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,1023.91271973,-1120.93212891,22.87459564,0.00000000,0.00000000,178.00000000); //object(adam_v_door) (2)
	CreateDynamicObject(1569,1023.91210938,-1120.93164062,22.87459564,0.00000000,0.00000000,177.99499512); //object(adam_v_door) (3)
	CreateDynamicObject(1569,1313.92419434,-897.46478271,38.59774017,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (4)
	CreateDynamicObject(1569,1316.88085938,-897.45397949,38.59523392,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (5)
	CreateDynamicObject(1569,1369.16906738,-1281.25610352,12.54687500,0.00000000,0.00000000,89.99450684); //object(adam_v_door) (6)
	CreateDynamicObject(1569,1369.17053223,-1278.29870605,12.54687500,0.00000000,0.00000000,269.99450684); //object(adam_v_door) (8)
	CreateDynamicObject(1499,1027.66113281,-1102.83386230,22.84784889,0.00000000,0.00000000,270.00000000); //object(gen_doorint05) (1)
	CreateDynamicObject(1499,1027.72229004,-1105.84887695,22.85137939,0.00000000,0.00000000,90.00000000); //object(gen_doorint05) (2)
	CreateDynamicObject(1499,1491.03649902,-1721.39331055,7.22286701,0.00000000,0.00000000,166.00000000); //object(gen_doorint05) (3)
	CreateDynamicObject(1499,1488.14660645,-1720.74499512,7.18083715,0.00000000,0.00000000,347.99694824); //object(gen_doorint05) (4)
	CreateDynamicObject(18766,1477.92431641,-1725.09582520,8.28641605,0.00000000,0.00000000,80.00000000); //object(lodcunte_landf4_03) (1)
	CreateDynamicObject(18766,1491.93383789,-1730.94348145,8.15452862,0.00000000,0.00000000,79.99694824); //object(lodcunte_landf4_03) (2)
	CreateDynamicObject(18766,1476.37304688,-1734.13671875,8.27564049,0.00000000,0.00000000,79.99694824); //object(lodcunte_landf4_03) (3)
	CreateDynamicObject(18766,1490.44726562,-1738.93920898,8.24715900,0.00000000,0.00000000,79.99694824); //object(lodcunte_landf4_03) (4)
	CreateDynamicObject(3863,1488.44335938,-1736.13867188,6.84728193,0.00000000,0.00000000,169.99694824); //object(marketstall03_sfxrf) (1)
	CreateDynamicObject(3863,1485.41247559,-1735.47119141,6.87285280,0.00000000,0.00000000,169.99694824); //object(marketstall03_sfxrf) (2)
	CreateDynamicObject(3863,1482.38476562,-1734.91601562,6.89819431,0.00000000,0.00000000,169.99145508); //object(marketstall03_sfxrf) (3)
	CreateDynamicObject(3863,1479.40527344,-1734.26367188,6.92331886,0.00000000,0.00000000,169.99145508); //object(marketstall03_sfxrf) (4)
	CreateDynamicObject(1441,1479.54760742,-1724.88879395,6.42587614,0.00000000,0.00000000,40.00000000); //object(dyn_box_pile_4) (1)
	CreateDynamicObject(1441,1482.21594238,-1724.32312012,6.39979696,0.00000000,0.00000000,309.99572754); //object(dyn_box_pile_4) (2)
	CreateDynamicObject(1441,1481.06933594,-1725.16943359,6.41299677,0.00000000,0.00000000,289.99572754); //object(dyn_box_pile_4) (3)
	CreateDynamicObject(1440,1483.71313477,-1724.54797363,6.24640512,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile_3) (1)
	CreateDynamicObject(1440,1490.69165039,-1727.25988770,6.19115496,0.00000000,0.00000000,280.00000000); //object(dyn_box_pile_3) (2)
	CreateDynamicObject(1440,1490.74523926,-1729.18383789,6.18695116,0.00000000,0.00000000,239.99755859); //object(dyn_box_pile_3) (3)
	CreateDynamicObject(1431,1490.65795898,-1731.61108398,6.21143150,0.00000000,0.00000000,70.00000000); //object(dyn_box_pile) (1)
	CreateDynamicObject(1431,1489.89709473,-1733.49523926,6.22318745,0.00000000,0.00000000,39.99938965); //object(dyn_box_pile) (1)
	CreateDynamicObject(1431,1489.68701172,-1732.33752441,6.22376060,0.00000000,0.00000000,79.99572754); //object(dyn_box_pile) (1)
	CreateDynamicObject(1431,1478.72229004,-1727.38269043,6.32301044,0.00000000,0.00000000,79.99145508); //object(dyn_box_pile) (1)
	CreateDynamicObject(1431,1478.16992188,-1729.82080078,6.32210350,0.00000000,0.00000000,79.99145508); //object(dyn_box_pile) (1)
	CreateDynamicObject(1431,1479.03698730,-1728.92968750,6.31707478,0.00000000,0.00000000,79.99145508); //object(dyn_box_pile) (1)
	CreateDynamicObject(1431,1479.54907227,-1726.69628906,6.31785679,0.00000000,0.00000000,79.99145508); //object(dyn_box_pile) (1)
	CreateDynamicObject(1654,1489.35656738,-1735.88244629,6.68498659,0.00000000,0.00000000,210.00000000); //object(dynamite) (1)
	CreateDynamicObject(1654,1489.15722656,-1735.91235352,6.68498659,0.00000000,0.00000000,209.99816895); //object(dynamite) (2)
	CreateDynamicObject(1654,1489.46972656,-1735.66210938,6.68498659,0.00000000,0.00000000,209.99816895); //object(dynamite) (3)
	CreateDynamicObject(1654,1488.94238281,-1735.92382812,6.68498659,0.00000000,0.00000000,209.99816895); //object(dynamite) (4)
	CreateDynamicObject(1654,1489.54003906,-1735.83154297,6.68498659,0.00000000,0.00000000,209.99816895); //object(dynamite) (5)
	CreateDynamicObject(1654,1489.67285156,-1735.59667969,6.68498659,0.00000000,0.00000000,209.99816895); //object(dynamite) (6)
	CreateDynamicObject(2033,1488.60705566,-1735.98596191,6.52370071,0.00000000,0.00000000,0.00000000); //object(cj_sawnoff2) (1)
	CreateDynamicObject(2033,1488.30224609,-1735.83728027,6.52370071,0.00000000,0.00000000,0.00000000); //object(cj_sawnoff2) (2)
	CreateDynamicObject(2033,1487.89868164,-1735.69628906,6.52370071,0.00000000,0.00000000,0,00000000); //object(cj_sawnoff2) (3)
	CreateDynamicObject(2033,1487.49047852,-1735.60839844,6.52370071,0.00000000,0.00000000,0.00000000); //object(cj_sawnoff2) (4)
	CreateDynamicObject(2034,1488.85498047,-1735.26367188,6.52369690,0.00000000,0.00000000,260.00000000); //object(cj_sawnoff) (1)
	CreateDynamicObject(2034,1488.55688477,-1735.21728516,6.52369690,0.00000000,0.00000000,259.99694824); //object(cj_sawnoff) (2)
	CreateDynamicObject(2034,1488.26892090,-1735.13977051,6.52369690,0.00000000,0.00000000,259.99694824); //object(cj_sawnoff) (3)
	CreateDynamicObject(2034,1487.98706055,-1735.05297852,6.52369690,0.00000000,0.00000000,259.99694824); //object(cj_sawnoff) (4)
	CreateDynamicObject(2034,1487.66918945,-1735.00659180,6.52369690,0.00000000,0.00000000,259.99694824); //object(cj_sawnoff) (5)
	CreateDynamicObject(2034,1487.38989258,-1734.90637207,6.52369690,0.00000000,0.00000000,259.99694824); //object(cj_sawnoff) (6)
	CreateDynamicObject(2035,1486.34301758,-1735.28735352,6.54288721,0.00000000,0.00000000,170.00000000); //object(cj_m16) (1)
	CreateDynamicObject(2035,1486.33044434,-1734.84521484,6.54288721,0.00000000,0.00000000,169.99694824); //object(cj_m16) (2)
	CreateDynamicObject(2035,1486.34155273,-1734.38708496,6.54288721,0.00000000,0.00000000,169.99694824); //object(cj_m16) (3)
	CreateDynamicObject(2035,1485.22766113,-1734.19165039,6.54288721,0.00000000,0.00000000,169.99694824); //object(cj_m16) (4)
	CreateDynamicObject(2035,1485.14477539,-1734.59912109,6.54288721,0.00000000,0.00000000,169.99694824); //object(cj_m16) (5)
	CreateDynamicObject(2035,1485.06396484,-1735.00415039,6.54288721,0.00000000,0.00000000,169.99694824); //object(cj_m16) (6)
	CreateDynamicObject(2036,1483.16931152,-1734.67687988,6.57771778,0.00000000,0.00000000,170.00000000); //object(cj_psg1) (1)
	CreateDynamicObject(2036,1483.15734863,-1734.12670898,6.57771778,0.00000000,0.00000000,169.99694824); //object(cj_psg1) (2)
	CreateDynamicObject(2036,1483.16552734,-1733.74438477,6.57771778,0.00000000,0.00000000,169.99694824); //object(cj_psg1) (3)
	CreateDynamicObject(2036,1481.83276367,-1734.47924805,6.57771778,0.00000000,0.00000000,169.99694824); //object(cj_psg1) (4)
	CreateDynamicObject(2044,1481.44616699,-1734.00793457,6.57132435,0.00000000,0.00000000,90.00000000); //object(cj_mp5k) (1)
	CreateDynamicObject(2044,1481.54418945,-1733.56823730,6.57132435,0.00000000,0.00000000,90.00000000); //object(cj_mp5k) (2)
	CreateDynamicObject(2044,1481.81030273,-1733.58496094,6.57132435,0.00000000,0.00000000,90.00000000); //object(cj_mp5k) (3)
	CreateDynamicObject(2044,1482.06359863,-1733.66345215,6.57132435,0.00000000,0.00000000,90.00000000); //object(cj_mp5k) (4)
	CreateDynamicObject(2044,1482.34521484,-1733.64611816,6.57132435,0.00000000,0.00000000,90.00000000); //object(cj_mp5k) (5)
	CreateDynamicObject(2044,1482.27856445,-1734.11486816,6.57132435,0.00000000,0.00000000,90.00000000); //object(cj_mp5k) (6)
	CreateDynamicObject(2044,1482.00061035,-1734.15734863,6.57132435,0.00000000,0.00000000,90.00000000); //object(cj_mp5k) (7)
	CreateDynamicObject(2044,1481.74560547,-1734.07019043,6.57132435,0.00000000,0.00000000,90.00000000); //object(cj_mp5k) (8)
	CreateDynamicObject(2045,1480.67443848,-1733.50671387,6.66179276,0.00000000,0.00000000,170.00000000); //object(cj_bbat_nails) (1)
	CreateDynamicObject(2045,1480.46020508,-1733.51977539,6.66179276,0.00000000,0.00000000,169.99694824); //object(cj_bbat_nails) (2)
	CreateDynamicObject(2045,1480.26110840,-1733.46374512,6.66179276,0.00000000,0.00000000,169.99694824); //object(cj_bbat_nails) (3)
	CreateDynamicObject(2045,1480.01123047,-1733.44116211,6.66179276,0.00000000,0.00000000,169.99694824); //object(cj_bbat_nails) (4)
	CreateDynamicObject(2057,1478.41174316,-1733.67492676,6.73936987,0.00000000,0.00000000,0.00000000); //object(flame_tins) (1)
	CreateDynamicObject(2057,1478.52832031,-1733.28686523,6.73936987,0.00000000,0.00000000,10.00000000); //object(flame_tins) (2)
	CreateDynamicObject(2058,1479.19140625,-1733.37719727,6.57207489,0.00000000,0.00000000,0.00000000); //object(cj_gun_docs) (1)
	CreateDynamicObject(2060,1477.57714844,-1732.77819824,5.93273783,0.00000000,0.00000000,40.00000000); //object(cj_sandbag) (1)
	CreateDynamicObject(2060,1478.05847168,-1732.24633789,5.92976809,0.00000000,0.00000000,349.99572754); //object(cj_sandbag) (2)
	CreateDynamicObject(2061,1479.02697754,-1733.94738770,6.86084557,0.00000000,0.00000000,330.00000000); //object(cj_shells1) (1)
	CreateDynamicObject(2061,1479.47790527,-1734.02001953,6.86084557,0.00000000,0.00000000,359.99633789); //object(cj_shells1) (2)
	CreateDynamicObject(3594,1046.73242188,-1097.74511719,23.45930099,0.00000000,0.00000000,0.00000000); //object(la_fuckcar1) (1)
	CreateDynamicObject(3594,1046.75439453,-1089.77014160,23.45930099,0.00000000,0.00000000,0.00000000); //object(la_fuckcar1) (2)
	CreateDynamicObject(3594,1047.08654785,-1094.41296387,23.92490005,0.00000000,0.00000000,0.00000000); //object(la_fuckcar1) (3)
	CreateDynamicObject(1358,1041.54516602,-1082.12060547,24.03167152,0.00000000,0.00000000,0.00000000); //object(cj_skip_rubbish) (1)
	CreateDynamicObject(1358,1038.49084473,-1082.09020996,24.03167152,0.00000000,0.00000000,0.00000000); //object(cj_skip_rubbish) (2)
	CreateDynamicObject(1358,1034.73303223,-1082.06994629,24.03167152,0.00000000,0.00000000,0.00000000); //object(cj_skip_rubbish) (3)
	CreateDynamicObject(1431,1031.58068848,-1081.34716797,23.37573814,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile) (8)
	CreateDynamicObject(1431,1029.14050293,-1081.13183594,23.37573814,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile) (9)
	CreateDynamicObject(1431,1030.51367188,-1082.06140137,23.38247108,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile) (10)
	CreateDynamicObject(1431,1031.97302246,-1083.14672852,23.37573814,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile) (11)
	CreateDynamicObject(1431,1029.40185547,-1082.83288574,23.38247108,0.00000000,0.00000000,340.00000000); //object(dyn_box_pile) (12)
	CreateDynamicObject(1441,1026.31665039,-1099.85412598,23.48650742,0.00000000,0.00000000,320.00000000); //object(dyn_box_pile_4) (4)
	CreateDynamicObject(1441,1031.55932617,-1096.77197266,23.47977448,0.00000000,0.00000000,359.99877930); //object(dyn_box_pile_4) (5)
	CreateDynamicObject(1441,1028.59118652,-1098.41003418,23.47977448,0.00000000,0.00000000,29.99450684); //object(dyn_box_pile_4) (6)
	CreateDynamicObject(1440,1031.76293945,-1098.05249023,23.34724045,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile_3) (4)
	CreateDynamicObject(1440,1031.33703613,-1098.91760254,23.34724045,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile_3) (5)
	CreateDynamicObject(1440,1028.42626953,-1100.15307617,23.34724045,0.00000000,0.00000000,330.00000000); //object(dyn_box_pile_3) (6)
	CreateDynamicObject(1438,1036.63513184,-1106.75085449,22.82812500,0.00000000,0.00000000,320.00000000); //object(dyn_box_pile_2) (1)
	CreateDynamicObject(1438,1037.86010742,-1104.78198242,22.82812500,0.00000000,0.00000000,319.99877930); //object(dyn_box_pile_2) (2)
	CreateDynamicObject(3437,1267.68066406,-1158.40209961,28.68872643,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1277.70581055,-1158.61389160,28.68872643,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1326.16442871,-1160.47399902,28.68872643,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1319.15173340,-1160.64416504,28.68872643,0.00000000,0.00000000,0.00000000); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1244.80541992,-1177.00183105,28.37371826,0.00000000,0.00000000,310.00000000); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1835.68261719,-1633.16137695,18.24012184,0.00000000,0.00000000,277.99572754); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1835.61108398,-1641.28051758,18.24311066,0.00000000,0.00000000,277.99255371); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1835.89257812,-1649.17199707,18.23134613,0.00000000,0.00000000,277.99255371); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1835.56726074,-1657.10192871,18.24494171,0.00000000,0.00000000,277.99255371); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1835.57580566,-1665.11218262,18.24458504,0.00000000,0.00000000,277.99255371); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1835.04650879,-1672.92456055,18.26670456,0.00000000,0.00000000,277.99255371); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1835.86535645,-1692.06713867,18.23248482,0.00000000,0.00000000,259.99255371); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1836.24487305,-1700.21862793,18.21662521,0.00000000,0.00000000,259.99145508); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1836.16735840,-1707.78845215,18.21986580,0.00000000,0.00000000,259.99145508); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1836.19213867,-1715.55139160,18.21883011,0.00000000,0.00000000,259.99145508); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1836.31665039,-1723.89367676,18.21362495,0.00000000,0.00000000,259.99145508); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1836.41894531,-1732.23266602,18.20935059,0.00000000,0.00000000,259.99145508); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(18647,1019.84735107,-1120.30249023,23.00402069,0.00000000,0.00000000,60.00000000); //object(wall1) (1)
	CreateDynamicObject(18647,1025.07934570,-1120.24829102,22.95932770,0.00000000,0.00000000,119.99633789); //object(wall1) (2)
	CreateDynamicObject(18648,995.01409912,-1130.61352539,32.85108948,0.00000000,0.00000000,90.00000000); //object(wall2) (1)
	CreateDynamicObject(18648,996.94683838,-1130.61486816,32.85193253,0.00000000,0.00000000,90.00000000); //object(wall2) (2)
	CreateDynamicObject(18648,998.90509033,-1130.61633301,32.85361481,0.00000000,0.00000000,90.00000000); //object(wall2) (3)
	CreateDynamicObject(18648,1000.85766602,-1130.61779785,32.83490753,0.00000000,0.00000000,90.00000000); //object(wall2) (4)
	CreateDynamicObject(18648,1002.67895508,-1130.61914062,32.83610535,0.00000000,0.00000000,90.00000000); //object(wall2) (5)
	CreateDynamicObject(18648,1042.24243164,-1130.61828613,32.84208298,0.00000000,0.00000000,90.00000000); //object(wall2) (6)
	CreateDynamicObject(18648,1044.22546387,-1130.61682129,32.82181931,0.00000000,0.00000000,90.00000000); //object(wall2) (7)
	CreateDynamicObject(18648,1046.10424805,-1130.61547852,32.82738876,0.00000000,0.00000000,90.00000000); //object(wall2) (8)
	CreateDynamicObject(18648,1048.10217285,-1130.61401367,32.87356949,0.00000000,0.00000000,90.00000000); //object(wall2) (9)
	CreateDynamicObject(18648,1050.05371094,-1130.61254883,32.87840652,0.00000000,0.00000000,90.00000000); //object(wall2) (10)
	CreateDynamicObject(18648,1017.60961914,-1121.72155762,35.57524109,0.00000000,0.00000000,90.00000000); //object(wall2) (11)
	CreateDynamicObject(18648,1019.62194824,-1121.73925781,35.57524109,0.00000000,0.00000000,90.00000000); //object(wall2) (12)
	CreateDynamicObject(18648,1021.59967041,-1121.75683594,35.57524109,0.00000000,0.00000000,90.00000000); //object(wall2) (13)
	CreateDynamicObject(18648,1023.54730225,-1121.77429199,35.57524109,0.00000000,0.00000000,90.00000000); //object(wall2) (14)
	CreateDynamicObject(18648,1025.45312500,-1121.79187012,35.57524109,0.00000000,0.00000000,90.00000000); //object(wall2) (15)
	CreateDynamicObject(18648,1027.14392090,-1121.79125977,35.57524109,0.00000000,0.00000000,90.00000000); //object(wall2) (16)
	CreateDynamicObject(18648,1019.62341309,-1120.23815918,26.33897591,0.00000000,0.00000000,62.00000000); //object(wall2) (17)
	CreateDynamicObject(18648,1022.41442871,-1121.01171875,26.20803070,0.00000000,0.00000000,89.99584961); //object(wall2) (18)
	CreateDynamicObject(18648,1024.88134766,-1120.35278320,26.19531250,0.00000000,0.00000000,119.99450684); //object(wall2) (19)
	CreateDynamicObject(18655,1025.98742676,-1120.33740234,22.87835121,0.00000000,0.00000000,70.00000000); //object(bridge) (1)
	CreateDynamicObject(18655,1018.58953857,-1119.90319824,22.89731598,0.00000000,0.00000000,119.99938965); //object(bridge) (2)

	// -= Banco, Arboles y Arbustos en Gantom Gim =-
	CreateDynamicObject(647,2209.63452148,-1713.39050293,14.31217766,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (1)
	CreateDynamicObject(647,2209.87011719,-1710.76538086,14.35577202,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (2)
	CreateDynamicObject(647,2210.07666016,-1708.15234375,14.39567089,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (3)
	CreateDynamicObject(647,2210.23095703,-1704.51428223,14.44446850,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (4)
	CreateDynamicObject(647,2210.38452148,-1701.09155273,14.49051952,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (5)
	CreateDynamicObject(647,2210.85424805,-1697.52966309,14.54366493,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (6)
	CreateDynamicObject(647,2211.18261719,-1694.02453613,14.62512684,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (7)
	CreateDynamicObject(647,2211.89843750,-1690.88378906,14.70138645,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (8)
	CreateDynamicObject(647,2212.75585938,-1686.18566895,14.83997440,0.00000000,0.00000000,40.00000000); //object(new_bushsm) (9)
	CreateDynamicObject(647,2213.75268555,-1682.42834473,14.98495770,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (10)
	CreateDynamicObject(647,2214.30444336,-1678.69738770,15.17250538,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (11)
	CreateDynamicObject(647,2215.12011719,-1675.08276367,15.37065220,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (12)
	CreateDynamicObject(647,2216.10424805,-1671.17871094,15.59070110,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (13)
	CreateDynamicObject(647,2217.00463867,-1667.69812012,15.78822708,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (14)
	CreateDynamicObject(647,2218.87109375,-1659.94299316,15.99238491,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (15)
	CreateDynamicObject(647,2217.86645508,-1664.72351074,15.89821053,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (16)
	CreateDynamicObject(647,2218.36010742,-1662.50744629,15.94837570,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (17)
	CreateDynamicObject(712,2201.28393555,-1657.55969238,23.76996231,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (2)
	CreateDynamicObject(712,2195.15625000,-1685.21105957,22.53838730,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (3)
	CreateDynamicObject(712,2192.57666016,-1718.93908691,22.25032425,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (4)
	CreateDynamicObject(712,2208.40576172,-1743.92028809,21.89627075,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (5)
	CreateDynamicObject(647,2200.25634766,-1660.91394043,15.47065067,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (18)
	CreateDynamicObject(647,2199.61987305,-1663.44226074,15.47065067,0.00000000,0.00000000,39.99572754); //object(new_bushsm) (19)
	CreateDynamicObject(647,2198.90649414,-1666.91455078,15.56510735,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (20)
	CreateDynamicObject(647,2198.40942383,-1668.48303223,15.49593735,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (21)
	CreateDynamicObject(647,2197.74121094,-1672.20996094,15.30784416,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (22)
	CreateDynamicObject(647,2196.63598633,-1676.26513672,15.12068653,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (23)
	CreateDynamicObject(647,2196.15771484,-1679.96728516,14.93811512,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (24)
	CreateDynamicObject(647,2197.10107422,-1674.14355469,15.22383976,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (25)
	CreateDynamicObject(647,2194.18359375,-1687.53295898,14.70038319,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (26)
	CreateDynamicObject(647,2195.08715820,-1683.03515625,14.83877373,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (27)
	CreateDynamicObject(647,2193.70947266,-1690.36889648,14.63191223,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (28)
	CreateDynamicObject(647,2193.36254883,-1693.63342285,14.56558704,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (29)
	CreateDynamicObject(647,2193.27563477,-1697.46057129,14.50877380,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (30)
	CreateDynamicObject(647,2193.17919922,-1701.44848633,14.44971466,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (31)
	CreateDynamicObject(647,2193.13745117,-1704.58874512,14.40239048,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (32)
	CreateDynamicObject(647,2192.72973633,-1708.57592773,14.35079384,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (33)
	CreateDynamicObject(647,2192.99023438,-1711.98046875,14.40557003,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (34)
	CreateDynamicObject(647,2192.51245117,-1715.60559082,14.45090771,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (35)
	CreateDynamicObject(647,2209.60009766,-1747.11853027,14.20678139,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (36)
	CreateDynamicObject(647,2209.30932617,-1750.50561523,14.21619797,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (37)
	CreateDynamicObject(647,2209.15991211,-1753.75231934,14.23208523,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (38)
	CreateDynamicObject(647,2208.98730469,-1757.07556152,14.22695923,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (39)
	CreateDynamicObject(647,2209.04003906,-1760.59594727,14.23124790,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (40)
	CreateDynamicObject(647,2208.79638672,-1763.92163086,14.21370125,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (41)
	CreateDynamicObject(647,2209.68579102,-1768.86035156,14.27305698,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (42)
	CreateDynamicObject(647,2209.69897461,-1772.92980957,14.24799061,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (43)
	CreateDynamicObject(647,2209.70678711,-1776.82775879,14.22368336,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (44)
	CreateDynamicObject(647,2209.81982422,-1780.68286133,14.20616055,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (45)
	CreateDynamicObject(647,2210.12719727,-1783.87390137,14.20488739,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (46)
	CreateDynamicObject(647,2209.83007812,-1788.37927246,14.15784550,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (47)
	CreateDynamicObject(647,2210.08911133,-1792.81457520,14.16258621,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (48)
	CreateDynamicObject(647,2210.22851562,-1796.81860352,14.16337681,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (49)
	CreateDynamicObject(647,2210.36132812,-1800.69140625,14.16230774,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (50)
	CreateDynamicObject(647,2210.28808594,-1804.67492676,14.15392685,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (51)
	CreateDynamicObject(647,2210.08740234,-1810.36596680,14.13862228,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (52)
	CreateDynamicObject(647,2210.50097656,-1814.45117188,14.14698124,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (53)
	CreateDynamicObject(647,2210.67504883,-1818.50073242,14.14534760,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (54)
	CreateDynamicObject(647,2210.42138672,-1823.31909180,14.13367367,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (55)
	CreateDynamicObject(647,2211.13964844,-1827.27819824,14.15191078,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (56)
	CreateDynamicObject(647,2210.79565430,-1831.03649902,14.13765240,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (57)
	CreateDynamicObject(647,2210.86645508,-1836.20556641,14.13478088,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (58)
	CreateDynamicObject(4640,2194.00488281,-1723.38757324,14.26716900,0.00000000,0.00000000,270.00000000); //object(paypark_lan03) (1)
	CreateDynamicObject(1228,2207.45214844,-1725.60693359,12.83821297,0.00000000,0.00000000,290.00000000); //object(roadworkbarrier1) (1)
	CreateDynamicObject(1228,2204.12304688,-1651.54150391,14.78212929,0.00000000,0.00000000,269.99511719); //object(roadworkbarrier1) (2)
	CreateDynamicObject(1228,2209.86987305,-1741.11413574,12.83985138,0.00000000,0.00000000,29.99023438); //object(roadworkbarrier1) (3)
	CreateDynamicObject(1228,2208.28930664,-1739.59399414,12.81998634,0.00000000,0.00000000,49.98718262); //object(roadworkbarrier1) (4)
	CreateDynamicObject(1228,2193.63549805,-1739.38842773,12.96800327,0.00000000,0.00000000,109.98229980); //object(roadworkbarrier1) (5)
	CreateDynamicObject(1228,2191.86425781,-1740.83154297,12.96800327,0.00000000,0.00000000,139.97863770); //object(roadworkbarrier1) (6)
	CreateDynamicObject(1228,2193.89770508,-1725.75183105,12.98368835,0.00000000,0.00000000,249.97680664); //object(roadworkbarrier1) (7)
	CreateDynamicObject(1228,2191.71875000,-1724.25073242,12.97477436,0.00000000,0.00000000,219.97192383); //object(roadworkbarrier1) (8)
	CreateDynamicObject(4640,2203.66430664,-1653.95703125,15.96430683,0.00000000,0.00000000,76.00000000); //object(paypark_lan03) (2)
	CreateDynamicObject(1228,2208.28906250,-1739.59375000,12.81998634,0.00000000,0.00000000,49.98229980); //object(roadworkbarrier1) (10)
	CreateDynamicObject(1228,2201.49145508,-1652.59521484,14.83008766,0.00000000,0.00000000,309.99450684); //object(roadworkbarrier1) (11)
	CreateDynamicObject(1228,2220.89916992,-1658.23571777,14.87024975,0.00000000,0.00000000,19.99023438); //object(roadworkbarrier1) (12)
	CreateDynamicObject(1228,2219.72949219,-1656.32495117,14.81514263,0.00000000,0.00000000,39.98962402); //object(roadworkbarrier1) (13)
	CreateDynamicObject(1228,2217.97363281,-1655.42187500,14.64406872,0.00000000,0.00000000,69.98474121); //object(roadworkbarrier1) (14)
	CreateDynamicObject(712,2230.68481445,-1821.56555176,22.15873337,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (7)
	CreateDynamicObject(712,2231.33642578,-1833.19299316,22.15305328,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (8)
	CreateDynamicObject(1337,2234.36523438,-1654.98437500,-30.28808784,0.00000000,0.00000000,0.00000000); //object(binnt07_la) (1)
	CreateDynamicObject(1374,2195.04907227,-1725.02575684,14.15386963,0.00000000,0.00000000,170.00000000); //object(traincross2) (1)
	CreateDynamicObject(1408,2371.75903320,-1648.84985352,13.14016247,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_2) (1)
	CreateDynamicObject(1408,2376.14526367,-1648.82812500,13.14006615,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_2) (4)
	CreateDynamicObject(1408,2379.32812500,-1648.83984375,13.14011765,0.00000000,0.00000000,0.00000000); //object(dyn_f_wood_2) (5)
	CreateDynamicObject(712,2539.65429688,-1746.93371582,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (10)
	CreateDynamicObject(712,2539.30126953,-1767.92089844,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (11)
	CreateDynamicObject(712,2538.44531250,-1792.38208008,22.14623260,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (12)
	CreateDynamicObject(712,2529.91699219,-1812.68176270,22.15358353,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (13)
	CreateDynamicObject(1408,2537.60839844,-1745.01184082,13.14224529,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_2) (6)
	CreateDynamicObject(1408,2537.62695312,-1750.21057129,13.14224529,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_2) (7)
	CreateDynamicObject(1408,2537.59594727,-1755.40258789,13.14224529,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_2) (8)
	CreateDynamicObject(1408,2537.58789062,-1760.58227539,13.14224529,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_2) (9)
	CreateDynamicObject(1408,2537.56494141,-1765.77270508,13.14224529,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_2) (10)
	CreateDynamicObject(1408,2537.59008789,-1770.98571777,13.14224529,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_2) (11)
	CreateDynamicObject(1408,2537.58203125,-1776.20336914,13.14224529,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_2) (12)
	CreateDynamicObject(1408,2537.53491211,-1781.57861328,13.14224529,0.00000000,0.00000000,270.00000000); //object(dyn_f_wood_2) (13)
	CreateDynamicObject(1408,2537.26220703,-1787.02380371,13.14224529,0.00000000,0.00000000,264.00000000); //object(dyn_f_wood_2) (14)
	CreateDynamicObject(1408,2536.63916016,-1792.45996094,13.14224529,0.00000000,0.00000000,263.99597168); //object(dyn_f_wood_2) (15)
	CreateDynamicObject(1408,2535.47436523,-1797.76843262,13.14224529,0.00000000,0.00000000,251.99597168); //object(dyn_f_wood_2) (16)
	CreateDynamicObject(1408,2533.50488281,-1802.82727051,13.14224529,0.00000000,0.00000000,243.99340820); //object(dyn_f_wood_2) (17)
	CreateDynamicObject(1408,2531.08007812,-1807.69567871,13.14959621,0.00000000,0.00000000,243.98986816); //object(dyn_f_wood_2) (18)
	CreateDynamicObject(1408,2528.81542969,-1812.43640137,13.14224529,0.00000000,0.00000000,243.98986816); //object(dyn_f_wood_2) (19)
	CreateDynamicObject(1408,2527.21972656,-1817.52563477,13.14224529,0.00000000,0.00000000,261.48986816); //object(dyn_f_wood_2) (20)
	CreateDynamicObject(2780,2453.14892578,-2128.90136719,59.61718750,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (1)
	CreateDynamicObject(2780,2484.32543945,-2140.97900391,41.54718781,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (2)
	CreateDynamicObject(2780,2495.91821289,-2140.86059570,41.54718781,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (3)
	CreateDynamicObject(2780,2515.06030273,-2073.18115234,47.79718781,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (4)
	CreateDynamicObject(2780,2502.88183594,-2073.55273438,47.79718781,0.00000000,0.00000000,0.00000000); //object(cj_smoke_mach) (5)
	CreateDynamicObject(3426,2329.89184570,-2185.93212891,12.23381615,0.00000000,0.00000000,344.00000000); //object(nt_noddonkbase) (1)
	CreateDynamicObject(3426,2790.74658203,-2099.53564453,9.92122459,359.50030518,2.00000000,332.01586914); //object(nt_noddonkbase) (2)
	CreateDynamicObject(10049,1496.76367188,-1563.08666992,27.26159096,0.00000000,0.00000000,90.00000000); //object(posh_thingsfe) (1)
	CreateDynamicObject(10401,1562.45153809,-1623.08898926,14.83824730,0.00000000,0.00000000,44.75000000); //object(hc_shed02_sfs) (1)
	CreateDynamicObject(1569,1495.73278809,-1583.50463867,13.22252846,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,2305.24780273,-17.58496094,25.74218750,0.00000000,0.00000000,89.75000000); //object(adam_v_door) (2)
	CreateDynamicObject(1569,1498.63281250,-1583.50000000,13.22252846,0.00000000,0.00000000,179.99450684); //object(adam_v_door) (3)
	CreateDynamicObject(1569,2305.26074219,-14.59969330,25.74218750,0.00000000,0.00000000,269.24731445); //object(adam_v_door) (4)
	CreateDynamicObject(1569,2305.24414062,-17.73493576,25.74218750,0.00000000,0.00000000,89.74731445); //object(adam_v_door) (5)

	// -= Licencieros =-
	CreateDynamicObject(970,1761.95751953,-1682.16418457,13.11164665,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1761.95422363,-1677.80273438,13.11164188,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1761.91394043,-1673.32275391,13.11158276,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1761.90026855,-1668.23937988,13.11156273,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1761.89404297,-1664.50073242,13.11155319,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,1761.92919922,-1659.97814941,13.11160469,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (6)
	CreateDynamicObject(970,1763.95532227,-1662.06677246,13.11457348,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,1763.96569824,-1666.09545898,13.11458874,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (8)
	CreateDynamicObject(970,1763.95812988,-1670.24426270,13.11457825,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (9)
	CreateDynamicObject(970,1763.96923828,-1674.34472656,13.11459446,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (10)
	CreateDynamicObject(970,1763.98034668,-1678.42749023,13.11461067,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (11)
	CreateDynamicObject(970,1763.99560547,-1680.07836914,13.11461067,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (12)
	CreateDynamicObject(1215,1759.82775879,-1682.09570312,13.12136745,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1759.86535645,-1677.80664062,13.12142372,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1759.82507324,-1673.30615234,13.12136459,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1759.74316406,-1668.31933594,13.12124443,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1759.68493652,-1664.52270508,13.12115860,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,1759.71105957,-1659.95727539,13.12119675,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1569,1772.79077148,-1653.41320801,13.43266773,0.00000000,0.00000000,306.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,1774.52600098,-1655.84606934,13.44796085,0.00000000,0.00000000,125.99670410); //object(adam_v_door) (2)
	CreateDynamicObject(1569,-2031.40893555,-119.73522186,1034.17187500,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (3)
	CreateDynamicObject(1569,-2025.97290039,-103.62377930,1034.17187500,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (4)
	CreateDynamicObject(1569,-2028.89257812,-103.62792969,1034.17187500,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (5)
	CreateDynamicObject(1569,-2028.41430664,-119.71759796,1034.17187500,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (6)
	CreateDynamicObject(14415,-2018.89208984,-72.03988647,1034.08239746,0.00000000,0.00000000,0.00000000); //object(carter-floors01) (1)
	CreateDynamicObject(1569,-1993.40283203,-62.00051880,1027.91833496,0.00000000,0.00000000,269.99450684); //object(adam_v_door) (7)
	CreateDynamicObject(1569,-2039.42797852,-65.81327057,1027.93054199,0.00000000,0.00000000,89.98901367); //object(adam_v_door) (8)
	CreateDynamicObject(1569,-1993.37695312,-64.99804688,1027.91833496,0.00000000,0.00000000,89.98901367); //object(adam_v_door) (10)
	CreateDynamicObject(1569,-2039.43969727,-62.81329727,1027.93090820,0.00000000,0.00000000,269.98901367); //object(adam_v_door) (11)
	CreateDynamicObject(1491,-2011.04931641,-77.04943085,1027.91833496,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (1)
	CreateDynamicObject(1491,-2008.08142090,-77.02191925,1027.91833496,0.00000000,0.00000000,180.00000000); //object(gen_doorint01) (2)
	CreateDynamicObject(1491,-2011.06933594,-68.85163116,1027.91833496,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (3)
	CreateDynamicObject(1491,-2008.10021973,-68.82164001,1027.91833496,0.00000000,0.00000000,180.00000000); //object(gen_doorint01) (4)
	CreateDynamicObject(1491,-2026.96459961,-84.93977356,1027.91833496,0.00000000,0.00000000,89.99450684); //object(gen_doorint01) (5)
	CreateDynamicObject(1491,-2026.95874023,-81.77914429,1027.91833496,0.00000000,0.00000000,269.98901367); //object(gen_doorint01) (6)
	CreateDynamicObject(1491,-2031.67065430,-76.72061157,1027.92736816,0.00000000,0.00000000,179.98901367); //object(gen_doorint01) (7)
	CreateDynamicObject(1491,-2034.66674805,-76.70342255,1027.91833496,0.00000000,0.00000000,359.98352051); //object(gen_doorint01) (8)
	CreateDynamicObject(2198,-2009.24047852,-59.11746979,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (1)
	CreateDynamicObject(2198,-2009.26293945,-61.77876282,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (2)
	CreateDynamicObject(2198,-2009.26391602,-64.38420105,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (3)
	CreateDynamicObject(2198,-2011.98291016,-59.12844086,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (4)
	CreateDynamicObject(2198,-2011.99523926,-61.77922821,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (5)
	CreateDynamicObject(2198,-2008.59985352,-80.03466034,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (6)
	CreateDynamicObject(2198,-2014.41870117,-59.24824905,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (7)
	CreateDynamicObject(2198,-2014.45495605,-61.76247406,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (8)
	CreateDynamicObject(2198,-2014.51013184,-64.32015991,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (9)
	CreateDynamicObject(2165,-2031.52441406,-63.88493347,1027.91833496,0.00000000,0.00000000,200.00000000); //object(med_office_desk_1) (1)
	CreateDynamicObject(1671,-2003.76831055,-60.69291306,1028.37854004,0.00000000,0.00000000,300.00000000); //object(swivelchair_a) (1)
	CreateDynamicObject(1671,-2010.51428223,-59.93007660,1028.37854004,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (3)
	CreateDynamicObject(1671,-2010.35327148,-62.50254440,1028.37854004,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (4)
	CreateDynamicObject(1671,-2003.01440430,-83.84319305,1028.37854004,0.00000000,0.00000000,252.00000000); //object(swivelchair_a) (5)
	CreateDynamicObject(1671,-2012.86962891,-65.04521179,1028.37854004,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (6)
	CreateDynamicObject(1671,-2012.99353027,-62.53418732,1028.37854004,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (7)
	CreateDynamicObject(1671,-2012.94995117,-59.92739868,1028.37854004,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (8)
	CreateDynamicObject(1671,-2015.66882324,-65.02046967,1028.37854004,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (9)
	CreateDynamicObject(1671,-2015.62109375,-62.56354141,1028.38488770,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (10)
	CreateDynamicObject(1671,-2015.66101074,-60.00591660,1028.38488770,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (11)
	CreateDynamicObject(3077,-2037.07702637,-60.26511002,1027.91833496,0.00000000,0.00000000,210.00000000); //object(nf_blackboard) (1)
	CreateDynamicObject(3077,-2003.53027344,-65.70800781,1027.91833496,0.00000000,0.00000000,59.99633789); //object(nf_blackboard) (2)
	CreateDynamicObject(2165,-2004.38378906,-61.78710938,1027.91833496,0.00000000,0.00000000,119.99816895); //object(med_office_desk_1) (3)
	CreateDynamicObject(2165,-2004.38378906,-61.78710938,1027.91833496,0.00000000,0.00000000,119.99816895); //object(med_office_desk_1) (4)
	CreateDynamicObject(1671,-2010.26757812,-65.08203125,1028.37854004,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (12)
	CreateDynamicObject(2198,-2011.97656250,-64.34765625,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (13)
	CreateDynamicObject(2198,-2008.60498047,-83.02664948,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (14)
	CreateDynamicObject(2198,-2010.98583984,-80.02887726,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (15)
	CreateDynamicObject(2198,-2013.03027344,-80.01090240,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (16)
	CreateDynamicObject(2198,-2015.09875488,-80.01183319,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (17)
	CreateDynamicObject(2198,-2011.06262207,-82.88206482,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (18)
	CreateDynamicObject(2198,-2013.12426758,-82.78381348,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (19)
	CreateDynamicObject(2198,-2015.12231445,-82.78494263,1027.91833496,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_3) (20)
	CreateDynamicObject(1671,-2009.74902344,-83.73333740,1028.37854004,0.00000000,0.00000000,91.99890137); //object(swivelchair_a) (13)
	CreateDynamicObject(1671,-2009.69934082,-80.85732269,1028.37854004,0.00000000,0.00000000,91.99401855); //object(swivelchair_a) (14)
	CreateDynamicObject(1671,-2012.09338379,-80.95852661,1028.37854004,0.00000000,0.00000000,91.99401855); //object(swivelchair_a) (15)
	CreateDynamicObject(1671,-2012.18566895,-83.57934570,1028.37854004,0.00000000,0.00000000,91.99401855); //object(swivelchair_a) (16)
	CreateDynamicObject(1671,-2014.16613770,-83.67246246,1028.37854004,0.00000000,0.00000000,91.99401855); //object(swivelchair_a) (17)
	CreateDynamicObject(1671,-2014.16223145,-81.00109100,1028.37854004,0.00000000,0.00000000,91.99401855); //object(swivelchair_a) (18)
	CreateDynamicObject(1671,-2016.25915527,-83.61965179,1028.37854004,0.00000000,0.00000000,91.99401855); //object(swivelchair_a) (19)
	CreateDynamicObject(1671,-2016.22399902,-80.88482666,1028.38488770,0.00000000,0.00000000,91.99401855); //object(swivelchair_a) (20)
	CreateDynamicObject(3077,-2002.73535156,-79.26074219,1027.91833496,0.00000000,0.00000000,119.99816895); //object(nf_blackboard) (3)
	CreateDynamicObject(3077,-2002.73535156,-79.26074219,1027.91833496,0.00000000,0.00000000,119.99816895); //object(nf_blackboard) (4)
	CreateDynamicObject(3077,-2029.31176758,-60.09536362,1027.91833496,0.00000000,0.00000000,149.99816895); //object(nf_blackboard) (5)
	CreateDynamicObject(2198,-2037.32226562,-68.43151855,1027.91833496,0.00000000,0.00000000,2.00000000); //object(med_office2_desk_3) (21)
	CreateDynamicObject(2198,-2034.47985840,-68.41234589,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (22)
	CreateDynamicObject(2198,-2031.77404785,-68.28280640,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (23)
	CreateDynamicObject(2198,-2029.01171875,-68.18672180,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (24)
	CreateDynamicObject(2198,-2037.18017578,-70.70064545,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (25)
	CreateDynamicObject(2198,-2034.48852539,-70.60029602,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (26)
	CreateDynamicObject(2198,-2031.79943848,-70.55163574,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (27)
	CreateDynamicObject(2198,-2029.06018066,-70.52679443,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (29)
	CreateDynamicObject(2198,-2037.06652832,-72.95392609,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (30)
	CreateDynamicObject(2198,-2034.50891113,-72.67854309,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (31)
	CreateDynamicObject(2198,-2031.81213379,-72.52543640,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (32)
	CreateDynamicObject(2198,-2029.06750488,-72.44458771,1027.91833496,0.00000000,0.00000000,1.99951172); //object(med_office2_desk_3) (33)
	CreateDynamicObject(1671,-2036.42968750,-74.09952545,1028.37854004,0.00000000,0.00000000,181.99401855); //object(swivelchair_a) (21)
	CreateDynamicObject(1671,-2033.89111328,-73.88761139,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (22)
	CreateDynamicObject(1671,-2031.16735840,-73.87525177,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (23)
	CreateDynamicObject(1671,-2028.53613281,-73.73830414,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (24)
	CreateDynamicObject(1671,-2028.68652344,-71.55911255,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (25)
	CreateDynamicObject(1671,-2031.38903809,-71.58805847,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (26)
	CreateDynamicObject(1671,-2033.98962402,-71.76207733,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (27)
	CreateDynamicObject(1671,-2036.53381348,-71.86657715,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (28)
	CreateDynamicObject(1671,-2036.74890137,-69.47814941,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (29)
	CreateDynamicObject(1671,-2033.99194336,-69.43881989,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (30)
	CreateDynamicObject(1671,-2031.26123047,-69.38211823,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (31)
	CreateDynamicObject(1671,-2028.35314941,-69.33782196,1028.37854004,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (32)
	CreateDynamicObject(2165,-2004.33691406,-84.02929688,1027.91833496,0.00000000,0.00000000,69.99938965); //object(med_office_desk_1) (5)
	CreateDynamicObject(2165,-2004.33691406,-84.02929688,1027.91833496,0.00000000,0.00000000,69.99938965); //object(med_office_desk_1) (6)
	CreateDynamicObject(2165,-2033.62878418,-64.23260498,1027.91833496,0.00000000,0.00000000,159.99511719); //object(med_office_desk_1) (7)
	CreateDynamicObject(1671,-2032.61804199,-62.94611359,1028.37854004,0.00000000,0.00000000,21.98852539); //object(swivelchair_a) (33)
	CreateDynamicObject(1671,-2033.84863281,-62.88584900,1028.37854004,0.00000000,0.00000000,331.98364258); //object(swivelchair_a) (34)
	CreateDynamicObject(1726,-2039.27648926,-78.24803162,1027.91833496,0.00000000,0.00000000,0.00000000); //object(mrk_seating2) (1)
	CreateDynamicObject(1726,-2039.92724609,-83.16760254,1027.91833496,0.00000000,0.00000000,90.00000000); //object(mrk_seating2) (3)
	CreateDynamicObject(1726,-2037.35229492,-83.77799225,1027.91833496,0.00000000,0.00000000,180.00000000); //object(mrk_seating2) (4)
	CreateDynamicObject(1726,-2039.91381836,-80.86668396,1027.91833496,0.00000000,0.00000000,90.00000000); //object(mrk_seating2) (6)
	CreateDynamicObject(2184,-2038.34301758,-79.93791199,1027.49291992,0.00000000,0.00000000,270.00000000); //object(med_office6_desk_2) (1)

	// -= Aereopuerto =-
	CreateDynamicObject(3934,1982.64978027,-2189.48046875,12.54687500,0.00000000,0.00000000,270.00000000); //object(helipad01) (1)
	CreateDynamicObject(3934,1993.84741211,-2189.58935547,12.54687500,0.00000000,0.00000000,270.00000000); //object(helipad01) (2)
	CreateDynamicObject(3934,2005.39331055,-2189.61791992,12.54687500,0.00000000,0.00000000,270.00000000); //object(helipad01) (3)
	CreateDynamicObject(3934,2017.19531250,-2189.61523438,12.54687500,0.00000000,0.00000000,270.00000000); //object(helipad01) (4)
	CreateDynamicObject(3934,2028.52856445,-2189.55444336,12.54687309,0.00000000,0.00000000,270.00000000); //object(helipad01) (5)
	CreateDynamicObject(3934,2039.91821289,-2189.48632812,12.55401230,0.00000000,0.00000000,270.00000000); //object(helipad01) (6)
	CreateDynamicObject(3526,2043.13256836,-2191.57202148,12.62242985,0.00000000,0.00000000,180.00000000); //object(vegasairportlight) (1)
	CreateDynamicObject(3526,2043.15881348,-2187.20288086,12.62242985,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (2)
	CreateDynamicObject(3526,2031.88293457,-2191.67456055,12.62242985,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (3)
	CreateDynamicObject(3526,2031.94140625,-2187.18554688,12.61529255,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (4)
	CreateDynamicObject(3526,2020.64941406,-2191.72558594,12.61529255,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (5)
	CreateDynamicObject(3526,2020.61425781,-2187.35668945,12.61529255,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (6)
	CreateDynamicObject(3526,2008.85620117,-2191.73193359,12.61529255,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (7)
	CreateDynamicObject(3526,2008.84973145,-2187.29931641,12.61529255,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (8)
	CreateDynamicObject(3526,1997.38391113,-2191.73974609,12.61529255,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (9)
	CreateDynamicObject(3526,1997.33190918,-2187.20166016,12.61529255,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (10)
	CreateDynamicObject(3526,1986.17907715,-2191.57885742,12.61529255,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (11)
	CreateDynamicObject(3526,1986.09997559,-2187.02294922,12.61529255,0.00000000,0.00000000,179.99450684); //object(vegasairportlight) (12)
	CreateDynamicObject(3526,2036.29907227,-2191.62963867,12.62242985,0.00000000,0.00000000,359.99450684); //object(vegasairportlight) (13)
	CreateDynamicObject(3526,2036.36840820,-2187.21630859,12.62242985,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (14)
	CreateDynamicObject(3526,2024.96166992,-2191.71069336,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (15)
	CreateDynamicObject(3526,2024.99365234,-2187.15942383,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (16)
	CreateDynamicObject(3526,2013.65795898,-2191.74316406,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (17)
	CreateDynamicObject(3526,2013.67773438,-2187.16577148,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (18)
	CreateDynamicObject(3526,2001.88940430,-2191.75048828,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (19)
	CreateDynamicObject(3526,2001.90270996,-2187.20336914,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (20)
	CreateDynamicObject(3526,1990.35192871,-2191.87011719,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (21)
	CreateDynamicObject(3526,1990.34472656,-2187.29467773,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (22)
	CreateDynamicObject(3526,1979.10314941,-2191.67480469,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (23)
	CreateDynamicObject(3526,1979.13830566,-2187.07958984,12.61529255,0.00000000,0.00000000,359.98901367); //object(vegasairportlight) (24)
	CreateDynamicObject(7981,2110.90454102,-2219.07958984,17.54521942,0.00000000,0.00000000,316.00000000); //object(smallradar02_lvs) (1)
	CreateDynamicObject(8253,1980.99218750,-2640.68603516,16.47466278,0.00000000,0.00000000,90.00000000); //object(pltschlhnger01_lvs) (3)
	CreateDynamicObject(8253,2006.31298828,-2640.78906250,16.47466278,0.00000000,0.00000000,90.00000000); //object(pltschlhnger01_lvs) (4)
	CreateDynamicObject(8253,2031.54284668,-2641.16601562,16.47466278,0.00000000,0.00000000,90.00000000); //object(pltschlhnger01_lvs) (5)
	CreateDynamicObject(8253,1955.60253906,-2640.35156250,16.47466278,0.00000000,0.00000000,90.00000000); //object(pltschlhnger01_lvs) (6)
	CreateDynamicObject(16098,1819.81909180,-2415.67553711,17.54322433,0.00000000,0.00000000,290.00000000); //object(des_by_hangar_) (1)
	CreateDynamicObject(16098,1863.47290039,-2374.45581055,17.54322433,0.00000000,0.00000000,329.99511719); //object(des_by_hangar_) (2)
	CreateDynamicObject(3666,1886.88720703,-2355.13720703,13.06056023,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
	CreateDynamicObject(3666,1875.09216309,-2374.59912109,13.06837273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
	CreateDynamicObject(3666,1869.80688477,-2384.79125977,13.06837273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
	CreateDynamicObject(3666,1858.29858398,-2404.42114258,13.06837273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (4)
	CreateDynamicObject(3666,1850.33166504,-2415.80126953,13.06837273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (5)
	CreateDynamicObject(3666,1828.83874512,-2423.57910156,13.06837273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (6)
	CreateDynamicObject(3666,1818.27014160,-2427.60644531,13.06837273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (7)
	CreateDynamicObject(3666,1796.50805664,-2435.48120117,13.06837273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (8)
	CreateDynamicObject(3666,2043.31408691,-2627.79663086,13.06056023,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (9)
	CreateDynamicObject(3666,2019.24536133,-2627.75024414,13.06056023,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (10)
	CreateDynamicObject(3666,1993.70178223,-2627.43017578,13.16321278,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (11)
	CreateDynamicObject(3666,1968.40759277,-2627.10302734,13.06056023,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (12)
	CreateDynamicObject(3666,1943.75524902,-2626.78857422,13.06056023,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (13)
	CreateDynamicObject(3881,1718.35363770,-2328.82934570,14.39843750,0.00000000,0.00000000,270.00000000); //object(airsecbooth_sfse) (1)
	CreateDynamicObject(1569,1728.73181152,-2335.83837891,12.54687500,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,1731.69641113,-2335.80737305,12.54687500,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (2)
	CreateDynamicObject(16093,1859.86242676,-2544.27368164,12.42773056,0.00000000,0.00000000,270.00000000); //object(a51_gatecontrol) (1)
	CreateDynamicObject(2921,1627.08215332,-2291.95556641,91.59950256,0.00000000,0.00000000,110.00000000); //object(kmb_cam) (1)
	CreateDynamicObject(2921,1257.15979004,-2467.43896484,17.34985542,17.22940063,31.56668091,59.68591309); //object(kmb_cam) (2)
	CreateDynamicObject(2921,1737.29406738,-2326.15356445,16.73217010,0.00000000,0.00000000,260.00000000); //object(kmb_cam) (3)
	CreateDynamicObject(2921,1736.99145508,-2326.15356445,16.74042130,0.00000000,0.00000000,339.99694824); //object(kmb_cam) (4)
	CreateDynamicObject(2921,2042.16687012,-2627.80664062,18.79724884,0.00000000,0.00000000,359.99389648); //object(kmb_cam) (5)
	CreateDynamicObject(2921,2230.51269531,-2459.95239258,60.51279068,0.00000000,0.00000000,40.00000000); //object(kmb_cam) (6)
	CreateDynamicObject(2921,2017.90600586,-2224.03808594,23.05646515,0.00000000,0.00000000,340.00000000); //object(kmb_cam) (7)
	CreateDynamicObject(3390,1858.73657227,-2545.38183594,12.56054306,0.00000000,0.00000000,190.00000000); //object(a51_sdsk_ncol1_) (1)
	CreateDynamicObject(3390,1859.04895020,-2542.46142578,12.56054306,0.00000000,0.00000000,159.99755859); //object(a51_sdsk_ncol1_) (2)
	CreateDynamicObject(3388,1858.62609863,-2543.30493164,10.28555107,0.00000000,0.00000000,160.00000000); //object(a51_srack4_) (1)
	CreateDynamicObject(3388,1859.12768555,-2542.09985352,10.28555107,0.00000000,0.00000000,159.99938965); //object(a51_srack4_) (2)
	CreateDynamicObject(3389,1858.64648438,-2545.08569336,10.26055527,0.00000000,0.00000000,192.00000000); //object(a51_srack1_) (1)
	CreateDynamicObject(3389,1858.99121094,-2546.43994141,10.26055527,0.00000000,0.00000000,191.99707031); //object(a51_srack1_) (2)
	CreateDynamicObject(1671,1860.40380859,-2544.93408203,13.02075768,0.00000000,0.00000000,282.00000000); //object(swivelchair_a) (1)
	CreateDynamicObject(1671,1860.55261230,-2543.20654297,13.02075768,0.00000000,0.00000000,251.99707031); //object(swivelchair_a) (2)

	// -= Cyber Cafe =-
	CreateDynamicObject(12843,1092.60058594,-1380.33703613,12.73125076,0.00000000,0.00000000,0.00000000); //object(cos_liquorshop) (2)
	CreateDynamicObject(1726,1096.95837402,-1383.09436035,12.78779411,0.00000000,0.00000000,270.00000000); //object(mrk_seating2) (1)
	CreateDynamicObject(1726,1096.92858887,-1380.73193359,12.78779411,0.00000000,0.00000000,270.00000000); //object(mrk_seating2) (2)
	CreateDynamicObject(2172,1090.35119629,-1384.65258789,12.78125000,0.00000000,0.00000000,90.00000000); //object(med_office2_desk_1) (1)
	CreateDynamicObject(2172,1090.34045410,-1382.73339844,12.78125000,0.00000000,0.00000000,90.00000000); //object(med_office2_desk_1) (2)
	CreateDynamicObject(2172,1090.36071777,-1380.84411621,12.78125000,0.00000000,0.00000000,90.00000000); //object(med_office2_desk_1) (3)
	CreateDynamicObject(2172,1089.49560547,-1379.82983398,12.78125000,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_1) (4)
	CreateDynamicObject(2172,1089.47399902,-1381.73083496,12.78125000,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_1) (5)
	CreateDynamicObject(2172,1089.42370605,-1383.63366699,12.78125000,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_1) (6)
	CreateDynamicObject(2172,1086.50158691,-1380.82763672,12.78125000,0.00000000,0.00000000,90.00000000); //object(med_office2_desk_1) (7)
	CreateDynamicObject(2172,1086.48779297,-1382.73168945,12.78125000,0.00000000,0.00000000,90.00000000); //object(med_office2_desk_1) (8)
	CreateDynamicObject(2172,1086.48461914,-1384.66625977,12.78125000,0.00000000,0.00000000,90.00000000); //object(med_office2_desk_1) (9)
	CreateDynamicObject(2172,1085.59606934,-1379.82531738,12.78125000,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_1) (10)
	CreateDynamicObject(2172,1085.58581543,-1381.72473145,12.78125000,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_1) (11)
	CreateDynamicObject(2172,1085.57934570,-1383.67236328,12.78125000,0.00000000,0.00000000,270.00000000); //object(med_office2_desk_1) (12)
	CreateDynamicObject(2184,1093.88854980,-1375.98034668,12.78125000,0.00000000,0.00000000,290.00000000); //object(med_office6_desk_2) (1)
	CreateDynamicObject(2184,1095.13439941,-1378.61608887,12.78125000,0.00000000,0.00000000,332.99511719); //object(med_office6_desk_2) (2)
	CreateDynamicObject(1670,1094.36669922,-1377.04760742,13.58198738,0.25000000,0.00000000,0.00000000); //object(propcollecttable) (1)
	CreateDynamicObject(1671,1091.35693359,-1384.22192383,13.24800873,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (1)
	CreateDynamicObject(1671,1091.38269043,-1382.23608398,13.24146461,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (2)
	CreateDynamicObject(1671,1091.36523438,-1380.25476074,13.24146461,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (3)
	CreateDynamicObject(1671,1088.45996094,-1380.31213379,13.24146461,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (4)
	CreateDynamicObject(1671,1088.57910156,-1382.28027344,13.24146461,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (5)
	CreateDynamicObject(1671,1088.55273438,-1384.31127930,13.24146461,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (6)
	CreateDynamicObject(1671,1087.32678223,-1384.27050781,13.24146461,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (7)
	CreateDynamicObject(1671,1087.31115723,-1382.23364258,13.24146461,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (8)
	CreateDynamicObject(1671,1087.28894043,-1380.22583008,13.24146461,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (9)
	CreateDynamicObject(1671,1084.54614258,-1380.38732910,13.24146461,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (10)
	CreateDynamicObject(1671,1084.54235840,-1382.30236816,13.24146461,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (11)
	CreateDynamicObject(1671,1084.55908203,-1384.14379883,13.24146461,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (12)
	CreateDynamicObject(1792,1082.17517090,-1378.06445312,15.76606941,0.00000000,0.00000000,90.00000000); //object(swank_tv_1) (1)
	CreateDynamicObject(1808,1088.61364746,-1375.51696777,12.78125000,0.00000000,0.00000000,0.00000000); //object(cj_watercooler2) (1)
	CreateDynamicObject(1840,1094.06445312,-1376.15942383,13.55698776,0.00000000,0.00000000,40.00000000); //object(speaker_2) (1)
	CreateDynamicObject(1840,1096.71179199,-1379.25219727,13.55698776,0.00000000,0.00000000,69.99572754); //object(speaker_2) (2)
	CreateDynamicObject(2190,1094.51794434,-1377.59619141,13.55698776,0.00000000,0.00000000,130.00000000); //object(pc_1) (1)
	CreateDynamicObject(2190,1095.58618164,-1378.68627930,13.55698776,0.00000000,0.00000000,129.99572754); //object(pc_1) (2)
	CreateDynamicObject(2192,1096.02941895,-1387.50451660,15.53173923,0.00000000,0.00000000,230.00000000); //object(fan_1) (1)
	CreateDynamicObject(2202,1092.40173340,-1375.78710938,12.78125000,0.00000000,0.00000000,0.00000000); //object(photocopier_2) (1)
	CreateDynamicObject(2202,1091.26269531,-1375.77648926,12.78125000,0.00000000,0.00000000,0.00000000); //object(photocopier_2) (2)
	CreateDynamicObject(2229,1083.07067871,-1375.33703613,12.78282928,0.00000000,0.00000000,40.00000000); //object(swank_speaker) (1)
	CreateDynamicObject(2229,1097.50634766,-1380.47473145,12.78779411,0.00000000,0.00000000,269.99572754); //object(swank_speaker) (3)
	CreateDynamicObject(2631,1095.40209961,-1382.89257812,12.83412266,0.00000000,0.00000000,270.00000000); //object(gym_mat1) (1)
	CreateDynamicObject(3089,1083.41601562,-1375.33740234,14.08525276,0.00000000,0.00000000,0.00000000); //object(ab_casdorlok) (1)

	// -= Banco by Darius Wolk =-
	CreateDynamicObject(14789,1424.69030800,-1004.06616200,1643.01867700,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2774,1433.02624500,-1004.64392100,1635.81982400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2774,1429.29699700,-1004.61865200,1641.28112800,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2774,1440.95703100,-979.68206800,1640.29772900,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2774,1429.33715800,-979.54528800,1639.72338900,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2774,1449.31408700,-984.50500500,1648.02319300,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2774,1413.91406300,-984.51538100,1643.07348600,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1886,1448.51013200,-1003.64294400,1647.09399400,19.76700000,0.00000000,223.35840000); //
	CreateDynamicObject(1886,1414.70654300,-980.60443100,1647.06164600,19.76700000,0.00000000,43.35840000); //
	CreateDynamicObject(2774,1430.41687000,-999.01727300,1638.72241200,0.00000000,269.75920000,0.00000000); //
	CreateDynamicObject(2774,1408.14929200,-998.99682600,1638.72241200,0.00000000,269.75920000,180.00000000); //
	CreateDynamicObject(2774,1443.57727100,-986.63464400,1638.72338900,0.00000000,269.75920000,270.00000000); //
	CreateDynamicObject(2774,1443.60449200,-998.99816900,1647.79748500,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(11359,1414.35620100,-988.98535200,1639.79589800,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2774,1413.92736800,-986.01171900,1643.04699700,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2774,1413.76367200,-992.08538800,1643.67334000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(626,1427.55456500,-997.32299800,1640.76647900,0.00000000,0.00000000,135.00000000); //
	CreateDynamicObject(626,1427.48828100,-990.75250200,1640.84155300,0.00000000,0.00000000,135.00000000); //
	CreateDynamicObject(2773,1427.75671400,-995.78118900,1639.31018100,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2773,1427.69494600,-992.84143100,1639.31018100,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2773,1427.59692400,-989.12860100,1639.30151400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2773,1429.86315900,-982.92736800,1639.31018100,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(626,1427.66528300,-983.12860100,1640.84155300,0.00000000,0.00000000,236.25000000); //
	CreateDynamicObject(2773,1432.75585900,-982.99078400,1639.31018100,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(626,1434.64831500,-983.18890400,1640.84155300,0.00000000,0.00000000,236.25000000); //
	CreateDynamicObject(2773,1437.09143100,-983.05499300,1639.31018100,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2773,1440.04028300,-983.01275600,1639.31018100,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3462,1448.46691900,-993.01446500,1640.29797400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3462,1448.51208500,-982.99261500,1640.18151900,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(626,1441.63623000,-997.04772900,1640.74145500,0.00000000,0.00000000,146.25000000); //
	CreateDynamicObject(14632,1443.64868200,-995.93463100,1638.66772500,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(14632,1432.15637200,-1018.01525900,1639.98815900,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1514,1432.29492200,-998.85247800,1639.74011200,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1514,1438.35253900,-998.84674100,1639.81567400,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2773,1435.18383800,-996.75927700,1639.30151400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2773,1435.15246600,-993.93255600,1639.30151400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2773,1439.33862300,-996.65869100,1639.30151400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2773,1439.28894000,-994.00067100,1639.30151400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1723,1426.28015100,-994.86358600,1638.70727500,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1723,1426.24462900,-991.15045200,1638.73230000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1723,1422.27746600,-996.93505900,1638.68225100,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1723,1422.27929700,-993.21002200,1638.65722700,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2637,1424.23242200,-992.17358400,1638.83874500,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2637,1424.22851600,-995.70416300,1638.83874500,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(3657,1432.63330100,-987.73901400,1639.20239300,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3657,1432.63110400,-986.97723400,1639.20239300,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(3657,1438.11157200,-986.97753900,1639.20239300,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(3657,1438.08630400,-987.73071300,1639.22741700,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2961,1439.02832000,-999.82666000,1639.21130400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2961,1433.50561500,-999.82763700,1639.30139200,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2946,1414.35522500,-990.51348900,1638.75561500,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2946,1414.38024900,-987.39251700,1638.75500500,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2963,1424.16528300,-1004.81567400,1640.78112800,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2963,1426.80676300,-1004.83252000,1640.82690400,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1886,1414.73059100,-993.52301000,1646.90856900,17.18870000,0.00000000,67.50000000); //
	CreateDynamicObject(2773,1431.41455100,-996.84582500,1639.30151400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2773,1431.47338900,-994.01709000,1639.30151400,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(632,1434.73535200,-987.75750700,1639.13122600,0.00000000,0.00000000,213.75000000); //
	CreateDynamicObject(2942,1417.71362300,-980.47515900,1639.36352500,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1216,1443.28137200,-989.31127900,1639.38781700,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2942,1421.21716300,-980.44891400,1639.38549800,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2942,1424.63049300,-980.52667200,1639.37146000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1216,1443.27783200,-991.42486600,1639.42419400,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1216,1443.25122100,-987.27819800,1639.37622100,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1216,1443.25976600,-985.48498500,1639.37622100,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2773,1441.22863800,-993.04296900,1639.30151400,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2824,1424.29724100,-992.05493200,1639.24768100,0.00000000,0.00000000,78.75000000); //
	objetos=objetos+5447;
	printf("Se han cargado %d objetos",objetos);
	// - ID 0
	AddStaticVehicleEx(533,1.000,1.000,1.000,0,1,1,60000);

	// -= Primera Parte Aviones =-
	AddStaticVehicleEx(487,1982.53430176,-2188.95068359,13.81187534,180.00000000,5,1,15); //Maverick 1
	AddStaticVehicleEx(487,1994.05603027,-2188.94116211,13.81187534,180.00000000,5,1,15); //Maverick 2
	AddStaticVehicleEx(487,2005.60522461,-2188.93286133,13.81187534,180.00000000,5,1,15); //Maverick 3
	AddStaticVehicleEx(487,2017.11669922,-2188.92456055,13.81187534,180.00000000,53,1,15); //Maverick 4

	// -= Bicis en Renta =-
	AddStaticVehicleEx(462,1749.17871094,-2310.61791992,13.24271679,180.00000000,7,1,60000); //Mountain Bike 5
	AddStaticVehicleEx(462,1750.22973633,-2310.60766602,13.24271679,180.00000000,7,1,60000); //Mountain Bike 6
	AddStaticVehicleEx(462,1751.43066406,-2310.59570312,13.24271679,180.00000000,7,1,60000); //Mountain Bike 7
	AddStaticVehicleEx(462,1752.68188477,-2310.58349609,13.24271679,180.00000000,7,1,60000); //Mountain Bike 8
	AddStaticVehicleEx(462,1753.95788574,-2310.57055664,13.24271679,180.00000000,7,1,60000); //Mountain Bike 9
	AddStaticVehicleEx(462,1755.13317871,-2310.55883789,13.24271679,180.00000000,7,1,60000); //Mountain Bike 10
	AddStaticVehicleEx(462,1756.40905762,-2310.54614258,13.24271679,180.00000000,7,1,60000); //Mountain Bike 12
	AddStaticVehicleEx(462,1757.68444824,-2310.53344727,13.24271679,180.00000000,7,1,60000); //Mountain Bike 13
	AddStaticVehicleEx(462,1758.98486328,-2310.52050781,13.24271679,180.00000000,7,1,60000); //Mountain Bike 14
	AddStaticVehicleEx(462,1760.33569336,-2310.50732422,13.24271679,180.00000000,7,1,60000); //Mountain Bike 15
	AddStaticVehicleEx(462,1761.63623047,-2310.49414062,13.24271679,180.00000000,7,1,60000); //Mountain Bike 16
	AddStaticVehicleEx(462,1762.83691406,-2310.48242188,13.24271679,180.00000000,7,1,60000); //Mountain Bike 17
	AddStaticVehicleEx(462,1764.23828125,-2310.46875000,13.24271679,180.00000000,7,1,60000); //Mountain Bike 18

	// -= Coches Policiales =-
	AddStaticVehicleEx(596,1602.26318359,-1684.14343262,5.71062469,90.00000000,-1,1,60000); //Police Car (LSPD) 19
	AddStaticVehicleEx(596,1602.30895996,-1687.89074707,5.71062469,90.00000000,-1,1,60000); //Police Car (LSPD) 20
	AddStaticVehicleEx(596,1602.30334473,-1692.10290527,5.71062469,90.00000000,-1,1,60000); //Police Car (LSPD) 21
	AddStaticVehicleEx(596,1602.38171387,-1696.19775391,5.71062469,90.00000000,-1,1,60000); //Police Car (LSPD) 22
	AddStaticVehicleEx(596,1602.34704590,-1700.25524902,5.71062469,90.00000000,-1,1,60000); //Police Car (LSPD) 23
	AddStaticVehicleEx(596,1591.40710449,-1709.68872070,5.71062469,0.00000000,-1,1,60000); //Police Car (LSPD) 24
	AddStaticVehicleEx(596,1602.39746094,-1704.37011719,5.71062469,90.00000000,-1,1,60000); //Police Car (LSPD) 25
	AddStaticVehicleEx(596,1587.80236816,-1709.67700195,5.71062469,0.00000000,-1,1,60000); //Police Car (LSPD) 26
	AddStaticVehicleEx(596,1583.49169922,-1709.73791504,5.71062469,0.00000000,-1,1,60000); //Police Car (LSPD) 27
	AddStaticVehicleEx(598,1578.76135254,-1709.62084961,5.71062469,0.00000000,-1,1,60000); //Police Car (LSPD) 28
	AddStaticVehicleEx(598,1574.36828613,-1709.44714355,5.71062469,0.00000000,-1,1,60000); //Police Car (LSPD) 29
	AddStaticVehicleEx(598,1570.18957520,-1709.38769531,5.71062469,0.00000000,-1,1,60000); //Police Car (LSPD) 31
	AddStaticVehicleEx(598,1543.80505371,-1684.15808105,5.71062469,90.00000000,-1,1,60000); //Police Car (LSPD) 32
	AddStaticVehicleEx(598,1543.63281250,-1680.30322266,5.71062469,90.00000000,-1,1,60000); //Police Car (LSPD) 39
	AddStaticVehicleEx(601,1544.14758301,-1658.81469727,5.82083368,90.00000000,-1,-1,60000); //S.W.A.T. Van 41
	AddStaticVehicleEx(601,1543.86181641,-1655.13781738,5.82083368,90.00000000,-1,-1,60000); //S.W.A.T. Van 42
	AddStaticVehicleEx(601,1543.52722168,-1651.37646484,5.82083368,90.00000000,-1,-1,60000); //S.W.A.T. Van 43
	AddStaticVehicleEx(528,1538.39025879,-1645.98669434,6.07562494,180.00000000,-1,-1,60000); //FBI Truck 44
	AddStaticVehicleEx(528,1534.64916992,-1646.34252930,6.07562494,180.00000000,-1,-1,60000); //FBI Truck 45
	AddStaticVehicleEx(528,1530.82470703,-1646.46569824,6.07562494,180.00000000,-1,-1,60000); //FBI Truck 46
	AddStaticVehicleEx(528,1526.70983887,-1646.54223633,6.07562494,180.00000000,-1,-1,60000); //FBI Truck 47
	AddStaticVehicleEx(427,1543.46374512,-1706.13757324,6.13862514,229.99877930,-1,1,60000); //Enforcer 48
	AddStaticVehicleEx(427,1538.52856445,-1699.62744141,6.13862514,199.99877930,-1,1,60000); //Enforcer 49
	AddStaticVehicleEx(427,1529.48754883,-1688.09753418,6.13862514,269.99511719,-1,1,60000); //Enforcer 50
	AddStaticVehicleEx(427,1529.40246582,-1684.08483887,6.13862514,269.99450684,-1,1,60000); //Enforcer 51
	AddStaticVehicleEx(599,1543.50366211,-1675.99060059,6.27575159,90.00000000,-1,1,60000); //Police Ranger 52
	AddStaticVehicleEx(599,1543.52758789,-1671.96313477,6.27575159,90.00000000,-1,1,60000); //Police Ranger 53
	AddStaticVehicleEx(599,1543.29162598,-1667.75183105,6.27575159,90.00000000,-1,1,60000); //Police Ranger 54
	AddStaticVehicleEx(599,1543.18750000,-1663.38269043,6.27575159,90.00000000,-1,1,60000); //Police Ranger 55
	AddStaticVehicleEx(523,1557.04553223,-1695.13342285,5.55736876,180.00000000,-1,-1,60000); //HPV1000 56
	AddStaticVehicleEx(523,1558.41894531,-1695.31933594,5.55736876,180.00000000,-1,-1,60000); //HPV1000 57
	AddStaticVehicleEx(523,1559.46679688,-1695.34326172,5.55736876,180.00000000,-1,-1,60000); //HPV1000 58
	AddStaticVehicleEx(523,1560.53381348,-1695.28649902,5.55736876,180.00000000,-1,-1,60000); //HPV1000 59
	AddStaticVehicleEx(523,1561.85864258,-1695.20788574,5.55100250,180.00000000,-1,-1,60000); //HPV1000 60
	AddStaticVehicleEx(523,1563.14648438,-1695.30883789,5.55100250,180.00000000,-1,-1,60000); //HPV1000 61
	AddStaticVehicleEx(523,1564.39172363,-1695.36816406,5.55100250,180.00000000,-1,-1,60000); //HPV1000 62
	AddStaticVehicleEx(497,1565.10351562,-1642.75134277,28.66711426,90.00000000,-1,1,60000); //Police Maverick 63
	AddStaticVehicleEx(497,1565.17675781,-1655.07226562,28.66060638,90.00000000,-1,1,60000); //Police Maverick 64
	AddStaticVehicleEx(525,1585.86059570,-1672.08312988,5.88193226,270.00000000,-1,-1,60000); //Tow Truck 65
	AddStaticVehicleEx(525,1585.71484375,-1667.93457031,5.88203907,270.00000000,-1,-1,60000); //Tow Truck 66
	AddStaticVehicleEx(609,1566.01123047,-1709.63977051,6.10062504,0.00000000,53,53, 60000); //Boxville 67
	AddStaticVehicleEx(609,1562.89599609,-1709.81384277,6.10062504,0.00000000,53,53, 60000); //Boxville 68
	AddStaticVehicleEx(609,1559.27880859,-1709.69763184,6.10062504,0.00000000,53,53, 60000); //Boxville 69

	// -= Departamento de Medicina de Los Santos =-
	AddStaticVehicleEx(497,1154.79724121,-1297.14355469,31.77510452,0.00000000,1,1, 60000); //Police Maverick 70
	AddStaticVehicleEx(497,1166.67480469,-1297.16333008,31.75369072,0.00000000,1,1, 60000); //Police Maverick 71
	AddStaticVehicleEx(497,1155.07031250,-1314.84667969,31.77027512,180.00000000,1,1, 60000); //Police Maverick 72
	AddStaticVehicleEx(497,1166.76879883,-1314.75256348,31.75027657,180.00000000,1,1, 60000); //Police Maverick 73
	AddStaticVehicleEx(416,1095.51562500,-1327.80957031,13.64797211,0.00000000,1,1, 60000); //Ambulance 74
	AddStaticVehicleEx(416,1143.92736816,-1338.33752441,13.89883232,0.00000000,1,1, 60000); //Ambulance 75
	AddStaticVehicleEx(416,1134.02392578,-1338.21179199,14.04172134,0.00000000,1,1, 60000); //Ambulance 76
	AddStaticVehicleEx(416,1099.49768066,-1327.76525879,13.64383316,0.00000000,1,1, 60000); //Ambulance 77
	AddStaticVehicleEx(416,1108.75549316,-1327.85437012,13.64422798,0.00000000,1,1, 60000); //Ambulance 78
	AddStaticVehicleEx(416,1112.90393066,-1327.89440918,13.64088249,0.00000000,1,1, 60000); //Ambulance 79
	AddStaticVehicleEx(416,1122.18774414,-1327.84338379,13.64514637,0.00000000,1,1, 60000); //Ambulance 80
	AddStaticVehicleEx(416,1125.67419434,-1327.91601562,13.63123608,0.00000000,1,1, 60000); //Ambulance 81
	AddStaticVehicleEx(416,1138.43518066,-1338.45288086,13.99348259,0.00000000,1,1, 60000); //Ambulance 82

	// -= Departamento de Trnaporte Publico =-
	AddStaticVehicleEx(420,1787.02478027,-1897.17041016,13.24446201,89.99951172,6,1, 60000); //Taxi 83
	AddStaticVehicleEx(420,1787.04211426,-1892.20556641,13.24447441,89.99951172,6,1, 60000); //Taxi 84
	AddStaticVehicleEx(420,1786.87512207,-1887.28747559,13.24435234,89.99951172,6,1, 60000); //Taxi 85
	AddStaticVehicleEx(420,1777.90527344,-1902.79663086,13.23778057,269.99951172,6,1, 60000); //Taxi 86
	AddStaticVehicleEx(420,1777.91027832,-1897.42053223,13.23778439,269.99450684,6,1, 60000); //Taxi 87
	AddStaticVehicleEx(420,1778.26721191,-1892.76440430,13.23804569,269.99450684,6,1, 60000); //Taxi 88
	AddStaticVehicleEx(420,1778.20654297,-1887.62207031,13.23834038,269.99450684,6,1, 60000); //Taxi 89
	AddStaticVehicleEx(420,1787.07324219,-1902.30273438,13.24449825,91.99951172,6,1, 60000); //Taxi 90
	AddStaticVehicleEx(420,1784.19750977,-1932.68835449,13.23637009,359.99951172,6,1, 60000); //Taxi 91
	AddStaticVehicleEx(420,1787.40087891,-1932.62329102,13.23640156,359.99450684,6,1, 60000); //Taxi 92
	AddStaticVehicleEx(420,1791.06262207,-1932.49304199,13.23646545,359.99450684,6,1, 60000); //Taxi 93
	AddStaticVehicleEx(420,1794.65991211,-1932.36267090,13.23652840,359.99450684,6,1, 60000); //Taxi 94
	AddStaticVehicleEx(420,1798.32116699,-1932.42785645,13.23649693,359.99450684,6,1, 60000); //Taxi 95
	AddStaticVehicleEx(420,1780.34045410,-1932.68835449,13.23637009,359.99450684,6,1, 60000); //Taxi 96

	// -= Presidencia de Los Santos =-
	AddStaticVehicleEx(579,1407.12927246,-1777.13720703,13.64551258,90.00000000,-1,1, 60000); //Huntley 97
	AddStaticVehicleEx(579,1407.14404297,-1780.46838379,13.64551258,90.00000000,-1,1, 60000); //Huntley 98
	AddStaticVehicleEx(580,1407.57727051,-1784.16552734,13.45439911,90.00000000,-1,1, 60000); //Stafford 99
	AddStaticVehicleEx(580,1407.56823730,-1787.60351562,13.45439911,90.00000000,-1,1, 60000); //Stafford 100
	AddStaticVehicleEx(409,1406.10021973,-1795.41674805,13.47187519,90.00000000,-1,-1, 60000); //Stretch 101
	AddStaticVehicleEx(409,1406.16601562,-1791.79296875,13.47187519,90.00000000,-1,-1, 60000); //Stretch 102
	AddStaticVehicleEx(487,1426.46557617,-1783.81616211,36.08250427,90.00000000,-1,-1, 60000); //Maverick 104
	AddStaticVehicleEx(487,1426.40698242,-1796.61865234,36.08250427,90.00000000,-1,-1, 60000); //Maverick 105

	// -= Centro de Noticias de San Andreas =-
	AddStaticVehicleEx(582,769.55847168,-1346.05236816,13.67760563,90.00000000,-1,1, 60000); //Newsvan 106
	AddStaticVehicleEx(582,769.55615234,-1350.80847168,13.68541813,90.00000000,-1,1, 60000); //Newsvan 107
	AddStaticVehicleEx(582,769.68579102,-1355.42700195,13.68557644,90.00000000,-1,1, 60000); //Newsvan 108
	AddStaticVehicleEx(582,769.54345703,-1359.71276855,13.68540192,90.00000000,-1,1, 60000); //Newsvan 109
	AddStaticVehicleEx(582,769.47906494,-1365.73242188,13.67750835,90.00000000,-1,1, 60000); //Newsvan 110
	AddStaticVehicleEx(582,769.45623779,-1369.95910645,13.67748165,90.00000000,-1,1, 60000); //Newsvan 111
	AddStaticVehicleEx(582,769.36584473,-1374.18969727,13.73223686,90.00000000,-1,1, 60000); //Newsvan 112
	AddStaticVehicleEx(582,769.34790039,-1378.60559082,13.78371048,90.00000000,-1,1, 60000); //Newsvan 113
	AddStaticVehicleEx(488,738.90844727,-1379.78747559,29.19502640,270.00000000,-1,1, 60000); //News Chopper 114
	AddStaticVehicleEx(488,746.10992432,-1372.48034668,29.19020462,270.00000000,-1,1, 60000); //News Chopper 115
	AddStaticVehicleEx(488,738.68603516,-1363.73681641,29.19502640,270.00000000,-1,1, 60000); //News Chopper 116

	// -= Familia Corleone =-
	AddStaticVehicleEx(560,1250.02819824,-820.23254395,83.94560242,177.99975586,-1,1, 60000); //Sultan 117
	AddStaticVehicleEx(560,1246.32434082,-829.39239502,83.94560242,141.99487305,-1,1, 60000); //Sultan 118
	AddStaticVehicleEx(560,1238.31274414,-835.49975586,83.95272827,111.99279785,-1,1, 60000); //Sultan 119
	AddStaticVehicleEx(560,1227.73803711,-836.38464355,84.05794525,79.98913574,-1,1, 60000); //Sultan 120
	AddStaticVehicleEx(409,1241.81066895,-806.80297852,84.06562805,180.00000000,-1,33, 60000); //Stretch 121
	AddStaticVehicleEx(409,1245.45483398,-806.94274902,84.06562805,180.00000000,-1,33, 60000); //Stretch 122
	AddStaticVehicleEx(579,1253.65539551,-807.27697754,84.23926544,180.00000000,-1,1, 60000); //Huntley 123
	AddStaticVehicleEx(579,1249.97070312,-807.14453125,84.23926544,180.00000000,-1,1, 60000); //Huntley 124
	AddStaticVehicleEx(487,1298.14587402,-788.91619873,96.72593689,0.00000000,-1,1, 60000); //Maverick 125
	AddStaticVehicleEx(487,1286.13037109,-788.93133545,96.72593689,0.00000000,-1,1, 60000); //Maverick 126

	// -= Mecanicos =-
	AddStaticVehicleEx(525,2428.97412109,-2112.42968750,13.53687477,270.00000000,3,87, 60000); //Tow Truck 127
	AddStaticVehicleEx(525,2428.94140625,-2118.96289062,13.53687477,270.00000000,3,87, 60000); //Tow Truck 128
	AddStaticVehicleEx(525,2442.64746094,-2119.08447266,13.53687477,90.00000000,3,87, 60000); //Tow Truck 129
	AddStaticVehicleEx(525,2442.68286133,-2115.83178711,13.53687477,90.00000000,3,87, 60000); //Tow Truck 130
	AddStaticVehicleEx(525,2442.62084961,-2112.68481445,13.53687477,90.00000000,3,87, 60000); //Tow Truck 131
	AddStaticVehicleEx(525,2442.58813477,-2109.02587891,13.54299164,90.00000000,3,87, 60000); //Tow Truck 132
	AddStaticVehicleEx(525,2442.58984375,-2105.63867188,13.53687477,90.00000000,3,87, 60000); //Tow Truck 133
	AddStaticVehicleEx(562,2517.28735352,-2118.62280273,13.30042458,48.00000000,0,1, 60000); //Elegy (Exposicion)  134
	AddStaticVehicleEx(534,2510.52343750,-2118.62182617,13.36975193,306.00000000,0,1, 60000); //Remington(Exposicion) 135
	AddStaticVehicleEx(451,2528.96826172,-2099.33520508,13.31124687,72.00000000,3,1, 60000); //Turismo(Exposicion) 136
	AddStaticVehicleEx(541,2529.12158203,-2102.81738281,13.24687481,95.99975586,-1,1, 60000); //Bullet(Exposicion) 137

	// -= Departamento de Inteligencia y Inveson =-
	AddStaticVehicleEx(405,2513.23632812,2363.74780273,4.21789932,90.00000000,-1,1, 60000); //Sentinel 138
	AddStaticVehicleEx(405,2513.22070312,2367.97216797,4.21789932,90.00000000,-1,1, 60000); //Sentinel 139
	AddStaticVehicleEx(405,2513.44384766,2372.48950195,4.21093750,90.00000000,-1,1, 60000); //Sentinel 140
	AddStaticVehicleEx(405,2513.30957031,2376.99365234,4.21093750,90.00000000,-1,1, 60000); //Sentinel 14
	AddStaticVehicleEx(405,2513.24975586,2381.67431641,4.21093750,90.00000000,-1,1, 60000); //Sentinel 142
	AddStaticVehicleEx(602,2526.37084961,2363.61181641,4.11093760,270.00000000,-1,1, 60000); //Alpha 143
	AddStaticVehicleEx(602,2526.38476562,2368.20581055,4.11093760,269.99951172,-1,1, 60000); //Alpha 144
	AddStaticVehicleEx(602,2526.47045898,2372.57104492,4.11093760,269.99951172,-1,1, 60000); //Alpha 145
	AddStaticVehicleEx(602,2526.35937500,2377.04492188,4.11093760,269.99951172,-1,1, 60000); //Alpha 146
	AddStaticVehicleEx(602,2526.23315430,2381.44018555,4.11093760,269.99450684,-1,1, 60000); //Alpha 147

	// -= Universidad de Los Santos =-
	AddStaticVehicleEx(405,1760.72900391,-1680.17297363,13.55836582,90.00000000,55,1,60000); //Sentinel 148
	AddStaticVehicleEx(405,1760.64587402,-1675.69274902,13.55824375,90.00000000,55,1,60000); //Sentinel 149
	AddStaticVehicleEx(405,1760.54016113,-1671.15588379,13.55808926,90.00000000,55,1,60000); //Sentinel 150
	AddStaticVehicleEx(405,1760.55468750,-1666.61914062,13.55811024,90.00000000,55,1,60000); //Sentinel 151
	AddStaticVehicleEx(405,1760.49414062,-1662.25976562,13.55802250,90.00000000,55,1,60000); //Sentinel 144

	// -= Autos en Renta =-
	AddStaticVehicleEx(587,1671.63171387,-1898.01647949,13.35687542,0.00000000,2,1,60000); //Euros 145
	AddStaticVehicleEx(587,1667.40698242,-1898.11010742,13.35687542,0.00000000,2,1,60000); //Euros 146
	AddStaticVehicleEx(587,1662.50000000,-1898.23193359,13.35687542,0.00000000,2,1,60000); //Euros 147
	AddStaticVehicleEx(587,1657.58740234,-1898.30993652,13.36210442,0.00000000,2,1,60000); //Euros 148
	AddStaticVehicleEx(587,1653.30908203,-1898.17883301,13.36210442,0.00000000,2,1,60000); //Euros 149
	AddStaticVehicleEx(587,1649.36596680,-1898.23925781,13.36210442,0.00000000,2,1,60000); //Euros 150
	AddStaticVehicleEx(587,1645.65808105,-1898.24389648,13.36210442,0.00000000,2,1,60000); //Euros 151
	AddStaticVehicleEx(587,1641.49475098,-1898.27026367,13.36262798,0.00000000,2,1,60000); //Euros 152
	AddStaticVehicleEx(587,1672.07751465,-1887.76965332,13.35687542,0.00000000,2,1,60000); //Euros 153
	AddStaticVehicleEx(587,1667.29638672,-1887.71105957,13.35687542,0.00000000,2,1,60000); //Euros 154
	AddStaticVehicleEx(587,1662.87255859,-1887.75708008,13.35687542,0.00000000,2,1,60000); //Euros 155
	AddStaticVehicleEx(587,1658.76831055,-1887.67944336,13.36210442,0.00000000,2,1,60000); //Euros	156
	AddStaticVehicleEx(587,1650.88891602,-1887.59863281,13.36554623,0.00000000,2,1,60000); //Euros 157
	AddStaticVehicleEx(587,1646.99792480,-1887.73144531,13.36459827,0.00000000,2,1,60000); //Euros 158
	AddStaticVehicleEx(587,1637.87817383,-1898.34179688,13.36347580,0.00000000,2,1,60000); //Euros 159
	AddStaticVehicleEx(587,1654.75622559,-1887.53759766,13.36463165,0.00000000,2,1,60000); //Euros 160

	// -= Yakuza =-
	AddStaticVehicleEx(507,288.33773804,-1172.78271484,80.85989380,313.99475098,1,1,60000); //Elegant 161
	AddStaticVehicleEx(487,284.87777710,-1195.37927246,80.68185425,318.00000000,1,1,60000); //Maverick 162
	AddStaticVehicleEx(579,303.04812622,-1159.20104980,81.00853729,134.00000000,1,1,60000); //Huntley 163
	AddStaticVehicleEx(560,299.98825073,-1186.31860352,80.71903992,312.50000000,1,1,60000); //Sultan 164
	AddStaticVehicleEx(409,287.83224487,-1156.94506836,80.83489990,226.00000000,1,1,60000); //Stretch 165
	AddStaticVehicleEx(409,283.39453125,-1161.05371094,80.83906555,225.99975586,1,1,60000); //Stretch 166
	AddStaticVehicleEx(560,297.26660156,-1183.38146973,80.71903992,312.49511719,1,1,60000); //Sultan 167
	AddStaticVehicleEx(560,294.30834961,-1180.17016602,80.71903992,312.49511719,1,1,60000); //Sultan 168
	AddStaticVehicleEx(560,291.25100708,-1176.92822266,80.71903992,312.49511719,1,1,60000); //Sultan 169
	AddStaticVehicleEx(507,284.95870972,-1169.22314453,80.85989380,313.99475098,1,1,60000); //Elegant 170
	AddStaticVehicleEx(579,306.33236694,-1162.47912598,81.00853729,133.99475098,1,1,60000); //Huntley 171
	AddStaticVehicleEx(487,276.55667114,-1186.58569336,80.31628418,307.99926758,1,1,60000); //Maverick 172

	// -= Traficantes =-
	AddStaticVehicleEx(482,2606.23852539,-1388.05114746,35.09016037,0.00000000,-1,1,60000); //Burrito 173
	AddStaticVehicleEx(482,2606.26928711,-1379.76794434,35.08251190,0.00000000,-1,1,60000); //Burrito 174
	AddStaticVehicleEx(482,2606.27490234,-1372.04187012,35.08185196,0.00000000,-1,1,60000); //Burrito 175
	AddStaticVehicleEx(482,2599.52124023,-1372.17248535,35.89731979,0.00000000,-1,1,60000); //Burrito 176
	AddStaticVehicleEx(482,2599.56176758,-1380.02307129,36.08679962,0.00000000,-1,1,60000); //Burrito 177
	AddStaticVehicleEx(482,2599.52075195,-1388.09448242,36.29644394,0.00000000,-1,1,60000); //Burrito 178
	AddStaticVehicleEx(482,2599.47216797,-1364.23144531,35.88306046,0.00000000,-1,1,60000); //Burrito 179
	AddStaticVehicleEx(482,2606.18872070,-1363.90991211,35.09200287,0.00000000,-1,1,60000); //Burrito 180

	// -= Departamento de Propiedades =-
	AddStaticVehicleEx(445,1816.04089355,-1565.70239258,13.53740597,235.99438477,35,1,60000); //Admiral 181
	AddStaticVehicleEx(445,1817.82263184,-1559.53198242,13.53687477,255.99243164,35,1,60000); //Admiral 182
	AddStaticVehicleEx(445,1818.58776855,-1556.76245117,13.53687477,255.99243164,35,1,60000); //Admiral 183
	AddStaticVehicleEx(445,1813.49096680,-1567.83056641,13.49560165,215.99243164,35,1,60000); //Admiral 184
	AddStaticVehicleEx(445,1816.90136719,-1562.56347656,13.53780460,255.99243164,35,1,60000); //Admiral 185
	AddStaticVehicleEx(445,1810.88122559,-1570.22985840,13.46968842,219.99243164,35,1,60000); //Admiral 186
	AddStaticVehicleEx(445,1808.34509277,-1572.14514160,13.45755863,219.99023438,35,1,60000); //Admiral 187

	// -= Departamento de Bomberos =-
	AddStaticVehicleEx(563,1266.53332520,-1628.08532715,28.26074982,0.00000000,1,1,60000); //Raindance 188
	AddStaticVehicleEx(407,1219.03906250,-1645.95080566,12.16687489,180.00000000,3,1,60000); //Firetruck 189
	AddStaticVehicleEx(407,1223.67724609,-1645.74987793,12.16687489,180.00000000,3,1,60000); //Firetruck 190
	AddStaticVehicleEx(407,1227.87182617,-1645.92321777,12.16687489,180.00000000,3,1,60000); //Firetruck 191
	AddStaticVehicleEx(407,1228.57971191,-1672.17761230,12.16687489,0.00000000,3,1,60000); //Firetruck 192
	AddStaticVehicleEx(407,1224.01623535,-1672.05236816,12.16687489,0.00000000,3,1,60000); //Firetruck 193
	AddStaticVehicleEx(407,1219.20971680,-1672.14526367,12.16687489,0.00000000,3,1,60000); //Firetruck 194
	AddStaticVehicleEx(407,1214.76098633,-1672.02075195,12.16687489,0.00000000,3,1,60000); //Firetruck 195
	AddStaticVehicleEx(407,1238.85070801,-1670.67492676,12.16687489,0.00000000,3,1,60000); //Firetruck 196
	AddStaticVehicleEx(407,1234.42431641,-1670.63842773,12.16687489,0.00000000,3,1,60000); //Firetruck 197
	AddStaticVehicleEx(563,1276.85644531,-1627.95019531,28.26074982,0.00000000,1,1,60000); //Raindance 198

	// -= Buses de Departamento de Transporte Publico =-
	AddStaticVehicleEx(437,1734.34069824,-1857.46350098,13.66406250,270.00000000,-1,-1,60000); //Coach 199
	AddStaticVehicleEx(437,1734.27709961,-1852.70690918,13.66406250,270.00000000,-1,-1,60000); //Coach 200
	AddStaticVehicleEx(437,1753.34729004,-1857.35803223,13.66406250,270.00000000,-1,-1,60000); //Coach 201
	AddStaticVehicleEx(437,1753.26501465,-1852.86474609,13.66406250,270.00000000,-1,-1,60000); //Coach 202
	AddStaticVehicleEx(437,1770.87109375,-1857.23779297,13.66406250,270.00000000,-1,-1,60000); //Coach 203
	AddStaticVehicleEx(437,1770.74597168,-1852.94665527,13.66406250,270.00000000,-1,-1,60000); //Coach 204
	AddStaticVehicleEx(437,1789.16748047,-1857.35375977,13.66406250,270.00000000,-1,-1,60000); //Coach 205
	AddStaticVehicleEx(437,1789.04882812,-1852.74792480,13.66406250,270.00000000,-1,-1,60000); //Coach 206
	AddStaticVehicleEx(437,1805.99890137,-1857.24523926,13.66406250,270.00000000,-1,-1,60000); //Coach 207
	AddStaticVehicleEx(437,1805.75476074,-1852.25378418,13.66406250,270.00000000,-1,-1,60000); //Coach 208

	// -= Aereopuerto Internacional de LS =-
	AddStaticVehicleEx(487,2028.56372070,-2188.91577148,13.81187534,180.00000000,53,1,15); //Maverick 209
	AddStaticVehicleEx(487,2039.95129395,-2188.90527344,13.81901264,180.00000000,53,1,15); //Maverick 210
	AddStaticVehicleEx(519,1955.23742676,-2639.25952148,14.54694748,0.00000000,-1,-1,15); //Shamal 211
	AddStaticVehicleEx(519,1981.05859375,-2633.99340820,14.54694748,0.00000000,-1,-1,15); //Shamal 212
	AddStaticVehicleEx(519,2005.93115234,-2633.84423828,14.54694748,0.00000000,-1,-1,15); //Shamal 213
	AddStaticVehicleEx(519,2031.57434082,-2635.45971680,14.54694748,0.00000000,-1,-1,15); //Shamal 114
	AddStaticVehicleEx(593,1875.98144531,-2362.30175781,14.09705734,240.00000000,-1,-1,15); //Dodo 215
	AddStaticVehicleEx(593,1858.99621582,-2391.43872070,14.10486984,239.99633789,-1,-1,15); //Dodo 216
	AddStaticVehicleEx(593,1837.47863770,-2413.83715820,14.10486984,199.99633789,-1,-1,15); //Dodo 217
	AddStaticVehicleEx(593,1805.25341797,-2426.22509766,14.10486984,199.99511719,-1,-1,15); //Dodo 219
	AddStaticVehicleEx(511,1884.78149414,-2274.72924805,15.06277275,240.00000000,-1,1,15); //Beagle 220
	AddStaticVehicleEx(511,1881.24511719,-2295.35253906,15.06277275,279.99755859,-1,1,15); //Beagle 221
	AddStaticVehicleEx(511,1912.01965332,-2248.84643555,15.06277275,179.99633789,-1,1,15); //Beagle 222
	AddStaticVehicleEx(511,1934.85473633,-2249.05639648,15.06277275,179.99450684,-1,1,15); //Beagle 223
	AddStaticVehicleEx(485,1952.60168457,-2192.26098633,13.24687481,180.00000000,-1,-1,15); //Baggage 224
	AddStaticVehicleEx(485,1954.75830078,-2192.40356445,13.24687481,180.00000000,-1,-1,15); //Baggage 225
	AddStaticVehicleEx(485,1950.30493164,-2192.49047852,13.25418568,190.00000000,-1,-1,15); //Baggage 226
	AddStaticVehicleEx(485,1947.97509766,-2193.56689453,13.24687481,209.99755859,-1,-1,15); //Baggage 227
	AddStaticVehicleEx(485,1946.24426270,-2195.93945312,13.24687481,249.99267578,-1,-1,15); //Baggage 228
	AddStaticVehicleEx(485,1945.92407227,-2198.61523438,13.24687481,269.98840332,-1,-1,15); //Baggage 229
	AddStaticVehicleEx(485,1946.10778809,-2201.25927734,13.24687481,269.98352051,-1,-1,15); //Baggage 230
	AddStaticVehicleEx(485,1946.12426758,-2204.03198242,13.24687481,269.98352051,-1,-1,15); //Baggage 231
	AddStaticVehicleEx(426,1713.86962891,-2314.60083008,13.20281219,90.00000000,102,1,15); //Premier 232
	AddStaticVehicleEx(426,1705.14929199,-2314.58398438,13.20281219,90.00000000,102,1,15); //Premier 233
	AddStaticVehicleEx(426,1696.86096191,-2314.53051758,13.20281219,90.00000000,102,1,15); //Premier 234
	AddStaticVehicleEx(426,1688.12536621,-2314.45336914,13.20281219,90.00000000,102,1,15); //Premier 235
	AddStaticVehicleEx(426,1680.69238281,-2314.31860352,13.20281219,90.00000000,102,1,15); //Premier 236
	AddStaticVehicleEx(426,1672.71435547,-2314.28344727,13.20385361,90.00000000,102,1,15); //Premier 238
	AddStaticVehicleEx(426,1737.46240234,-2305.12524414,13.19551849,0.00000000,102,1,15); //Premier 239
	AddStaticVehicleEx(426,1737.43798828,-2296.68774414,13.19551849,0.00000000,102,1,15); //Premier 240
	AddStaticVehicleEx(426,1737.22497559,-2287.21264648,13.19551849,0.00000000,102,1,15); //Premier 241
	AddStaticVehicleEx(426,1737.19763184,-2278.21118164,13.19551849,0.00000000,102,1,15); //Premier 242
	AddStaticVehicleEx(426,1737.00988770,-2266.71215820,13.19551849,0.00000000,102,1,15); //Premier 243
	AddStaticVehicleEx(426,1736.95471191,-2257.92456055,13.19101143,0.00000000,102,1,15); //Premier 244
	AddStaticVehicleEx(592,2115.01416016,-2447.97338867,15.12187767,160.00000000,1,1,15); //Andromada 245
	AddStaticVehicleEx(592,2077.16503906,-2446.16333008,15.12187767,199.99938965,1,1,15); //Andromada 246
	AddStaticVehicleEx(592,1572.91845703,-2454.91284180,15.12187767,199.99511719,1,1,15); //Andromada 247
	AddStaticVehicleEx(592,1644.18957520,-2454.02661133,15.12187767,199.99511719,1,1,15); //Andromada 248
	AddStaticVehicleEx(592,1480.16894531,-2446.43579102,15.12187767,199.99511719,1,1,15); //Andromada 249
	AddStaticVehicleEx(592,1423.67285156,-2448.14941406,15.12187767,199.99511719,1,1,15); //Andromada 250
	for(new h = VV_DESDE; h < sizeof(CarInfo); h++)
	{
		CreateVehicle(CarInfo[h][cModel],CarInfo[h][cLocationx],CarInfo[h][cLocationy],CarInfo[h][cLocationz]+1.0,CarInfo[h][cAngle],CarInfo[h][cColorOne],CarInfo[h][cColorTwo],60000);//60000
		AddVehicleComponent(h,CarInfo[h][cNitro]);
		AddVehicleComponent(h,CarInfo[h][cLlantas]);
		AddVehicleComponent(h,CarInfo[h][cAleron]);
		AddVehicleComponent(h,CarInfo[h][cParachoDelan]);
		AddVehicleComponent(h,CarInfo[h][cParachoTrase]);
		AddVehicleComponent(h,CarInfo[h][cHidraulica]);
		AddVehicleComponent(h,CarInfo[h][cTecho]);
		AddVehicleComponent(h,CarInfo[h][cEscape]);
		AddVehicleComponent(h,CarInfo[h][cParachoDesco]);
		AddVehicleComponent(h,CarInfo[h][cEmbellecedor]);
		AddVehicleComponent(h,CarInfo[h][cEmbellecedor2]);
		ChangeVehiclePaintjob(h, CarInfo[h][cPaintJob]);
		GetVehicleParamsEx(h,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(h,engine,0,0,CarInfo[h][cLock],0,0,0);
		SetVehicleParamsEx(h,engine,0,0,CarInfo[h][cLock],0,0,0);
	}
	for(new h = 0; h < sizeof(CarInfo); h++)
	{
        new DB:archivo = db_open("matriculas.db");
	 	new DBResult:qresult;
	 	new query[256];
	 	new mrango[128];
	 	format(query, sizeof(query), "SELECT matricula FROM matriculas WHERE id='%d'", h);
		qresult = db_query(archivo, query);
		db_get_field(qresult, 0, mrango, sizeof(mrango));
		db_free_result(qresult);
		if(strlen(mrango))
		{
	        CarMatricula[h] = strval(mrango);
	        db_close(archivo);
		}
		else
		{
			CarMatricula[h] = matriculainit;
			matriculainit++;
			if(EsUnVehiculoVenta(h))
		    {
                format(query, sizeof(query), "INSERT INTO matriculas (id, matricula, modelo) VALUES (%d, %d, '%s')", h, CarMatricula[h], VehicleName[GetVehicleModel(h)-400]);
				qresult = db_query(archivo, query);
				db_free_result(qresult);
		    }
		}
		SetVehicleToRespawn(h);
		db_close(archivo);
	}
	autos=autos+748;
	printf("Se han cargado %d coches",autos);
	return 0;
}


public OnPlayerStateChange(playerid,newstate,oldstate)
{
	new vehiculo = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	new string[256];
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    if(TransportDuty[playerid] > 0)
		{
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* Has salido del vehiculo, y has perdido la tu estado", TransportMoney[playerid]);
			SendClientMessage(playerid, AZULCLARO, string);
			GivePlayerMoney(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
				format(string, sizeof(string), "* El costo del viaje ha sido $%d", TransportMoney[playerid]);
				SendClientMessage(playerid, AZULCLARO, string);
				format(string, sizeof(string), "* Ha salido el pasajero del vehiculo, has recaudado $%d", TransportMoney[playerid]);
				SendClientMessage(TransportDriver[playerid], AZULCLARO, string);
				GivePlayerMoney(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    new vehicleid = GetPlayerVehicleID(playerid);
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
	            {
	                if(GetPlayerMoney(playerid) < TransportValue[i])
	                {
	                    format(string, sizeof(string), "* Necesitas tener $%d para pagar el viaje", TransportValue[i]);
						SendClientMessage(playerid, GRIS, string);
						RemovePlayerFromVehicle(playerid);
	                }
	                else
	                {
	                    if(TransportDuty[i] == 1)
	                    {
	                        format(string, sizeof(string), "* El viaje ha empezado, la tarifa es de $%d", TransportValue[i]);
							SendClientMessage(i, AZULCLARO, string);
							format(string, sizeof(string), "* El pasajero $%s ha entrado al vehiculo", NombreEx(playerid));
							SendClientMessage(i, AZULCLARO, string);
							TransportTime[i] = 1;
	                    	TransportTime[i] = 1;
	                    	TransportCost[i] = TransportValue[i];
	                    	TransportCost[i] = TransportValue[i];
	                    	TransportDriver[i] = 1;
	                    }
	                    else if(TransportDuty[i] == 2)
	                    {
	                        format(string, sizeof(string), "* El viaje ha empezado, la tarifa es de $%d", TransportValue[i]);
							SendClientMessage(playerid, GRIS, string);
							format(string, sizeof(string), "* El pasajero $%s ha entrado al vehiculo", NombreEx(playerid));
							SendClientMessage(i, AZULCLARO, string);
	                    }
						GivePlayerMoney(playerid, - TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
	                }
	            }
	        }
	    }
	}
    if(newstate == PLAYER_STATE_DRIVER)
    {
        if(engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET)
        {
			if(Informacion[playerid][LCoche] == 0)
			{
			    SendClientMessage(playerid, ROJO, "Advertencia, estas conduciendo sin licencia, has subido 1 estrella de busuqeda");
			    Informacion[playerid][Estrellas] += 1;
			    ActualizarEstrellas(playerid);
			}
		    SendClientMessage(playerid, BLANCO, "El motor del vehiculo se encuentra apagado, oprime el bot�n {FF0000}2 {FFFFFF}para encenderlo. ");
        }
        if(engine == VEHICLE_PARAMS_ON)
        {
            SendClientMessage(playerid, AMARILLO, "El motor del vehiculo ya se encuentra encendido! ");
        }
        if(vehiculo >= 1 && vehiculo <= 5)
	    {
			if(Informacion[playerid][Faccion] != AVION)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
	    if(vehiculo >= 6 && vehiculo <= 18)
	    {
	        if(Informacion[playerid][HeRentado] == 0)
 			{
		 		if(Rentado[GetPlayerVehicleID(playerid)] == 0)
		 		{
					Rentable[GetPlayerVehicleID(playerid)] = 1;
					ShowPlayerDialog(playerid, Renta, DIALOG_STYLE_MSGBOX, "- Propiedades", "{FFFFFF}Este vehiculo esta en renta, su costo es de 200$, �Quiere rentarlo?", "Rentar", "Cancelar");
				}
			}
			else
			{
			    if(Informacion[playerid][VRentado] != GetPlayerVehicleID(playerid))
			    {
				    SendClientMessage(playerid, GRIS, "Ya tienes un vehiculo rentado! Si quieres otro entra en tu vehiculo rentado y Utiliza /desrentar.");
				    RemovePlayerFromVehicle(playerid);
			    }
			}
		}
        if(vehiculo >= 19 && vehiculo <= 61)
	    {
			if(Informacion[playerid][Faccion] != LSPD)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 62 && vehiculo <= 74)
	    {
			if(Informacion[playerid][Faccion] != LSMD)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 75 && vehiculo <= 88)
	    {
			if(Informacion[playerid][Faccion] != TAXI)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
	    if(vehiculo >= 89 && vehiculo <= 96)
	    {
			if(Informacion[playerid][Faccion] != PRES)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 97 && vehiculo <= 107)
	    {
			if(Informacion[playerid][Faccion] != LSTV)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 108 && vehiculo <= 117)
	    {
			if(Informacion[playerid][Faccion] != LEON)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 118 && vehiculo <= 128)
	    {
			if(Informacion[playerid][Faccion] != MECA)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 129 && vehiculo <= 138)
	    {
			if(Informacion[playerid][Faccion] != FBI)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 139 && vehiculo <= 143)
	    {
            if(EnLeccion[playerid] == 1) { }
			else if(Informacion[playerid][Faccion] != LICE)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 161 && vehiculo <= 173)
	    {
			if(Informacion[playerid][Faccion] != YAKU)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 174 && vehiculo <= 180)
	    {
			if(Informacion[playerid][Faccion] != TRAF)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 181 && vehiculo <= 187)
	    {
			if(Informacion[playerid][Faccion] != NFS)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 188 && vehiculo <= 198)
	    {
			if(Informacion[playerid][Faccion] != BOMB)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
	    if(vehiculo >= 144 && vehiculo <= 160)
	    {
	        if(Informacion[playerid][HeRentado2] == 0)
 			{
		 		if(Rentado[GetPlayerVehicleID(playerid)] == 0)
		 		{
					Rentable[GetPlayerVehicleID(playerid)] = 1;
					ShowPlayerDialog(playerid, Renta2, DIALOG_STYLE_MSGBOX, "- Propiedades", "{FFFFFF}Este vehiculo esta en renta, su costo es de 1000$, �Quiere rentarlo?", "Rentar", "Cancelar");
				}
			}
			else
			{
			    if(Informacion[playerid][VRentado] != GetPlayerVehicleID(playerid))
			    {
				    SendClientMessage(playerid, GRIS, "Ya tienes un vehiculo rentado! Si quieres otro entra en tu vehiculo rentado y Utiliza /desrentar.");
				    RemovePlayerFromVehicle(playerid);
			    }
			}
		}
        if(vehiculo >= 199 && vehiculo <= 208)
	    {
			if(Informacion[playerid][Faccion] != TAXI)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
        if(vehiculo >= 209 && vehiculo <= 250)
	    {
			if(Informacion[playerid][Faccion] != AVION)
			{
				SendClientMessage(playerid, ROJO, "{FFFFFF}** La alarma empieza a sonar a causado del intento de robo del vehiculo");
	            GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
	            SetVehicleParamsEx(vehiculo, engine, lights, 1, doors, bonnet, boot, objective);
	            RemovePlayerFromVehicle(playerid);
			}
		}
		if(newstate == PLAYER_STATE_DRIVER && CarInfo[vehiculo][cVenta] == 0 && CarPuenteado[vehiculo] == 0 && EsUnVehiculoVenta(vehiculo))
		{
		    SendClientMessage(playerid, VERDE, "Este veh�culo se puede puentear, para hacerlo Utiliza /puente");
		    TogglePlayerControllable(playerid, 0);
		}
		if(EsUnVehiculoVenta(vehiculo))
		{
		    if(CarInfo[vehiculo][cVenta]==1)
		    {
		    	if(Informacion[playerid][Admin] >= 1)
				{
					new rango[256];
		        	format(rango,sizeof(rango),"El due�o de este veh�culo es %s",CarInfo[vehiculo][cNameD]);
					SendClientMessage(playerid, AZULCLARO, rango);
				}
				if(Informacion[playerid][Coche] == vehiculo) { }
				else
				{
				    if(Informacion[playerid][Admin] >= 1 && ServicioAdmin[playerid] == 1)
					{
					    SendClientMessage(playerid, AZULCLARO, "* Puedes conducir por estar en servicio admin");
					}
				}
		    }
		    else
		    {
		        return 1;
		    }
		}
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
 	CarPuenteado[vehicleid] = 0;
	new h = vehicleid;
   	if(EsUnVehiculoVenta(h))
   	{
   	    DestroyVehicle(h);
	    CreateVehicle(CarInfo[h][cModel],CarInfo[h][cLocationx],CarInfo[h][cLocationy],CarInfo[h][cLocationz]+1.0,CarInfo[h][cAngle],CarInfo[h][cColorOne],CarInfo[h][cColorTwo],1800);
		AddVehicleComponent(h,CarInfo[h][cNitro]);
		AddVehicleComponent(h,CarInfo[h][cLlantas]);
		AddVehicleComponent(h,CarInfo[h][cAleron]);
		AddVehicleComponent(h,CarInfo[h][cParachoDelan]);
		AddVehicleComponent(h,CarInfo[h][cParachoTrase]);
		AddVehicleComponent(h,CarInfo[h][cHidraulica]);
		AddVehicleComponent(h,CarInfo[h][cTecho]);
		AddVehicleComponent(h,CarInfo[h][cEscape]);
		AddVehicleComponent(h,CarInfo[h][cParachoDesco]);
		AddVehicleComponent(h,CarInfo[h][cEmbellecedor]);
		AddVehicleComponent(h,CarInfo[h][cEmbellecedor2]);
		ChangeVehiclePaintjob(h, CarInfo[h][cPaintJob]);
	}
	return 1;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	new cmd[256], idx;
	cmd = strtok(cmdtext,idx);
	new tmp[256];
	new rango[256];
    new giveplayer[MAX_PLAYER_NAME];
	new giveplayerid;
	new moneys;
	new playermoney;
	new vehiculo = GetPlayerVehicleID(playerid);
	new playername[MAX_PLAYER_NAME];
	new string[256];
	if(strcmp(cmd, "/ayuda", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
 			new x[256];
			x = strtok(cmdtext, idx);
			if(!strlen(x))
			{
			    SendClientMessage(playerid, DORADO, "Utiliza: /ayuda [Opcion]");
			    SendClientMessage(playerid, BLANCO, "Chat - General - Propiedad - Bienes - Coche - Banco - Movil - Premium - Faccion - Trabajo");
			    SendClientMessage(playerid, BLANCO, "Animaciones - Animaciones2 - Lider - Servidor - Renta");
				return 1;
			}
		    else if(strcmp(x,"Lider",true) == 0)
			{
			    SendClientMessage(playerid, DORADO, "- Lider -");
			    SendClientMessage(playerid, BLANCO, "/invitar - /expulsar - /darrango - /cerrarlinea");
			}
			else if(strcmp(x,"Animaciones",true) == 0)
			{
			    SendClientMessage(playerid, BLANCO, "/animped /animairport /animattr /animbar /animbaseball /animbdfire /animbeach /animbpress ");
			    SendClientMessage(playerid, BLANCO, "/animbiked /animbikeh /animbikeleap /animbikes /animbikev /animbikedbz /animbmx /animbomber");
			    SendClientMessage(playerid, BLANCO, "/animbasket /animbuddy /animbus /animcamera /animcar /animcarry /animcarchat /animcasino");
			    SendClientMessage(playerid, BLANCO, "/animchoppa /animclothes /animcoach /animcolt /animcopamb /animcopdv /animcrack /animcrib");
			    SendClientMessage(playerid, BLANCO, "/animdance /animdealer /animdildo /animdodge /animdozer /animdrivebys /animfat /animfightb");
			    SendClientMessage(playerid, BLANCO, "/animfightd /animfighte /animfin /animfin2 /animflame /animflowers /animfood /animfreew");
			    SendClientMessage(playerid, BLANCO, "/animghands /animghetto /animgoggles /animgrafitti /animgraveyard /animgrenade /animgym");
			    SendClientMessage(playerid, BLANCO, "/animheist /animinthouse /animoffice /animintshop /animjustb /animkart /animkiss /animknife");
			    SendClientMessage(playerid, BLANCO, "/animbf /animbox /animchainsaw /animdamj /animfightc /animgangs /animhair /animlapdan");
			}
			else if(strcmp(x,"Animaciones2",true) == 0)
			{
			    SendClientMessage(playerid, BLANCO, "/animblowjob /animlowrider /animdchase /animend /animmedic /animmisc /animtb /animmuscular");
			    SendClientMessage(playerid, BLANCO, "/animlookers /animotb /animparachute /animpark /animpaulnmac /animpdvbys /animplayidles");
			    SendClientMessage(playerid, BLANCO, "/animpool /animpoor /animpython /animquad /animquaddbz /animrifle /animriot /animrobb /animskate");
			    SendClientMessage(playerid, BLANCO, "/animrustler /animryder /animscratching /animshamal /animshop /animshotgun /animsilenced");
			    SendClientMessage(playerid, BLANCO, "/animsmoking /animsniper /animspraycan /animstrip /animsunbathe /animswat /animsweet /animswim");
			    SendClientMessage(playerid, BLANCO, "/animtank /animtattoo /animtec /animtrain /animtruck /animuzi /animvan /animvedding /animvortex");
			    SendClientMessage(playerid, BLANCO, "/animweapons /animwuzi /animsex /animsword /animwayfarer /animnevada /animpolice /animrocket");
			}
		    else if(strcmp(x,"Renta",true) == 0)
			{
			    SendClientMessage(playerid, DORADO, "- Renta -");
			    SendClientMessage(playerid, BLANCO, "/rentarcasa - /desrentarcasa - /desrentar");
			}
		    else if(strcmp(x,"Chat",true) == 0)
			{
			    SendClientMessage(playerid, DORADO, "- Canales -");
			    SendClientMessage(playerid, BLANCO, "(/g)ritar - (/s)ussurar - (/o)oc - /b - /mensajeprivado - /departamento - /radio");
			    SendClientMessage(playerid, BLANCO, "/ingles - /frances - /italiano - /suizo - /polaco - /latin - /ruso - /chino - /intentar - /do");
			}
		    else if(strcmp(x,"General",true) == 0)
			{
			    SendClientMessage(playerid, DORADO, "- General -");
			    SendClientMessage(playerid, BLANCO, "/tienda - /gimnasio - /mercado - /bebidas - /menu - /reproductor - /pararmusica - /sexshop - /trajes");
			    SendClientMessage(playerid, BLANCO, "/quitartraje - /dar - /pagar  /atar- /vendar- /desvendar - /usarcrack - /usaradrenalina - /compraradrenalina");
			    SendClientMessage(playerid, BLANCO, "/cedula - /documentos - /loteria - /idiomas - /licencias - /comercaramelo - /autodesbug - /fumar - /armeria");
			}
		    else if(strcmp(x,"Propiedad",true) == 0)
			{
				if(Informacion[playerid][Casa] == 255)
				{
				    SendClientMessage(playerid, GRIS, "Debes tener una casa para ver sus comandos");
				    return 1;
				}
				SendClientMessage(playerid, DORADO, "- Propiedades -");
			    SendClientMessage(playerid, BLANCO, "/abrir - /vertele - /dejartele - /estadorenta - /cambiarrenta - /vendercasa");
			}
		    else if(strcmp(x,"Bienes",true) == 0)
			{
				if(Informacion[playerid][Negocio] == 255)
				{
				    SendClientMessage(playerid, GRIS, "Debes tener un negocio para ver sus comandos");
				    return 1;
				}
				SendClientMessage(playerid, DORADO, "- Bienes -");
			    SendClientMessage(playerid, BLANCO, "/rfondos - /entrada - /extorsion - /preciogas - /venderlocal - /dfondos");
			}
		    else if(strcmp(x,"Coche",true) == 0)
			{
				if(Informacion[playerid][Coche] == 9999)
				{
				    SendClientMessage(playerid, GRIS, "Debes tener un coche para ver sus comandos");
				    return 1;
				}
				SendClientMessage(playerid, DORADO, "- Coche -");
			    SendClientMessage(playerid, BLANCO, "/vcontrol - /estacionar - /papeles - /maletero - /gps - /bloqueo");
			}
		    else if(strcmp(x,"Banco",true) == 0)
			{
			    SendClientMessage(playerid, DORADO, "- Banco -");
			    SendClientMessage(playerid, BLANCO, "/retirar - /enviar - /guardar - /hackear");
			}
		    else if(strcmp(x,"Movil",true) == 0)
			{
			    SendClientMessage(playerid, DORADO, "- Movil -");
			    SendClientMessage(playerid, BLANCO, "/llamar - /sms - /colgar");
			}
		    else if(strcmp(x,"Servidor",true) == 0)
			{
			    SendClientMessage(playerid, DORADO, "- Servidor -");
			    SendClientMessage(playerid, BLANCO, "/duda - /bug");
			}
		    if(strcmp(x,"Faccion",true) == 0)
			{
				if(Informacion[playerid][Faccion] == 0)
				{
				    SendClientMessage(playerid, GRIS, "Necesitas ser parte de alguna faccion");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 1)
				{
				    SendClientMessage(playerid, DORADO, "- Departamento de Policia de Los Santos -");
				    SendClientMessage(playerid, BLANCO, "/ref - /aref - /arrestar - /multar - /rd - /radio - /crearspiker - /borrarspiker - /borrartodos");
				    SendClientMessage(playerid, BLANCO, "/ccono - /qcono - /cbarra - /qbarra - /cbarricada - /qbarricada - /observar - /servicio");
				    SendClientMessage(playerid, BLANCO, "/equipar - /vestimenta - /lobservaciones - /esposar - /desesposar - /comprobardni");
				    SendClientMessage(playerid, BLANCO, "/megafono - /remolcar - /asensor - /forzar - /quitar - /tazer - /fa");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 2)
				{
		    		SendClientMessage(playerid, DORADO, "- Departamento de Medicina de Los Santos -");
				    SendClientMessage(playerid, BLANCO, "/rd - /radio - /qsangre - /analizar - /operar - /mservicio - /megafono - /fa");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 3)
				{
				    SendClientMessage(playerid, DORADO, "- Departamento de Transporte Publico -");
				    SendClientMessage(playerid, BLANCO, "/tservico - /radio - /rd - /fa - /parada");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 4)
				{
				    SendClientMessage(playerid, DORADO, "- Presidencia de Los Santos -");
				    SendClientMessage(playerid, BLANCO, "/rcajafuerte - /dcajafuerte - /fa - /subvencion /darsubvencion - /dardni - /inciarloteria - /megafono - /arrestar");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 5)
				{
				    SendClientMessage(playerid, DORADO, "- CNN San Andreas -");
				    SendClientMessage(playerid, BLANCO, "/aire - /anunciotele - /noticias - /entrevista - /nuevoc - /borrarc - /borrartc - /fa");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 6)
				{
				    SendClientMessage(playerid, DORADO, "- Familia Corleone -");
				    SendClientMessage(playerid, BLANCO, "/creararma - /ponerbomba - /detonarbomba - /rcajafuerte /dcajafuerte - /fa");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 7)
				{
				    SendClientMessage(playerid, DORADO, "- One Motos Company -");
				    SendClientMessage(playerid, BLANCO, "/reparar - /remolcar - /cambiarmatricula - /hacersocio - /agarage - /cgarage");
				    SendClientMessage(playerid, BLANCO, "/instalargps - /removergps - /venderganzuas - /capo - /fa");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 8)
				{
				    SendClientMessage(playerid, DORADO, "- FBI -");
				    SendClientMessage(playerid, BLANCO, "/desactivarbomba - /proteger - /fa");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 9)
				{
				    SendClientMessage(playerid, DORADO, "- Licencieros y Profesores -");
				    SendClientMessage(playerid, BLANCO, "/darlibro - /ense�ar - /iniciarleccion - /finalizarleccion - /darlicencia - /fa");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 10)
				{
				    SendClientMessage(playerid, DORADO, "- Yakuza -");
				    SendClientMessage(playerid, BLANCO, "/creararma - /ponerbomba - /detonarbomba - /rcajafuerte /dcajafuerte - /fa");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 11)
				{
				    SendClientMessage(playerid, DORADO, "- Traficantes -");
				    SendClientMessage(playerid, BLANCO, "/fabricar - /procesar - /calentar - /enfriar - /purificar - /depositarcrack - /retirarcrack - /fa");
				    SendClientMessage(playerid, BLANCO, "/vendercrack");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 12)
				{
				    SendClientMessage(playerid, DORADO, "- Departamento de Bienes y Propiedades -");
				    SendClientMessage(playerid, BLANCO, "/vendercoche - /venderpropiedad - /vendernegocio - /renovar - /reacomodar - /renovacionextensa - /fa - /rd");
					return 1;
				}
				if(Informacion[playerid][Faccion] == 13)
				{
				    SendClientMessage(playerid, DORADO, "- Departamento de Bomberos -");
				    SendClientMessage(playerid, BLANCO, "/ref - /aref - /radio - /rd - /megafono - /fa");
					return 1;
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/acomandos", true) == 0)
	{
		if (Informacion[playerid][Admin] == 1)
		{
			SendClientMessage(playerid, FLUOR, "Comandos de administrador:");
			SendClientMessage(playerid, BLANCO, "/a - /aservicio - /booc - /cinterior - /cmundovirtual - /cskin - /castigar - /facciones");
		}
		else if (Informacion[playerid][Admin] == 2)
		{
			SendClientMessage(playerid, FLUOR, "Comandos de administrador:");
		    SendClientMessage(playerid, BLANCO, "/congelar - /descongelar - /ir - /traer - /ihuc - /aestado - /spectar - /dspectar - /facciones");
		    SendClientMessage(playerid, BLANCO, "/vreparar - /vnitro - /vcolor - /vvida - /vdestruir- /kickear - /chora - /vida - /blindaje");

		}
		else if(Informacion[playerid][Admin] == 3)
		{
			SendClientMessage(playerid, FLUOR, "Comandos de administrador:");
		    SendClientMessage(playerid, BLANCO, "/congelar - /descongelar - /ir - /traer - /ihuc - /aestado - /spectar - /dspectar - /facciones");
		    SendClientMessage(playerid, BLANCO, "/vreparar - /vnitro - /vcolor - /vvida - /vdestruir- /kickear - /chora - /vida - /blindaje");
		    SendClientMessage(playerid, BLANCO, "/res - /quitarconos - /qbarricadas - /qbarras - /traercoche - /banear");
		}
		else if(Informacion[playerid][Admin] == 4)
		{
			SendClientMessage(playerid, FLUOR, "Comandos de administrador:");
		    SendClientMessage(playerid, BLANCO, "/congelar - /descongelar - /ir - /traer - /ihuc - /aestado - /spectar - /dspectar - /facciones");
		    SendClientMessage(playerid, BLANCO, "/vreparar - /vnitro - /vcolor - /vvida - /vdestruir- /kickear - /chora - /vida - /blindaje");
		    SendClientMessage(playerid, BLANCO, "/res - /quitarconos - /qbarricadas - /qbarras - /traercoche - /banear");
		    SendClientMessage(playerid, BLANCO, "/autorizar - /ddinero - /dnivel - /dmateriales - /dcrack - /dcodificadores");
		}
		else if(Informacion[playerid][Admin] == 1337)
		{
			SendClientMessage(playerid, FLUOR, "Comandos de administrador:");
		    SendClientMessage(playerid, BLANCO, "/congelar - /descongelar - /ir - /traer - /ihuc - /aestado - /spectar - /dspectar - /facciones");
		    SendClientMessage(playerid, BLANCO, "/vreparar - /vnitro - /vcolor - /vvida - /vdestruir- /kickear - /chora - /vida - /blindaje");
		    SendClientMessage(playerid, BLANCO, "/res - /quitarconos - /qbarricadas - /qbarras - /traercoche - /banear");
		    SendClientMessage(playerid, BLANCO, "/autorizar - /ddinero - /dnivel - /dmateriales - /dcrack - /dcodificadores - /clima");
		}
		else if(Informacion[playerid][Admin] == 1338)
		{
			SendClientMessage(playerid, FLUOR, "Comandos de administrador:");
		    SendClientMessage(playerid, BLANCO, "/congelar - /descongelar - /ir - /traer - /ihuc - /aestado - /spectar - /dspectar - /facciones");
		    SendClientMessage(playerid, BLANCO, "/vreparar - /vnitro - /vcolor - /vvida - /vdestruir- /kickear - /chora - /vida - /blindaje");
		    SendClientMessage(playerid, BLANCO, "/res - /quitarconos - /qbarricadas - /qbarras - /traercoche - /banear");
		    SendClientMessage(playerid, BLANCO, "/autorizar - /ddinero - /dnivel - /dmateriales - /dcrack - /dcodificadores - /clima");
		    SendClientMessage(playerid, BLANCO, "/haceradmin - /hacerlide - /hacerpremium");
		}
		else if(Informacion[playerid][Admin] == 1339)
		{
			SendClientMessage(playerid, FLUOR, "Comandos de administrador:");
		    SendClientMessage(playerid, BLANCO, "/congelar - /descongelar - /ir - /traer - /ihuc - /aestado - /spectar - /dspectar - /facciones");
		    SendClientMessage(playerid, BLANCO, "/vreparar - /vnitro - /vcolor - /vvida - /vdestruir- /kickear - /chora - /vida - /blindaje");
		    SendClientMessage(playerid, BLANCO, "/res - /quitarconos - /qbarricadas - /qbarras - /traercoche - /banear");
		    SendClientMessage(playerid, BLANCO, "/autorizar - /ddinero - /dnivel - /dmateriales - /dcrack - /dcodificadores - /clima");
		    SendClientMessage(playerid, BLANCO, "/haceradmin - /hacerlide - /hacerpremium - /desbugearvehiculo - /avendercasa");
		}
		else return SendClientMessage(playerid, GRIS, "Solo miembros del staff pueden utilizar este comando");
		return 1;
	}
	if(strcmp(cmd, "/facciones", true) == 0)
	{
		if(Informacion[playerid][Faccion] == TAXI)
		{
			SendClientMessage(playerid, GRIS, "Solo miembros del staff pueden utilizar este comando");
			return 1;
		}
		SendClientMessage(playerid, NARANJA, "--------------[ FACCIONES ]--------------");
		SendClientMessage(playerid, BLANCO, " ");
		SendClientMessage(playerid, BLANCO, "1) LSPD || 2) LSMD || 3) TAXI || 4) GOBIERNO");
		SendClientMessage(playerid, BLANCO, "5) LSTV || 6) LEON || 7) MECA || 8) FBI");
		SendClientMessage(playerid, BLANCO, "9) LICE || 10) YAKU || 11) TRAF || 12) DBP");
		SendClientMessage(playerid, BLANCO, "13) BOMBEROS || 14) AERO [Desactivada]");
	 	return 1;
	}
 	if(strcmp(cmd, "/parada", true)==0)
 	{
 	    if(IsPlayerConnected(playerid))
 	    {
 	        if(Informacion[playerid][Faccion] == TAXI)
			{
			    new Veh = GetPlayerVehicleID(playerid);
			    if(Veh >= 199 && Veh <= 208)
			    {
				    if(TransportDuty[playerid] == 2)
				    {
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, DORADO, "Utiliza: /parada [Zona de Transcurro]");
							return 1;
						}
						format(string, sizeof(string), "{00FFFF}[BUS] {FFFFFF}- Linea %d dirigiendose hacia {00FFFF}%s", CarMatricula[Veh], result);
	    				SendClientMessageToAll(BLANCO,string);
				    }
				    else
				    {
				        SendClientMessage(playerid, GRIS, "No est�s de servicio");
				        return 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "No estas en un Bus");
				}
			}
			else
			{
			    SendClientMessage(playerid,GRIS,"Debes ser conductor de buses");
			    return 1;
			}
 	    }
 	    return 1;
 	}
	if(strcmp(cmd, "/reportar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /Reortar [Nombre] [Razon]");
				return 1;
			}
			format(string, sizeof(string), "El Usuario %s denuncia %s", NombreEx(playerid), (result));
			MensajeAdmin(PURPURASUAVE, string);
			SendClientMessage(playerid, VERDE, "Su reporte ha sido enviado a los administradores conectados");
	    }
	    return 1;
	}
	if(strcmp(cmd, "/hora", true) == 0)
	{
	    if(Informacion[playerid][Relog] == 0)
	    {
	        SendClientMessage(playerid, GRIS, "Lo siento, no tienes un relog");
			return 1;
		}
  	    gettime(hour, minute);
		format(rango, sizeof(rango), "* [CASIO] * - Son las: %d:%d", hour, minute);
		SendClientMessage(playerid, VERDE, rango);
		return 1;
	}
	if(strcmp(cmd, "/bloqueo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Coche] != 9999)
	        {
		        new car = Informacion[playerid][Coche];
				if(DistanciaEntreCarPer(car, playerid) < 5)
				{
				    if(CarInfo[car][cLock] == 1)
				    {
						GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
			            GameTextForPlayer(playerid, "~w~Vehiculo ~g~Desbloqueado", 2000, 4);
			            CarInfo[car][cLock] = 0;
				    }
				    else if(CarInfo[car][cLock] == 0)
				    {
						GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(car,engine,lights,alarm,1,bonnet,boot,objective);
			            GameTextForPlayer(playerid, "~w~Vehiculo ~r~Bloqueado", 2000, 4);
			            CarInfo[car][cLock] = 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "Debes estar cerca de tu coche");
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "No tienes vehiculo");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/tarifa",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == TAXI)
			{
				if(TransportDuty[playerid] > 0)
				{
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* Has dejado de trabajar, has recaudado $%d en total", TransportMoney[playerid]);
					SendClientMessage(playerid, VERDE, string);
					GivePlayerMoney(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return 1;
				}
				if(vehiculo >= 75 && vehiculo <= 88)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, DORADO, "Utiliza: /tarifa [Precio]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 50)
						{
							SendClientMessage(playerid, GRIS, "El Precio de tarifa no puede superar los $50");
							return 1;
						}
					    TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
	    				format(string, sizeof(string), "{00FFFF}[TAXI] - {FFFFFF}El taxi de linea %d esta de servicio, les bridara transporte, Tarifa: $%d", CarMatricula[vehiculo], TransportValue[playerid]);
	    				SendClientMessageToAll(BLANCO,string);
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "No eres un conductor de Taxis");
					    return 1;
					}
				}
				else if(vehiculo >= 199 && vehiculo <= 208)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, DORADO, "Utiliza: /tarifa [Precio]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 15)
						{
							SendClientMessage(playerid, GRIS, "El Precio no puede supearar los $15");
							return 1;
						}
					    TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
	    				format(string, sizeof(string), "{00FFFF}[BUS] - {FFFFFF}El bus de linea %d esta de servicio, les bridara transporte, Tarifa: $%d", CarMatricula[vehiculo], TransportValue[playerid]);
	    				SendClientMessageToAll(BLANCO,string);
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "No eres un conductor de bus");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "No estas en un Taxi/Bus");
				}
			}
			else
			{
			    SendClientMessage(playerid,GRIS,"No eres miembro del departamento de transporte publico");
			    return 1;
			}
	    }
	    return 1;
 	}
	if(strcmp(cmd, "/gps", true) == 0)
	{
        if(IsPlayerInAnyVehicle(playerid))
	    {
	        new coche = GetPlayerVehicleID(playerid);
			if(coche == Informacion[playerid][Coche])
			{
				if(CarInfo[coche][cGPS] == 0)
				{
					SendClientMessage(playerid, GRIS, "El vehiculo no tiene GPS Instalado");
					return 1;
				}
				ShowPlayerDialog(playerid, GPS, DIALOG_STYLE_LIST, "- GPS","-> Discoteca\n-> Ayuntamiento\n-> Comisaria\n-> Banco\n-> FBI\n-> Hospital\n-> SexShop\n-> Clucking Bell\n-> Burger Shot\n-> Well Pizza Stack\n-> LSTV\n-> Grotti\n-> Casino Japones\n---> Siguiente","Aceptar","Cancelar");
			}
		}
	}
	if(strcmp(cmd, "/abrirlinea", true) == 0)
	{
	    if(Informacion[playerid][Faccion] == TAXI && Informacion[playerid][Lider] == 1)
	    {
			LineaTaxi = 1;
	        SendClientMessage(playerid, VERDE, "Has abierto las lineas telefonicas hacia los taxistas");
     	}
	    if(Informacion[playerid][Faccion] == LSTV && Informacion[playerid][Lider] == 1)
	    {
			LineaCNN = 1;
	        SendClientMessage(playerid, VERDE, "Has abierto las lineas telefonicas hacia CNN San Andreas");
 	    }
	    if(Informacion[playerid][Faccion] == NFS && Informacion[playerid][Lider] == 1)
	    {
			LineaNFS = 1;
	        SendClientMessage(playerid, VERDE, "Has abierto las lineas telefonicas hacia el departamento de bienes y propiedades");
	  	}
	    if(Informacion[playerid][Faccion] == MECA && Informacion[playerid][Lider] == 1)
	    {
			LineaMeca = 1;
	        SendClientMessage(playerid, VERDE, "Has abierto las lineas telefonicas hacia One Motors Company");
	    }
	    if(Informacion[playerid][Faccion] == FBI && Informacion[playerid][Lider] == 1)
	    {
			LineaFBI = 1;
	        SendClientMessage(playerid, VERDE, "Has abierto las lineas telefonicas hacia FBI");
		}
		else
 		{
		    SendClientMessage(playerid, GRIS, "- Solo Lideres de CNN San Andreas, Taxistas, Departamento de Bienes y Propiedades, One Motors Company y FBI");
		    return 1;
		}
	}
	if(strcmp(cmd, "/cerrarlinea", true) == 0)
	{
	    if(Informacion[playerid][Faccion] == TAXI && Informacion[playerid][Lider] == 1)
	    {
			LineaTaxi = 0;
	        SendClientMessage(playerid, ROJO, "Has cerrado las lineas telefonicas hacia los taxistas");
	    }
	    else if(Informacion[playerid][Faccion] == LSTV && Informacion[playerid][Lider] == 1)
	    {
			LineaCNN = 0;
	        SendClientMessage(playerid, ROJO, "Has cerrado las lineas telefonicas hacia CNN San Andreas");
	    }
	    else if(Informacion[playerid][Faccion] == NFS && Informacion[playerid][Lider] == 1)
	    {
			LineaNFS = 0;
	        SendClientMessage(playerid, ROJO, "Has cerrado las lineas telefonicas hacia el departamento de bienes y propiedades");
	    }
	    else if(Informacion[playerid][Faccion] == MECA && Informacion[playerid][Lider] == 1)
	    {
			LineaMeca = 0;
	        SendClientMessage(playerid, ROJO, "Has cerrado las lineas telefonicas hacia One Motors Company");
	    }
	    else if(Informacion[playerid][Faccion] == FBI && Informacion[playerid][Lider] == 1)
	    {
			LineaFBI = 0;
	        SendClientMessage(playerid, ROJO, "Has cerrado las lineas telefonicas hacia FBI");
		}
		else
 		{
		    SendClientMessage(playerid, GRIS, "- Solo Lideres de CNN San Andreas, Taxistas, Departamento de Bienes y Propiedades, One Motors Company y FBI");
		    return 1;
		}
	}
	if(strcmp(cmd, "/colgar", true) == 0 || strcmp(cmd, "/c", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Linea[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  GRIS, "Han colgado la linea telefonica");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  GRIS, "Has colgado la linea telefonica");
							Linea[caller] = 255;
						}
						Linea[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SendClientMessage(playerid,  GRIS, "Tu telefono ya esta colgado");
		}
		return 1;
	}
	if(strcmp(cmd, "/llamar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /llamar [Telefono]");
				return 1;
			}
			if(Informacion[playerid][Telefono] == 0)
			{
				SendClientMessage(playerid, GRIS, "No dispones de un telefono movil");
				return 1;
			}
			format(rango, sizeof(rango), "* %s saca su telefono movil del bolsillo", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			new ntelefono = strval(tmp);
			if(ntelefono == Informacion[playerid][Telefono])
			{
				SendClientMessage(playerid, GRIS, "No puedes llamarte a ti mismo");
				return 1;
			}
			if(ntelefono == 222)
			{
				ShowPlayerDialog(playerid, TServicio, DIALOG_STYLE_LIST, "- Servicios Telefonicos 222","-> Policias\n-> Medicos\n-> Bomberos","Llamar","Cancelar");
				return 1;
			}
			if(ntelefono == 333)
			{
				ShowPlayerDialog(playerid, TServicio2, DIALOG_STYLE_LIST, "- Servicios Telefonicos 333","-> CNN San Andreas\n-> Departamento de Transporte Publico\n-> One Motors Company\n-> Departamento de Bienes y Propiedades\n-> Agencia Internacional de Seguridad y Investigacion","Llamar","Cancelar");
				return 1;
			}
			if(Linea[playerid] != 255)
			{
				SendClientMessage(playerid, GRIS, "Ya estas en una llamada");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Informacion[i][Telefono] == ntelefono && ntelefono != 0)
					{
						giveplayerid = i;
						Linea[playerid] = giveplayerid;
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
								if(Linea[giveplayerid] == 255)
								{
									format(rango, sizeof(rango), "{FFFFFF}Tu telefono movil esta recibiendo una llamada");
									ShowPlayerDialog(giveplayerid, CLlamada, DIALOG_STYLE_MSGBOX, "- Llamada Entrante",rango,"Atender","Ignorar");
									RingTone[giveplayerid] = 10;
									format(rango, sizeof(rango), "* %s le suena su telefono movil", NombreEx(playerid));
									SendClientMessage(playerid, BLANCO, "Espera hasta que te contesten, para finalizar la llamda utiliza /colgar");
									RangoCercano(30.0, i, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
									CellTime[playerid] = 1;
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, GRIS, "Acabas de obtener un tono ocupado");
		}
		return 1;
	}
	if(strcmp(cmd, "/acolores", true) == 0)
	{
	    if(Informacion[playerid][Admin] == 0)
	    {
			SendClientMessage(playerid, GRIS, "Solo miembros del staff pueden utilizar este comando");
			return 1;
		}
		#define B FFFFFF
		ShowPlayerDialog(playerid, AColores, DIALOG_STYLE_LIST, "- Colores", "{FFFFFF}> {B40000}Rojo\n{FFFFFF}> {45A600}Verde\n{FFFFFF}> {00C6FF}Celeste\n{FFFFFF}> {A3659F}Purpura\n{FFFFFF}> {D05CBC}Rosado\n{FFFFFF}> {D0B554}Dorado\n{FFFFFF}> {FCFF00}Amarillo\n{FFFFFF}> {9AFF00}Fluoresente\n{FFFFFF}> {59FFA1}Aqua\n{FFFFFF}> {593A18}Marron\n{FFFFFF}> {0742FF}Azul\n{FFFFFF}> Normal","Elegir","");
		return 1;
	}
	if(strcmp(cmd, "/estacionar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInAnyVehicle(playerid))
		    {
		        new coche = GetPlayerVehicleID(playerid);
			    if(EsUnVehiculoVenta(coche))
			    {
					if(coche == Informacion[playerid][Coche])
					{
					    new Float: carposx, Float: carposy, Float: carposz, Float:carposa;
					    GetVehiclePos(coche, carposx, carposy, carposz);
                        GetVehicleZAngle(coche, carposa);
                        CarInfo[coche][cLocationx] = carposx;
                        CarInfo[coche][cLocationy] = carposy;
                        CarInfo[coche][cLocationz] = carposz;
                        CarInfo[coche][cAngle] = carposa;
                        OnPropUpdate();
                        GameTextForPlayer(playerid, "~w~Vehiculo ~g~Estacionado", 2000, 4);
					}
					else
					{
					    SendClientMessage(playerid, GRIS, " Este no es tu coche");
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, " No puedes hacer eso");
			    }
			}
			else
			{
			    SendClientMessage(playerid, GRIS, " Debes estar en tu coche para usar este comando");
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/iniciarloteria", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == PRES && Informacion[playerid][Rango] == 8)
	        {
	            format(rango, sizeof(rango), "Noticias: Acaba de empezar el loto de la ciudad.");
            	SendClientMessageToAll(AZULCLARO, rango);
	            new rand = random(80);
	            if(rand < 77) { rand += 3; }
	            Lotto(rand);
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solo el presidente puede Utilizar este comando");
	            return 1;
	        }
	    }
		return 1;
	}
	if(strcmp(cmd, "/faccion", true) == 0 || strcmp(cmd, "/fa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: (/fa)ccion [Texto]");
				return 1;
			}
			if(Informacion[playerid][Faccion] == LSPD)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Comisario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub-Jefe %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Teniente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Coronel %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Secretario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Oficial %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Guardia Civil %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Cadete %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeLSPD(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == LSMD)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub-Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Secretario Tecnico %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Secretario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Medico Profesional %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Medico Avanzado %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Medico Basico %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Asistente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeLSMD(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == TAXI)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub-Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Secretario Tecnico %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Secretario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Taxista Privado %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Taxista Superior %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Taxista de Radio %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Asistente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeTAXI(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == PRES)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Presidente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Vice-Presidente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Asesor Financiero %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Asesor Cultural %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Senador %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Politico %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Guardaespaldas %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Chofer %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajePRES(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == LSTV)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub-Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Manager %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Productor Ejecutivo %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Asesor de Imagen %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Conductor %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Periodista %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Asistente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeLSTV(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == LEON)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Don Corleone {FFFFFF}%s: %s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub Jefe %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Consejero %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Capo de Regimen %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Capo Criminal %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Miembro Honorario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Recadero %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Novato %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeLEON(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == MECA)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub-Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Secretario de Industria %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Secretario Mayor %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Mecanico Profesional %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Mecanico Avanzado %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Mecanico Basico %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Asistente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeMECA(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == FBI)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Secretario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Forense %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Detective %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Espia %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Guardaespaldas %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Asistente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeFBI(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == LICE)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Secretario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Profesor %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Licenciero de Armas %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Licenciero Aereo %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Licenciero Maritimo %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Licenciero Terrestre %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeLICE(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == LICE)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Secretario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Profesor %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Licenciero de Armas %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Licenciero Aereo %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Licenciero Maritimo %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Licenciero Terrestre %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeLICE(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == YAKU)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Don Yakuza %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub Jefe %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Consejero %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Capo de Regimen %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Capo Criminal %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Miembro Honorario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Recadero %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Novato %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeYAKU(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == TRAF)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Lider Narcotraficante %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub Jefe %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Representante %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Narcotraficante %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Vendedor de Crack %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Productor de Crack %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Maton %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Recadero %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeTRAF(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == NFS)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Secretario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Vendedor de Negocios %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Vendedor de Propiedades %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Vendedor de Vehiculos %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Renovador %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Asistente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeNFS(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == BOMB)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{5CAF00}(( [F] Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "(( [F] Sub Director %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "(( [F] Secretario %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "(( [F] Asesor %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "(( [F] Representante %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "(( [F] Bombero Especial %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "(( [F] Bombero de Urgencias %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "(( [F] Asistente %s: {FFFFFF}%s ))", NombreEx(playerid), result); }
				MensajeBOMB(0x7BDDA5AA, rango);
				printf("%s", rango);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No perteneces a alguna faccion");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rd", true) == 0 || strcmp(cmd, "/rdepartamental", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: (/rd)departamental [Texto]");
				return 1;
			}
			if(Informacion[playerid][Faccion] == LSPD)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{CC6B64}[RD] {FFFFFF}Comisario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Sub-Jefe %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Teniente %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Coronel %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Oficial %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Guardia Civil %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Cadete %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeGlobal(0xFF8282AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == LSMD)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{CC6B64}[RD] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Secretario Tecnico %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Medico Profesional %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Medico Avanzado %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Medico Basico %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeGlobal(0xFF8282AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == TAXI)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{CC6B64}[RD] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Secretario Tecnico %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Taxista Privado %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Taxista Superior %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Taxista de Radio %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeGlobal(0xFF8282AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == PRES)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{CC6B64}[RD] {FFFFFF}Presidente %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Vice-Presidente %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Asesor Financiero %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Asesor Cultural %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Senador %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Politico %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Guardaespaldas %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Chofer %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeGlobal(0xFF8282AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == FBI)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{CC6B64}[RD] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Forense %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Detective %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Espia %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Guardaespaldas %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeGlobal(0xFF8282AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == BOMB)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{CC6B64}[RD] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Asesor %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Representante %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Bombero Especial %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Bombero de Urgencias %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeGlobal(0xFF8282AA, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == NFS)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{CC6B64}[RD] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Vendedor de Negocios %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Vendedor de Propiedades %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Vendedor de Vehiculos %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Renovador %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{FF8282}[RD] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeGlobal(0xFF8282AA, rango);
				printf("%s", rango);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No perteneces a alguna empresa publica");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: (/r)adio [Texto]");
				return 1;
			}
			if(Informacion[playerid][Faccion] == LSPD)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{007CCC}[LSPD] {FFFFFF}Comisario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{007CCC}[LSPD] {FFFFFF}Sub-Jefe %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{007CCC}[LSPD] {FFFFFF}Teniente %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{007CCC}[LSPD] {FFFFFF}Coronel %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{007CCC}[LSPD] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{007CCC}[LSPD] {FFFFFF}Oficial %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{007CCC}[LSPD] {FFFFFF}Guardia Civil %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{007CCC}[LSPD] {FFFFFF}Cadete %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeLSPD(0x007CCCA4, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == LSMD)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{007CCC}[LSMD] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{007CCC}[LSMD] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{007CCC}[LSMD] {FFFFFF}Secretario Tecnico %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{007CCC}[LSMD] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{007CCC}[LSMD] {FFFFFF}Medico Profesional %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{007CCC}[LSMD] {FFFFFF}Medico Avanzado %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{007CCC}[LSMD] {FFFFFF}Medico Basico %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{007CCC}[LSMD] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeLSMD(0x007CCCA4, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == TAXI)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{007CCC}[TAXI] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{007CCC}[TAXI] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{007CCC}[TAXI] {FFFFFF}Secretario Tecnico %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{007CCC}[TAXI] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{007CCC}[TAXI] {FFFFFF}Taxista Privado %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{007CCC}[TAXI] {FFFFFF}Taxista Superior %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{007CCC}[TAXI] {FFFFFF}Taxista de Radio %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{007CCC}[TAXI] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeTAXI(0x007CCCA4, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == PRES)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{007CCC}[GOB] {FFFFFF}Presidente %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{007CCC}[GOB] {FFFFFF}Vice-Presidente %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{007CCC}[GOB] {FFFFFF}Asesor Financiero %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{007CCC}[GOB] {FFFFFF}Asesor Cultural %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{007CCC}[GOB] {FFFFFF}Senador %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{007CCC}[GOB] {FFFFFF}Politico %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{007CCC}[GOB] {FFFFFF}Guardaespaldas %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{007CCC}[GOB] {FFFFFF}Chofer %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajePRES(0x007CCCA4, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == FBI)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{007CCC}[FBI] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{007CCC}[FBI] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{007CCC}[FBI] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{007CCC}[FBI] {FFFFFF}Forense %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{007CCC}[FBI] {FFFFFF}Detective %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{007CCC}[FBI] {FFFFFF}Espia %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{007CCC}[FBI] {FFFFFF}Guardaespaldas %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{007CCC}[FBI] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeFBI(0x007CCCA4, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == BOMB)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{007CCC}[LSDB] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{007CCC}[LSDB] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{007CCC}[LSDB] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{007CCC}[LSDB] {FFFFFF}Asesor %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{007CCC}[LSDB] {FFFFFF}Representante %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{007CCC}[LSDB] {FFFFFF}Bombero Especial %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{007CCC}[LSDB] {FFFFFF}Bombero de Urgencias %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{007CCC}[LSDB] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeBOMB(0x007CCCA4, rango);
				printf("%s", rango);
				return 1;
			}
			else if(Informacion[playerid][Faccion] == NFS)
			{
				if(Informacion[playerid][Rango] == 8) { format(rango, sizeof(rango), "{007CCC}[DBP] {FFFFFF}Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 7) { format(rango, sizeof(rango), "{007CCC}[DBP] {FFFFFF}Sub-Director %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 6) { format(rango, sizeof(rango), "{007CCC}[DBP] {FFFFFF}Secretario %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 5) { format(rango, sizeof(rango), "{007CCC}[DBP] {FFFFFF}Vendedor de Negocios %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 4) { format(rango, sizeof(rango), "{007CCC}[DBP] {FFFFFF}Vendedor de Propiedades %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 3) { format(rango, sizeof(rango), "{007CCC}[DBP] {FFFFFF}Vendedor de Vehiculos %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 2) { format(rango, sizeof(rango), "{007CCC}[DBP] {FFFFFF}Renovador %s: %s, Cambio.", NombreEx(playerid), result); }
				else if(Informacion[playerid][Rango] == 1) { format(rango, sizeof(rango), "{007CCC}[DBP] {FFFFFF}Asistente %s: %s, Cambio.", NombreEx(playerid), result); }
				MensajeNFS(0x007CCCA4, rango);
				printf("%s", rango);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No perteneces a alguna empresa publica");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/subvencion", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == PRES && Informacion[playerid][Rango] == 8)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /subvencion [Usuario]");
					return 1;
				}
				new player = strval(tmp);
				GetPlayerName(player, giveplayer, sizeof(giveplayer));
	            new DB:archivo = db_open("subvencion.db");
	            new DBResult:qresult;
	            new DBResult:qresult2;
	            new query[256];
	            new query2[256];
				new rango2[128];
				new rango3[128];
		        format(query, sizeof(query), "SELECT Horas FROM horasjugadas WHERE Nombre='%s'", giveplayer);
				qresult = db_query(archivo, query);
				db_get_field(qresult, 0, rango, sizeof(rango));
				format(query2, sizeof(query2), "SELECT Faccion FROM horasjugadas WHERE Nombre='%s'", giveplayer);
				qresult2 = db_query(archivo, query2);
				db_get_field(qresult2, 0, rango3, sizeof(rango3));
				format(rango2, sizeof(rango2), "%s ha jugado %d horas en la facci�n %s", giveplayer, strval(rango), rango3);
				SendClientMessage(playerid, GRIS, rango2);
				db_free_result(qresult);
				db_close(archivo);
				GuardarFondos();
			}
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solo el presidente puede Utilizar este comando");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/darsubvencion", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == PRES && Informacion[playerid][Rango] == 8)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /darsubvencion [Usuario] [Dinero]");
					return 1;
				}
				new player = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /darsubvencion [Usuario] [Dinero]");
					return 1;
				}
				new dinero = strval(tmp);
				GetPlayerName(player, giveplayer, sizeof(giveplayer));
	            new DB:archivo = db_open("subvencion.db");
	            new DBResult:qresult;
	            new query[256];
				format(query, sizeof(query), "UPDATE horasjugadas SET Horas = 0 WHERE Nombre='%s'", giveplayer);
				qresult = db_query(archivo, query);
				db_free_result(qresult);
				GivePlayerMoney(player, dinero);
				CajaGobierno -= dinero;
				GuardarFondos();
			}
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solo el presidente puede Utilizar este comando");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/tazear", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Faccion] == LSPD)
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SendClientMessage(playerid, GRIS, "No puedes usarlo dentro de un vehiculo");
			        return 1;
			    }
			    new suspect = GetClosestPlayer(playerid);
			    if(IsPlayerConnected(suspect))
				{
				    if(GetDistanceBetweenPlayers(playerid,suspect) < 2)
					{
					    if(Informacion[suspect][Faccion] == LSPD)
					    {
					        SendClientMessage(playerid, GRIS, "No puedes tazear a policias");
					        return 1;
					    }
					    if(IsPlayerInAnyVehicle(suspect))
					    {
					        SendClientMessage(playerid, GRIS, "El fugitivo esta en un coche, sacalo primero!");
					        return 1;
					    }
					    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						new randt = random(4)+1;
						if(randt == 1)
						{
						    format(rango, sizeof(rango), "* %s dispara con su tazer a %s, pero falla", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, ROJO,ROJO,ROJO,ROJO,ROJO);
						}
						else
						{
							format(rango, sizeof(rango), "* Has sido tazeado, por %s, la electrisidad perdera efecto en 1 minuto", NombreEx(playerid));
							SendClientMessage(suspect, AZULCLARO, rango);
							format(rango, sizeof(rango), "* Has Tazeado a %s por 20 segundos.", giveplayer);
							SendClientMessage(playerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s dispara con su tazer %s y logra tazearlo", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VERDE,VERDE,VERDE,VERDE,VERDE);
							format(rango, sizeof(rango), "* %s cae al piso debido a un shock electrico", giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							GameTextForPlayer(suspect, "~r~Tazeado", 2500, 3);
							TogglePlayerControllable(suspect, 0);
							ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
							PlayerCuffed[suspect] = 1;
							PlayerCuffedTime[suspect] = 60;
						}
		            }
					else
					{
					    SendClientMessage(playerid, GRIS, "El usuario debe estar cerca tuyo");
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Solo miembros del departamento de policia");
			}
		}
	    return 1;
	}
	if(strcmp(cmd, "/quitar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /quitar [Elemento] [Usuario]");
	  			SendClientMessage(playerid, BLANCO, "Crack - Adrenalina - Codificadores - Materiales");
	  			SendClientMessage(playerid, BLANCO, "LCoches - LBote - LVuelo - LArmas");
				return 1;
			}
			if(strcmp(x_nr,"Crack",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, DORADO, "Utiliza: /quitar [Elemento] [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new giveplayername[64];
						    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						    format(rango, sizeof(rango), "* Le has quitado todo el crack a %s", giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* El oficial %s te ha quitado todo el crack que tenias", NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s le quita todo el crack a %s", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							Informacion[giveplayerid][Crack] = 0;
						}
				        else
						{
						    SendClientMessage(playerid, GRIS, "   El jugador no esta cerca tuyo !");
						    return 1;
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "   Este jugador esta desconectado !");
				    return 1;
				}
			}
			if(strcmp(x_nr,"Adrenalina",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, DORADO, "Utiliza: /quitar [Elemento] [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new giveplayername[64];
						    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						    format(rango, sizeof(rango), "* Le has quitado toda la Adrenalina a %s", giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* El oficial %s te ha quitado toda la Adrenalina que tenias", NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s le quita toda la Adrenalina a %s", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							Informacion[giveplayerid][Adrenalina] = 0;
						}
				        else
						{
						    SendClientMessage(playerid, GRIS, "   El jugador no esta cerca tuyo !");
						    return 1;
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "   Este jugador esta desconectado !");
				    return 1;
				}
			}
			if(strcmp(x_nr,"Codificadores",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, DORADO, "Utiliza: /quitar [Elemento] [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new giveplayername[64];
						    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						    format(rango, sizeof(rango), "* Le has quitado todos los Codificadores a %s", giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* El oficial %s te ha quitado todos los Codificadores que tenias", NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s le quita todos los Codificadores a %s", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							Informacion[giveplayerid][Codificadores] = 0;
						}
				        else
						{
						    SendClientMessage(playerid, GRIS, "   El jugador no esta cerca tuyo !");
						    return 1;
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "   Este jugador esta desconectado !");
				    return 1;
				}
			}
			if(strcmp(x_nr,"Materiales",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, DORADO, "Utiliza: /quitar [Elemento] [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new giveplayername[64];
						    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						    format(rango, sizeof(rango), "* Le has quitado todos los Materiales a %s", giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* El oficial %s te ha quitado todos los Materiales que tenias", NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s le quita todos los Materiales a %s", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							Informacion[giveplayerid][Materiales] = 0;
						}
				        else
						{
						    SendClientMessage(playerid, GRIS, "   El jugador no esta cerca tuyo !");
						    return 1;
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "   Este jugador esta desconectado !");
				    return 1;
				}
			}
			if(strcmp(x_nr,"LCoches",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, DORADO, "Utiliza: /quitar [Elemento] [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new giveplayername[64];
						    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						    format(rango, sizeof(rango), "* Le has quitado la licencia de conducir a %s", giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* El oficial %s te ha quitado la licencia de conducir que tenias", NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s le quita la licencia de conducir a %s", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							Informacion[giveplayerid][LCoche] = 0;
						}
				        else
						{
						    SendClientMessage(playerid, GRIS, "   El jugador no esta cerca tuyo !");
						    return 1;
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "   Este jugador esta desconectado !");
				    return 1;
				}
			}
			if(strcmp(x_nr,"LVuelo",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, DORADO, "Utiliza: /quitar [Elemento] [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new giveplayername[64];
						    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						    format(rango, sizeof(rango), "* Le has quitado la licencia de vuelo a %s", giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* El oficial %s te ha quitado la licencia de vuelo que tenias", NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s le quita la licencia de vuelo a %s", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							Informacion[giveplayerid][LVuelo] = 0;
						}
				        else
						{
						    SendClientMessage(playerid, GRIS, "   El jugador no esta cerca tuyo !");
						    return 1;
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "   Este jugador esta desconectado !");
				    return 1;
				}
			}
			if(strcmp(x_nr,"LBote",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, DORADO, "Utiliza: /quitar [Elemento] [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new giveplayername[64];
						    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						    format(rango, sizeof(rango), "* Le has quitado la licencia de bote a %s", giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* El oficial %s te ha quitado la licencia de bote que tenias", NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s le quita la licencia de bote a %s", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							Informacion[giveplayerid][LBote] = 0;
						}
				        else
						{
						    SendClientMessage(playerid, GRIS, "   El jugador no esta cerca tuyo !");
						    return 1;
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "   Este jugador esta desconectado !");
				    return 1;
				}
			}
			if(strcmp(x_nr,"LArmas",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, DORADO, "Utiliza: /quitar [Elemento] [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new giveplayername[64];
						    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						    format(rango, sizeof(rango), "* Le has quitado la licencia de armas a %s", giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* El oficial %s te ha quitado la licencia de armas que tenias", NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s le quita la licencia de armas a %s", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							Informacion[giveplayerid][LArmas] = 0;
						}
				        else
						{
						    SendClientMessage(playerid, GRIS, "   El jugador no esta cerca tuyo !");
						    return 1;
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "   Este jugador esta desconectado !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Nombre erroneo");
				return 1;
			}
	    }
	    else
	    {
	        SendClientMessage(playerid, GRIS, "Solo miembros del departamento de policia puede Utilizar este comando");
	        return 1;
	    }
	    return 1;
	}
	if(strcmp(cmd, "/forzar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Faccion] != LSPD)
			{
			    SendClientMessage(playerid, GRIS, "Solo miembros del departamento de policia pueden Utilizar este comando");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /forzar [Usuario]");
				return 1;
			}
			new newcar = GetPlayerVehicleID(playerid);
			new playa;
			playa = ReturnUser(tmp);
			if(newcar >= 19 && newcar <= 61)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            new Float:x, Float:y, Float:z;
			            GetPlayerPos(playa,x,y,z);
			            if(PlayerToPoint(5, playerid, x, y, z))
			            {
			            	PutPlayerInVehicle(playa, newcar,1);
			            	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(rango, sizeof(rango), "* %s arrastra a %s hasta su patrulla y cierra las puertas", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
						}
						else
						{
							SendClientMessage(playerid, GRIS, "Debes estar cerca del usuario");
						}
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Debes estar en un vehiculo policial");
			}
	    }
	    return 1;
	}
    if(strcmp(cmd, "/desrentarcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(Informacion[playerid][Casa] != 255 && strcmp(playername, HouseInfo[Informacion[playerid][Casa]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, GRIS, "No eres due�o de esta propiedad");
				return 1;
			}
			Informacion[playerid][Casa] = 255;
			SendClientMessage(playerid, VERDE, "Has desrentado tu casa, no tienes lugar donde vivir!");
		}
		return 1;
	}
	if(strcmp(cmd, "/rentarcasa", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(Informacion[playerid][Casa] != 255 && strcmp(playername, HouseInfo[Informacion[playerid][Casa]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, GRIS, "Ya tienes una casa, Utiliza /vendercasa para venderla");
						return 1;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hRent])
					{
						Informacion[playerid][Casa] = h;
						GivePlayerMoney(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						SetPlayerInterior(playerid,HouseInfo[h][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
						SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						GameTextForPlayer(playerid, "~w~Propiedad Alquilada con exito!", 5000, 3);
						Informacion[playerid][Interior] = HouseInfo[h][hInt];
						HouseEntered[playerid] = h;
						OnPropUpdate();
						return 1;
					}
					else
					{
						SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para esto");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/preciogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new bouse = Informacion[playerid][Negocio];
			if (bouse == 255)
			{
				SendClientMessage(playerid, GRIS, "   No eres due�o de una gasolineria!");
				return 1;
			}
			if(bouse < 500)
			{
			    SendClientMessage(playerid, GRIS, "   No eres due�o de una gasolineria!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /preciogas [Precio]");
				return 1;
			}
			if(strval(tmp) < 0 || strval(tmp) > 100)
			{
				SendClientMessage(playerid, GRIS, "Precio de gas minimo es $0, Precio de gas maximo es $100");
				return 1;
			}
			GasInfo[bouse-500][gPrecioComGas] = strval(tmp);
			format(rango, sizeof(rango), "Precio de gas se ha cambiado a $%d.", GasInfo[bouse-500][gPrecioComGas]);
			OnPropUpdate();
			SendClientMessage(playerid, VERDE, rango);
		}
		return 1;
	}
	if(strcmp(cmd, "/extorsion", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = Informacion[playerid][Negocio];
			if (bouse == 255)
			{
				SendClientMessage(playerid, GRIS, "   No eres due�o de un negocio");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, DORADO, "Utiliza: /extorsion [Usuario] (999 para Desactivar)");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			        format(rango, sizeof(rango), "* %s ahora esta extorsionando tu negocio.",giveplayer);
			        SendClientMessage(playerid, BLANCO, rango);
			        format(rango, sizeof(rango), "* %s ha adaptado su negocio, ahora extorsionas en el negocio.",NombreEx(playerid));
			        SendClientMessage(giveplayerid, VERDE, rango);
			        if (bouse >= 100)
					{
					    format(rango, sizeof(rango), "%s",giveplayer);
						strmid(SBizzInfo[bouse-100][sbExtortion], rango, 0, sizeof(rango), 255);
						format(rango, sizeof(rango), "Nombre de extorsionador ha sido cambiado por %s",SBizzInfo[bouse-100][sbExtortion]);
					}
					else
					{
					    format(rango, sizeof(rango), "%s",giveplayer);
						strmid(BizzInfo[bouse][bExtortion], rango, 0, sizeof(rango), 255);
						format(rango, sizeof(rango), "Nombre de extorsionador ha sido cambiado por %s",BizzInfo[bouse][bExtortion]);
					}
					OnPropUpdate();
					SendClientMessage(playerid, VERDE, rango);
			    }
			}
			else if(giveplayerid == 999)
			{
			    if (bouse >= 100)
				{
				    format(rango, sizeof(rango), "Nadie");
					strmid(SBizzInfo[bouse-100][sbExtortion], rango, 0, sizeof(rango), 255);
					format(rango, sizeof(rango), "Nombre de extorsionador ha sido cambiado por %s",SBizzInfo[bouse-100][sbExtortion]);
				}
				else
				{
				    format(rango, sizeof(rango), "Nadie");
					strmid(BizzInfo[bouse][bExtortion], rango, 0, sizeof(rango), 255);
					format(rango, sizeof(rango), "Nombre de extorsionador ha sido cambiado por %s",BizzInfo[bouse][bExtortion]);
				}
				OnPropUpdate();
				SendClientMessage(playerid, VERDE, rango);
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "   Este jugador esta desconectado !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/preciolocal", true) == 0)
	{
		new bouse = Informacion[playerid][Negocio];
		if (bouse == 255)
		{
			SendClientMessage(playerid, GRIS, "   No eres due�o de un negocio");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, DORADO, "Usa: /preciolocal [Valor]");
		}
		if(strval(tmp) < 1 || strval(tmp) > 1500000)
		{
			SendClientMessage(playerid, DORADO, "Monto minimo es $1, Monto maximo es $1500000.");
			return 1;
		}
		if(bouse >= 500)
		{
			GasInfo[bouse-500][gPrecioLocal] = strval(tmp);
			if(strval(tmp) >= 1)
			{
				format(rango, sizeof(rango), "El precio del local ha sido establecido en $%d.", GasInfo[bouse-500][gPrecioLocal]);
				GasInfo[bouse-500][EnVenta] = 1;
			}
			else if(strval(tmp) <= 0)
			{
			    format(rango, sizeof(rango), "El local ya no est� en venta.");
			    GasInfo[bouse-500][EnVenta] = 0;
			}
		}
		else if (bouse >= 100 && bouse < 500)
		{
			SBizzInfo[bouse-100][sbBuyPrice] = strval(tmp);
			if(strval(tmp) >= 1)
			{
			    format(rango, sizeof(rango), "El precio del local ha sido establecido en $%d.", SBizzInfo[bouse-100][sbBuyPrice]);
			    SBizzInfo[bouse-100][EnVenta] = 1;
			}
			else if(strval(tmp) <= 0)
			{
			    format(rango, sizeof(rango), "El local ya no est� en venta.");
			    SBizzInfo[bouse-100][EnVenta] = 0;
			}
		}
		else
		{
			BizzInfo[bouse][bBuyPrice] = strval(tmp);
			if(strval(tmp) >= 1)
			{
				format(rango, sizeof(rango), "El precio del local ha sido establecido en $%d.", BizzInfo[bouse][bBuyPrice]);
				BizzInfo[bouse][EnVenta] = 1;
			}
			else if(strval(tmp) <= 0)
			{
			    format(rango, sizeof(rango), "El local ya no est� en venta.");
			    BizzInfo[bouse][EnVenta] = 0;
			}
		}
		OnPropUpdate();
		SendClientMessage(playerid, VERDE, rango);
		return 1;
	}
	if(strcmp(cmd, "/nombrelocal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = Informacion[playerid][Negocio];
			if (bouse == 255)
			{
				SendClientMessage(playerid, GRIS, "No eres due�o de algun negocio");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /nombrelocal [Nombre]");
			}
			if(bouse >= 500)
			{
			    strmid(GasInfo[bouse-500][gMensaje], result, 0, 64, 255);
			    format(rango, sizeof(rango), "Nombre del negocio ha sido cambiado a %s",GasInfo[bouse-500][gMensaje]);
			}
			else if (bouse >= 100 && bouse < 500)
			{
				strmid(SBizzInfo[bouse-100][sbMessage], result, 0, 64, 255);
				format(rango, sizeof(rango), "Nombre del negocio ha sido cambiado a %s",SBizzInfo[bouse-100][sbMessage]);
			}
			else
			{
				strmid(BizzInfo[bouse][bMessage], result, 0, 64, 255);
				format(rango, sizeof(rango), "Nombre del negocio ha sido cambiado a %s",BizzInfo[bouse][bMessage]);
			}
			OnPropUpdate();
			SendClientMessage(playerid, VERDE, rango);
		}
		return 1;
	}
	if(strcmp(cmd, "/rfondos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = Informacion[playerid][Negocio];
			if (bouse == 255)
			{
				SendClientMessage(playerid, GRIS, "No eres due�o de un negocio");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    if(bouse >= 500)
			    {
			        format(rango, sizeof(rango), "Los fondos de tu negocio son: $%d", GasInfo[bouse-500][gCajaFuerte]);
					SendClientMessage(playerid, VERDE, rango);
			    }
				else if (bouse >= 100 && bouse < 500)
				{
					format(rango, sizeof(rango), "Los fondos de tu negocio son: $%d", SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, VERDE, rango);
				}
				else
				{
					format(rango, sizeof(rango), "Los fondos de tu negocio son: $%d", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, VERDE, rango);
				}
				SendClientMessage(playerid, DORADO, "Utiliza: /dfondos [Valor]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dfondos [Valor]");
				return 1;
			}
			if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, GRIS, "No tienes suficiente dinero");
				return 1;
			}
			if(bouse >= 500)
			{
			    if(!PlayerToPoint(100, playerid,GasInfo[bouse-500][gPuntoX],GasInfo[bouse-500][gPuntoY],GasInfo[bouse-500][gPuntoZ]))
				{
					SendClientMessage(playerid, GRIS, "Debes estar en tu negocio");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					GasInfo[bouse-500][gCajaFuerte] += cashdeposit;
					format(rango, sizeof(rango), "Has retirado $%d a los fondos de tu negocio, actualmente tienes $%d de fondos", cashdeposit, GasInfo[bouse-500][gCajaFuerte]);
					OnPropUpdate();
					SendClientMessage(playerid, VERDE, rango);
					return 1;
				}
			}
			else if (bouse >= 100 && bouse < 500)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, GRIS, "Debes estar en tu negocio");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid, cashdeposit);
					SBizzInfo[bouse-100][sbTill] -= cashdeposit;
					ExtortionSBiz(bouse-100, cashdeposit);
					format(rango, sizeof(rango), "Has retirado $%d a los fondos de tu negocio, actualmente tienes $%d de fondos", cashdeposit,SBizzInfo[bouse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, VERDE, rango);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ]))
				{
					SendClientMessage(playerid, GRIS, "Debes estar en tu negocio");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid, cashdeposit);
					SBizzInfo[bouse-100][sbTill] -= cashdeposit;
					ExtortionBiz(bouse, cashdeposit);
					format(rango, sizeof(rango), "Has retirado $%d a los fondos de tu negocio, actualmente tienes $%d de fondos", cashdeposit,BizzInfo[bouse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, VERDE, rango);
					return 1;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dfondos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = Informacion[playerid][Negocio];
			if (bouse == 255)
			{
				SendClientMessage(playerid, GRIS, "No eres due�o de un negocio");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    if(bouse >= 500)
			    {
			        format(rango, sizeof(rango), "Los fondos de tu negocio son: $%d", GasInfo[bouse-500][gCajaFuerte]);
					SendClientMessage(playerid, VERDE, rango);
			    }
				else if (bouse >= 100 && bouse < 500)
				{
					format(rango, sizeof(rango), "Los fondos de tu negocio son: $%d", SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, VERDE, rango);
				}
				else
				{
					format(rango, sizeof(rango), "Los fondos de tu negocio son: $%d", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, VERDE, rango);
				}
				SendClientMessage(playerid, DORADO, "Utiliza: /dfondos [Valor]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dfondos [Valor]");
				return 1;
			}
			if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, GRIS, "No tienes suficiente dinero");
				return 1;
			}
			if(bouse >= 500)
			{
			    if(!PlayerToPoint(100, playerid,GasInfo[bouse-500][gPuntoX],GasInfo[bouse-500][gPuntoY],GasInfo[bouse-500][gPuntoZ]))
				{
					SendClientMessage(playerid, GRIS, "Debes estar en tu negocio");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					GasInfo[bouse-500][gCajaFuerte] += cashdeposit;
					format(rango, sizeof(rango), "Has depositado $%d a los fondos de tu negocio, actualmente tienes $%d de fondos", cashdeposit, GasInfo[bouse-500][gCajaFuerte]);
					OnPropUpdate();
					SendClientMessage(playerid, VERDE, rango);
					return 1;
				}
			}
			else if (bouse >= 100 && bouse < 500)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, GRIS, "Debes estar en tu negocio");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					SBizzInfo[bouse-100][sbTill] += cashdeposit;
					ExtortionSBiz(bouse-100, cashdeposit);
					format(rango, sizeof(rango), "Has depositado $%d a los fondos de tu negocio, actualmente tienes $%d de fondos", cashdeposit,SBizzInfo[bouse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, VERDE, rango);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ]))
				{
					SendClientMessage(playerid, GRIS, "Debes estar en tu negocio");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					BizzInfo[bouse][bTill] += cashdeposit;
					ExtortionBiz(bouse, cashdeposit);
					format(rango, sizeof(rango), "Has depositado $%d a los fondos de tu negocio, actualmente tienes $%d de fondos", cashdeposit,BizzInfo[bouse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, VERDE, rango);
					return 1;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/venderlocal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(Informacion[playerid][Negocio] == 255)
			{
				SendClientMessage(playerid, GRIS, "No eres due�o de un negocio.");
				return 1;
			}
		    if(Informacion[playerid][Negocio] >= 500 && strcmp(playername, GasInfo[Informacion[playerid][Negocio]-500][gPropietario], true) == 0)
			{
			    new bouse = Informacion[playerid][Negocio];
				GasInfo[bouse-500][gVenta] = 0;
				strmid(GasInfo[bouse-500][gPropietario], "El Estado", 0, strlen("El Estado"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~w~Has vendido tu negocio", 10000, 3);
				GasInfo[bouse-500][gCajaFuerte] = 0;
				Informacion[playerid][Negocio] = 255;
				OnPropUpdate();
				return 1;
			}
			else if((Informacion[playerid][Negocio] >= 100 && Informacion[playerid][Negocio] < 500) && strcmp(playername, SBizzInfo[Informacion[playerid][Negocio]-100][sbOwner], true) == 0)
			{
				new bouse = Informacion[playerid][Negocio]-100;
				SBizzInfo[bouse][sbLocked] = 1;
				SBizzInfo[bouse][sbOwned] = 0;
				strmid(SBizzInfo[bouse][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[bouse][sbExtortion], "Nadie", 0, strlen("Nadie"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~w~Has vendido tu negocio", 10000, 3);
				SBizzInfo[bouse][sbTill] = 0;
				Informacion[playerid][Negocio] = 255;
				OnPropUpdate();
				return 1;
			}
			else if(strcmp(playername, BizzInfo[Informacion[playerid][Negocio]][bOwner], true) == 0)
			{
				new bouse = Informacion[playerid][Negocio];
				BizzInfo[bouse][bLocked] = 1;
				BizzInfo[bouse][bOwned] = 0;
				strmid(BizzInfo[bouse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[bouse][bExtortion], "Nadie", 0, strlen("Nadie"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~w~Has vendido tu negocio", 10000, 3);
				BizzInfo[bouse][bTill] = 0;
				Informacion[playerid][Negocio] = 255;
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No eres due�o de un negocio.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/abrir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(Informacion[playerid][Casa] == i)
					{
						if(HouseInfo[i][hLock] == 1)
						{
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~Puerta ~g~Abierta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(HouseInfo[i][hLock] == 0)
						{
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~Puerta ~r~Cerrada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~No tienes llaves", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(Informacion[playerid][Negocio] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Negocio ~g~Abierto", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Negocio ~r~Cerrado", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~No tienes llaves", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(Informacion[playerid][Negocio] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
							SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~w~Negocio ~g~Abierto", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~w~Negocio ~r~Cerrado", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~No tienes llaves", 5000, 6);
						return 1;
					}
				}
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/avendercasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /vendercasa [ID]");
				return 1;
			}
			new house = strval(tmp);
			if (Informacion[playerid][Admin] >= 1338)
			{
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 418;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~has vendido esa casa!", HouseInfo[house][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Solo miembros del staff 1339");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/vendercasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(Informacion[playerid][Casa] == 255)
			{
				SendClientMessage(playerid, GRIS, "No tienes ninguna casa");
				return 1;
			}
			if(Informacion[playerid][Casa] != 255 && strcmp(playername, HouseInfo[Informacion[playerid][Casa]][hOwner], true) == 0)
			{
				new house = Informacion[playerid][Casa];
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 418;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				SendClientMessage(playerid, GRIS, "Has vendido tu propiedad por $%d");
				GivePlayerMoney(playerid,HouseInfo[house][hValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(rango, sizeof(rango), "~w~Propiedad Vendida a ~g~$%d", HouseInfo[house][hValue]);
				GameTextForPlayer(playerid, rango, 10000, 3);
				Informacion[playerid][Casa] = 255;
				if(Informacion[playerid][Interior] == house)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
					Informacion[playerid][Interior] = 0;
				}
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No tienes una casa");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cambiarrenta", true) == 0 || strcmp(cmd, "/fijarrenta", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = Informacion[playerid][Casa];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 255 && strcmp(playername, HouseInfo[Informacion[playerid][Casa]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /cambiarrenta [Valor]");
					return 1;
				}
				if(strval(tmp) < 1 || strval(tmp) > 50000)
				{
					SendClientMessage(playerid, BLANCO, "Renta minima $1, Renta maxima ess $50000.");
					return 1;
				}
				HouseInfo[bouse][hRent] = strval(tmp);
				OnPropUpdate();
				format(rango, sizeof(rango), "El precio de renta de tu casa ha cambiado a $%d", HouseInfo[bouse][hRent]);
				SendClientMessage(playerid, VERDE, rango);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No tienes una casa");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/estadorenta", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = Informacion[playerid][Casa];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 255 && strcmp(playername, HouseInfo[Informacion[playerid][Casa]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /estadorenta [0/1]");
				}
				HouseInfo[bouse][hRentabil] = strval(tmp);
				OnPropUpdate();
				format(rango, sizeof(rango), "El Precio de renta de la casa ha esta a $%d", HouseInfo[bouse][hRentabil]);
				SendClientMessage(playerid, VERDE, rango);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No tienes una casa");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp("/asensor", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(Informacion[playerid][Faccion] == LSPD)
	    	{
	    	    if(PlayerToPoint(3, playerid, 258.2337,86.5617,1002.4453))
				{
					ShowPlayerDialog(playerid, Asensor, DIALOG_STYLE_MSGBOX, "- Asensor LSPD","�A d�nde desea ir oficial?","Garage","Azotea");
				}
				else
				{
					SendClientMessage(playerid, GRIS, "Debes estar en la puerta del elevador de LSPD");
					return 1;
				}
			}
			return 1;
		}
	}
    if(strcmp(cmd, "/desvendar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /desvendar [Usuario]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(EstaVendado[giveplayerid] == 0)
				    {
				        SendClientMessage(playerid, GRIS, "El jugador no esta vendado");
				        return 1;
				    }
					if (RangoCercanoS(8.0, playerid, giveplayerid))
					{
					    new car = GetPlayerVehicleID(playerid);
					    if(giveplayerid == playerid) { SendClientMessage(playerid, GRIS, "No puedes atarte a ti mismo!"); return 1; }
					    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(rango, sizeof(rango), "* Has sido desvendado, gracias a %s", NombreEx(playerid));
							SendClientMessage(giveplayerid, ROJO, rango);
							format(rango, sizeof(rango), "* Has devendado a %s", giveplayer);
							SendClientMessage(playerid, VERDE, rango);
							format(rango, sizeof(rango), "* %s saca la venda de la cabeza de %sa", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							GameTextForPlayer(giveplayerid, "~g~Desvendado", 2500, 3);
							EstaVendado[giveplayerid] = 0;
							SetCameraBehindPlayer(giveplayerid);
						}
					    else
					    {
					        SendClientMessage(playerid, GRIS, "El jugador no esta en tu auto, o no eres el conductor!");
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador no esta cerca tuyo!");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Este jugador esta desconectado");
			    return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/vendar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(Venda[playerid] == 1)
		    {
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /vendar [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(EstaVendado[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, GRIS, "El jugador ya esta vendado");
					        return 1;
					    }
						if (RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, GRIS, "No puedes atarte a ti mismo!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		        				SetPlayerCameraPos(giveplayerid, 2000,-2000,2000);
								SetPlayerCameraLookAt(giveplayerid, 2000,-2000,2000);
						        format(rango, sizeof(rango), "* Has sido vendado por %s, no ves nada!", NombreEx(playerid));
								SendClientMessage(giveplayerid, ROJO, rango);
								format(rango, sizeof(rango), "* Has vendado a %s con una venda, para recuperarla usa /desvendar", giveplayer);
								SendClientMessage(playerid, VERDE, rango);
								format(rango, sizeof(rango), "* %s venda a %s con una venda oscura", NombreEx(playerid) ,giveplayer);
								RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
								GameTextForPlayer(giveplayerid, "~r~Vendado", 2500, 3);
								EstaVendado[giveplayerid] = 1;
						    }
						    else
						    {
						        SendClientMessage(playerid, GRIS, "El jugador no esta en tu auto, o no eres el conductor!");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, GRIS, "El jugador no esta cerca tuyo!");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "Este jugador esta desconectado");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Necesitas tener una venda");
			    return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/desatar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /desatar [Usuario]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(EstaAtado[giveplayerid] == 0)
				    {
				        SendClientMessage(playerid, GRIS, "El jugador ya esta desatado");
				        return 1;
				    }
					if (RangoCercanoS(8.0, playerid, giveplayerid))
					{
					    new car = GetPlayerVehicleID(playerid);
					    if(giveplayerid == playerid) { SendClientMessage(playerid, GRIS, "No puedes atarte a ti mismo!"); return 1; }
					    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(rango, sizeof(rango), "* Has sido desatado por %s, recuerda huir, pero con ROL!", NombreEx(playerid));
							SendClientMessage(giveplayerid, ROJO, rango);
							format(rango, sizeof(rango), "* Has desatado a %s", giveplayer);
							SendClientMessage(playerid, VERDE, rango);
							format(rango, sizeof(rango), "* %s desata a %s con un cuchillo", NombreEx(playerid) ,giveplayer);
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							GameTextForPlayer(giveplayerid, "~g~Desatado", 2500, 3);
							TogglePlayerControllable(giveplayerid, DESCONGELADO);
							EstaAtado[giveplayerid] = 0;
					    }
					    else
					    {
					        SendClientMessage(playerid, GRIS, "El jugador no esta en tu auto, o no eres el conductor!");
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador no esta cerca tuyo!");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Este jugador esta desconectado");
			    return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/atar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(Cuerda[playerid] == 1)
		    {
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /atar [Usuario]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(EstaAtado[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, GRIS, "El jugador ya esta atado");
					        return 1;
					    }
						if (RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, GRIS, "No puedes atarte a ti mismo!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						        format(rango, sizeof(rango), "* Has sido atado por %s, hasta que te desaten estaras congelado", NombreEx(playerid));
								SendClientMessage(giveplayerid, ROJO, rango);
								format(rango, sizeof(rango), "* Has atado a %s con una cuerda, para recuperarla usa /desatar", giveplayer);
								SendClientMessage(playerid, VERDE, rango);
								format(rango, sizeof(rango), "* %s ata a %s con una soga gruesa.", NombreEx(playerid) ,giveplayer);
								RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
								GameTextForPlayer(giveplayerid, "~r~Atado", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								EstaAtado[giveplayerid] = 1;
						    }
						    else
						    {
						        SendClientMessage(playerid, GRIS, "El jugador no esta en tu auto, o no eres el conductor!");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, GRIS, "El jugador no esta cerca tuyo!");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "Este jugador esta desconectado");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Necesitas tener una cuerda");
			    return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd,"/borrarc",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Faccion] == LSTV)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /borrarc [Comercial] (1-5)");
					return 1;
				}
				new comer = strval(tmp);
				if(comer < 1 || comer > 5) { SendClientMessage(playerid, GRIS, "S�lo hay 5 comerciales"); return 1; }
				if(comer == 1)
				{
				    ClearComerciales(0);
					SendClientMessage(playerid, VERDE, "Comercial Borrado");
					return 1;
				}
				else if(comer == 2)
				{
				    ClearComerciales(1);
					SendClientMessage(playerid, VERDE, "Comercial Borrado");
					return 1;
				}
				else if(comer == 3)
				{
				    ClearComerciales(2);
					SendClientMessage(playerid, VERDE, "Comercial Borrado");
					return 1;
				}
				else if(comer == 4)
				{
				    ClearComerciales(3);
					SendClientMessage(playerid, VERDE, "Comercial Borrado");
					return 1;
				}
				else if(comer == 5)
				{
				    ClearComerciales(4);
					SendClientMessage(playerid, VERDE, "Comercial Borrado");
					return 1;
				}
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/borrartc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Faccion] == LSTV)
			{
                ClearComerciales(0);
                ClearComerciales(1);
                ClearComerciales(2);
                ClearComerciales(3);
                ClearComerciales(4);
                SendClientMessage(playerid, VERDE, "Todos los comerciales borrados");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/nuevoc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Faccion] == LSTV)
			{
			    if(ComerInfo[0][cNumero] == 0)
			    {
			        numerocomer[playerid] = 0;
                    ShowPlayerDialog(playerid,DialogNCo1,DIALOG_STYLE_INPUT,"Titulo","Escribe un titulo para el comercial:","Listo","Cancelar");
                    return 1;
			    }
				else if(ComerInfo[1][cNumero] == 0)
				{
				    numerocomer[playerid] = 1;
				    ShowPlayerDialog(playerid,DialogNCo1,DIALOG_STYLE_INPUT,"Titulo","Escribe un titulo para el comercial:","Listo","Cancelar");
                    return 1;
				}
				else if(ComerInfo[2][cNumero] == 0)
				{
				    numerocomer[playerid] = 2;
				    ShowPlayerDialog(playerid,DialogNCo1,DIALOG_STYLE_INPUT,"Titulo","Escribe un titulo para el comercial:","Listo","Cancelar");
                    return 1;
				}
				else if(ComerInfo[3][cNumero] == 0)
				{
				    numerocomer[playerid] = 3;
				    ShowPlayerDialog(playerid,DialogNCo1,DIALOG_STYLE_INPUT,"Titulo","Escribe un titulo para el comercial:","Listo","Cancelar");
                    return 1;
				}
				else if(ComerInfo[4][cNumero] == 0)
				{
				    numerocomer[playerid] = 4;
				    ShowPlayerDialog(playerid,DialogNCo1,DIALOG_STYLE_INPUT,"Titulo","Escribe un titulo para el comercial:","Listo","Cancelar");
                    return 1;
				}
				else{ SendClientMessage(playerid, ROJO, "No puedes publicar m�s comerciales, borra alguno"); return 1; }
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/entrevista", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Faccion] == LSTV)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, GRIS, "* La entrevista ha finalizado");
			        SendClientMessage(TalkingLive[playerid], ROJIZO, "* Entrevista en vivo ha sido finalizada");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return 1;
			    }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /entrevista [Usuario]");
					return 1;
				}
		        giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (RangoCercanoS(5.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, GRIS, "No puedes entrevistarte a ti mismo"); return 1; }
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(rango, sizeof(rango), "* Has ofrecido a %s tener una entrevista en vivo.", giveplayer);
							SendClientMessage(playerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s le ofrese un microfono a %s", NombreEx(playerid),NombreEx(giveplayerid));
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							format(rango, sizeof(rango), "{FFFFFF}El Reportero de CNN San Andreas %s desea entrevistarte", NombreEx(playerid));
							ShowPlayerDialog(giveplayerid, OLive, DIALOG_STYLE_MSGBOX, "- CNN San Andreas",rango,"Aceptar","Ignorar");
							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, GRIS, "Estas demaciado lejos del usuario");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "Nombre dle jugador invalido o no se encuentra conectado");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "No eres miembro de CNN San Andreas");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/n", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Faccion] == LSTV)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /noticias [Texto]");
					return 1;
				}
				format(rango, sizeof(rango), "{00BBFF}[CNN San Andreas] %s: {FFFFFF}%s", NombreEx(playerid), result);
				SendClientMessageToAll(BLANCO,rango);
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Solo miembros de CNN San Andreas");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aire", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == LSTV)
	        {
	            if(TelevisorON == 0)
	            {
	                TelevisorON = 1;
					new Float:xpos,Float:ypos,Float:zpos;
					GetPlayerPos(playerid, xpos,ypos,zpos);
					CamaraPosX = xpos;
					CamaraPosY = ypos;
					CamaraPosZ = zpos;
					CameraInt = GetPlayerInterior(playerid);
					CameraVW = GetPlayerVirtualWorld(playerid);
					for(new i=0;i<MAX_PLAYERS;i++)
			        {
			            if(ViendoTele[i] == 1)
			            {
                            SetPlayerCameraPos(i, CamaraPosX, CamaraPosY, CamaraPosZ);
							SetPlayerCameraLookAt(i, CamaraPosX, CamaraPosY, CamaraPosZ);
			            }
			        }
	                SendClientMessage(playerid, VERDE, "Estas filmando la escena");
	                return 1;
	            }
	            else
	            {
	                TelevisorON = 0;
	                SendClientMessage(playerid, ROJO, "Has dejado de filmar la escena");
	                return 1;
	            }
	        }
	        else
			{
			    SendClientMessage(playerid, GRIS, "   No eres Reportero !");
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/anunciotele", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == LSTV)
	        {
	            if(TelevisorON == 1)
	            {
	                tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, GRIS, "Usa: Usa: /anunciotele [tiempo (segundos)] [texto]");
						return 1;
					}
	                new time = strval(tmp);
	                new tiempo = (time*1000);
	                new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /anunciotele [tiempo] [texto]");
						SendClientMessage(playerid, BLANCO, "Puedes darle color al anuncio con:");
						SendClientMessage(playerid, BLANCO, "~w~ (Blanco), ~g~ (Verde), ~r~ (Rojo)");
						SendClientMessage(playerid, BLANCO, "~b~ (Azul), ~y~ (Amarillo), ~p~ (Purpura)");
						return 1;
					}
	                for(new i=0;i<MAX_PLAYERS;i++)
			        {
			            if(ViendoTele[i] == 1)
			            {
		                    GameTextForPlayer(i, result, tiempo, 1);
						}
			        }
	            }
	            else
	            {
	                SendClientMessage(playerid, GRIS, "No est�n transmitiendo nada por el televisor");
	                return 1;
	            }
	        }
	        else
			{
			    SendClientMessage(playerid, GRIS, "   No eres Reportero !");
			}
	    }
	    return 1;
	}
    if(strcmp(cmd, "/vertele", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(VerTELEVISOR(playerid))
	        {
	            if(TelevisorON == 1)
	            {
	                if(ViendoTele[playerid] != 1)
	                {
		               	SetPlayerCameraPos(playerid, CamaraPosX-3, CamaraPosY, CamaraPosZ);
						SetPlayerCameraLookAt(playerid, CamaraPosX, CamaraPosY, CamaraPosZ);
		                ViendoTele[playerid] = 1;
		                SendClientMessage(playerid, GRIS, "Est�s viendo el televisor, para terminar de verlo usa /dejartele");
		                new Float:posx,Float:posy,Float:posz;
		                GetPlayerPos(playerid, posx, posy, posz);
		                PlayerTV_X[playerid] = posx;
		                PlayerTV_Y[playerid] = posy;
		                PlayerTV_Z[playerid] = posz;
		                PlayerTV_Int[playerid] = GetPlayerInterior(playerid);
		                PlayerTV_VW[playerid] = GetPlayerVirtualWorld(playerid);
                        SetPlayerInterior(playerid, CameraInt);
	                	SetPlayerVirtualWorld(playerid, CameraVW);
	                	SetPlayerPos(playerid, 666.5461,-2621.4941,-0.2059);
		                return 1;
		            }
		            else
		            {
		                SendClientMessage(playerid, GRIS, "Ya est�s viendo el televisor");
	                	return 1;
		            }
	            }
	            else
	            {
	                SendClientMessage(playerid, GRIS, "No est�n mostrando nada interesante en el televisor");
	                return 1;
	            }
	        }
	    }
	    return 1;
	}
    if(strcmp(cmd, "/dejartele", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(VerTELEVISOR(playerid))
	        {
                if(ViendoTele[playerid] == 1)
                {
	                SetCameraBehindPlayer(playerid);
	                ViendoTele[playerid] = 0;
	                SetPlayerPos(playerid, 666.5461,-2621.4941,10.0);
	                SetPlayerPos(playerid, 666.5461,-2621.4941,10.0);
	                SetPlayerPos(playerid, PlayerTV_X[playerid], PlayerTV_Y[playerid], PlayerTV_Z[playerid]);
	                SetPlayerInterior(playerid, PlayerTV_Int[playerid]);
	                SetPlayerVirtualWorld(playerid, PlayerTV_VW[playerid]);
	                SendClientMessage(playerid, ROJO, "Has dejado de ver el televisor");
	                return 1;
	            }
	            else
	            {
	                SendClientMessage(playerid, GRIS, "No est�s viendo el televisor");
                	return 1;
	            }
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/multar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == LSPD)
	        {
		    	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /multar [Usuario] [Precio] [Razon]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /multar [Usuario] [Precio] [Razon]");
					return 1;
				}
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 10000) { SendClientMessage(playerid, GRIS, "�El precio de la multa es entre 1 y 10000!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, DORADO, "Utiliza: /multar [Usuario] [Precio] [Razon]");
								return 1;
							}
							format(rango, sizeof(rango), "* Le diste una multa a %s de $%d por %s", giveplayer, moneys, (result));
							SendClientMessage(playerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "* %s hace una multa y se la entrega a %s", NombreEx(playerid),NombreEx(giveplayerid));
							RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							format(rango, sizeof(rango), "{FF0000}�Estas Detenido!\n{FFFFFF}Has sido detenido por el oficial %s\nRazones: %s\nPrecio: $%d", NombreEx(playerid), (result), moneys);
							ShowPlayerDialog(giveplayerid, OMulta, DIALOG_STYLE_MSGBOX, "- LSPD",rango,"Pagar","Huir");
							TicketOffer[giveplayerid] = playerid;
							TicketMoney[giveplayerid] = moneys;
							return 1;
						}
						else
						{
							SendClientMessage(playerid, GRIS, "El jugador no est� cerca tuyo!");
							return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador no est� conectado!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "No eres SFPD!");
			    return 1;
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/rcajafuerte", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Faccion] == PRES)
	        {
                if(PlayerToPoint(3.2,playerid,357.3463,149.7496,1025.7891))
                {
                    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /rcajafuerte [monto]");
						format(rango, sizeof(rango), "  El local tiene $%d de fondos.", CajaGobierno);
						SendClientMessage(playerid, BLANCO, rango);
						return 1;
					}
					new cashretirar = strval(tmp);
					if(cashretirar > CajaGobierno || cashretirar < 1) { SendClientMessage(playerid, GRIS, "No dispones de esa cantidad en la caja fuerte"); return 1; }
					GivePlayerMoney(playerid, cashretirar);
					CajaGobierno -= cashretirar;
					GuardarFondos();
					format(rango, sizeof(rango), "  Has retirado $%d de la caja fuerte del local, Total: $%d ", cashretirar,CajaGobierno);
					SendClientMessage(playerid, VERDE, rango);
					return 1;
                }
                else
                {
                    SendClientMessage(playerid, GRIS, "No estas cerca de la caja fuerte");
                    return 1;
                }
	        }
		    if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Faccion] == YAKU)
	        {
                if(PlayerToPoint(3.2,playerid,2328.0891,-1015.3521,1054.7111))
                {
                    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /rcajafuerte [monto]");
						format(rango, sizeof(rango), "  El local tiene $%d de fondos.", CajaFuerteYKZ);
						SendClientMessage(playerid, BLANCO, rango);
						return 1;
					}
					new cashretirar = strval(tmp);
					if(cashretirar > CajaFuerteYKZ || cashretirar < 1) { SendClientMessage(playerid, GRIS, "No dispones de esa cantidad en la caja fuerte"); return 1; }
					GivePlayerMoney(playerid, cashretirar);
					CajaFuerteYKZ -= cashretirar;
					GuardarFondos();
					format(rango, sizeof(rango), "  Has retirado $%d de la caja fuerte del local, Total: $%d ", cashretirar,CajaFuerteYKZ);
					SendClientMessage(playerid, VERDE, rango);
					return 1;
                }
                else
                {
                    SendClientMessage(playerid, GRIS, "No estas cerca de la caja fuerte");
                    return 1;
                }
	        }
	        else if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Faccion] == LEON)
	        {
	            if(PlayerToPoint(3.2,playerid,1230.7491,-807.3076,1084.0078))
	            {
	                tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /rcajafuerte [monto]");
						format(rango, sizeof(rango), "  El local tiene $%d de fondos.", CajaFuerteLCN);
						SendClientMessage(playerid, BLANCO, rango);
						return 1;
					}
					new cashretirar = strval(tmp);
					if(cashretirar > CajaFuerteLCN || cashretirar < 1) { SendClientMessage(playerid, GRIS, "No dispones de esa cantidad en la caja fuerte"); return 1; }
					GivePlayerMoney(playerid, cashretirar);
					CajaFuerteLCN -= cashretirar;
					GuardarFondos();
					format(rango, sizeof(rango), "  Has retirado $%d de la caja fuerte del local, Total: $%d ", cashretirar,CajaFuerteLCN);
					SendClientMessage(playerid, VERDE, rango);
					return 1;
	            }
	            else
                {
                    SendClientMessage(playerid, GRIS, "No estas cerca de la caja fuerte");
                    return 1;
                }
	        }
	    }
	    return 1;
	}
    if(strcmp(cmd, "/dcajafuerte", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Faccion] == PRES)
	        {
                if(PlayerToPoint(3.2,playerid,357.3463,149.7496,1025.7891))
                {
                    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /dcajafuerte [monto]");
						format(rango, sizeof(rango), "  El local tiene $%d de fondos.", CajaGobierno);
						SendClientMessage(playerid, BLANCO, rango);
						return 1;
					}
					new cashretirar = strval(tmp);
					if(GetPlayerMoney(playerid) < cashretirar || cashretirar < 1) { SendClientMessage(playerid, GRIS, "No dispones de esa cantidad"); return 1; }
					GivePlayerMoney(playerid, -cashretirar);
					CajaGobierno += cashretirar;
					GuardarFondos();
					format(rango, sizeof(rango), "  Has depositadp $%d de la caja fuerte del local, Total: $%d ", cashretirar,CajaGobierno);
					SendClientMessage(playerid, VERDE, rango);
					return 1;
                }
                else
                {
                    SendClientMessage(playerid, GRIS, "No estas cerca de la caja fuerte");
                    return 1;
                }
	        }
	        if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Faccion] == YAKU)
	        {
                if(PlayerToPoint(3.2,playerid,2328.0891,-1015.3521,1054.7111))
                {
                    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /dcajafuerte [monto]");
						format(rango, sizeof(rango), "  El local tiene $%d de fondos.", CajaFuerteYKZ);
						SendClientMessage(playerid, BLANCO, rango);
						return 1;
					}
					new cashretirar = strval(tmp);
					if(GetPlayerMoney(playerid) < cashretirar || cashretirar < 1) { SendClientMessage(playerid, GRIS, "No dispones de esa cantidad"); return 1; }
					GivePlayerMoney(playerid, -cashretirar);
					CajaFuerteYKZ += cashretirar;
					GuardarFondos();
					format(rango, sizeof(rango), "  Has depositadp $%d de la caja fuerte del local, Total: $%d ", cashretirar,CajaFuerteYKZ);
					SendClientMessage(playerid, VERDE, rango);
					return 1;
                }
                else
                {
                    SendClientMessage(playerid, GRIS, "No estas cerca de la caja fuerte");
                    return 1;
                }
	        }
	        else if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Faccion] == LEON)
	        {
	            if(PlayerToPoint(3.2,playerid,1230.7491,-807.3076,1084.0078))
	            {
	                tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /dcajafuerte [monto]");
						format(rango, sizeof(rango), "  El local tiene $%d de fondos.", CajaFuerteLCN);
						SendClientMessage(playerid, BLANCO, rango);
						return 1;
					}
					new cashretirar = strval(tmp);
					if(GetPlayerMoney(playerid) < cashretirar || cashretirar < 1) { SendClientMessage(playerid, GRIS, "No dispones de esa cantidad"); return 1; }
					GivePlayerMoney(playerid, -cashretirar);
					CajaFuerteLCN += cashretirar;
					GuardarFondos();
					format(rango, sizeof(rango), "  Has depositado $%d de la caja fuerte del local, Total: $%d ", cashretirar,CajaFuerteLCN);
					SendClientMessage(playerid, VERDE, rango);
					return 1;
	            }
	            else
                {
                    SendClientMessage(playerid, GRIS, "No estas cerca de la caja fuerte");
                    return 1;
                }
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/maletero", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new car = VehiculoCercano(playerid);
	        if(DistanciaEntreCarPer(car, playerid) > 5) { SendClientMessage(playerid, GRIS, "Debes estar cerca de un vehiculo"); return 1; }
		    GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
		    SetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
		    if(EsUnVehiculoVenta(car))
			{
			    if(CarInfo[car][cLock] == 0)
			    {
			        if(IsPlayerInAnyVehicle(playerid)) { SendClientMessage(playerid, GRIS, "Debes estar fuera del vehiculo para usar este comando"); return 1; }
			        if(boot == 0)
			        {
					    tmp = strtok(cmdtext, idx);
					    if(!strlen(tmp))
					    {
                            SendClientMessage(playerid, DORADO, "Utiliza: /maletero [abrir]");
			    			return 1;
					    }
					    if(strcmp(tmp, "abrir", true) == 0)
					    {
					        SetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,1,objective);
                            GameTextForPlayer(playerid, "~w~Maletero ~g~abierto", 2000, 4);
					        return 1;
					    }
				    }
				    else
				    {
				        tmp = strtok(cmdtext, idx);
					    if(!strlen(tmp))
					    {
                            SendClientMessage(playerid, DORADO, "Utiliza: /maletero [opci�n]");
                            SendClientMessage(playerid, BLANCO, "Opci�n: info, cogerarma, dejararma, cogerchaleco, dejarchaleco, cerrar");
			    			return 1;
					    }
					    if(strcmp(tmp, "cerrar", true) == 0)
					    {
					        SetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,0,objective);
                            GameTextForPlayer(playerid, "~w~Maletero ~r~cerrado", 2000, 4);
					        return 1;
					    }
					    else if(strcmp(tmp, "dejararma", true) == 0)
					    {
					        new arma = GetPlayerWeapon(playerid);
						    new balas = GetPlayerAmmo(playerid);
						    new gunname[25];
			             	GetWeaponName(arma, gunname, sizeof(gunname));
					        if(IDArmaMaletero[car][0] == 0){ IDArmaMaletero[car][0] = arma; MunicionMaletero[car][0] = balas; RemovePlayerWeapon(playerid, arma); }
							else if(IDArmaMaletero[car][1] == 0){ IDArmaMaletero[car][1] = arma; MunicionMaletero[car][1] = balas; RemovePlayerWeapon(playerid, arma); }
							else if(IDArmaMaletero[car][2] == 0){ IDArmaMaletero[car][2] = arma; MunicionMaletero[car][2] = balas; RemovePlayerWeapon(playerid, arma); }
							else if(IDArmaMaletero[car][3] == 0){ IDArmaMaletero[car][3] = arma; MunicionMaletero[car][3] = balas; RemovePlayerWeapon(playerid, arma); }
							else if(IDArmaMaletero[car][4] == 0){ IDArmaMaletero[car][4] = arma; MunicionMaletero[car][4] = balas; RemovePlayerWeapon(playerid, arma); }
							else { SendClientMessage(playerid, GRIS, "No puedes dejar m�s armas en el maletero"); return 1; }
							SaveMaletero();
							format(rango, sizeof(rango), " Has dejado una %s con %d municiones", gunname, balas);
							SendClientMessage(playerid, AZULCLARO, rango);
					        return 1;
					    }
					    else if(strcmp(tmp, "cogerarma", true) == 0)
					    {
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
							    SendClientMessage(playerid, DORADO, "Utiliza:: /maletero [cogerarma] [1-5]");
							    return 1;
							}
							new slot = strval(tmp);
							if(slot < 1 || slot > 5) { SendClientMessage(playerid, GRIS, "S�lo puedes elegir n�meros del 1 al 5"); return 1; }
							slot --;
							if(IDArmaMaletero[car][slot] == 0) { SendClientMessage(playerid, GRIS, " No hay nada ah�"); return 1; }
							else
							{
							    new gunname[25];
								GetWeaponName(IDArmaMaletero[car][slot], gunname, sizeof(gunname));
							    GivePlayerWeapon(playerid, IDArmaMaletero[car][slot], MunicionMaletero[car][slot]);
							    format(rango, sizeof(rango), " Has sacado una %s con %d municiones", gunname, MunicionMaletero[car][slot]);
								SendClientMessage(playerid, AZULCLARO, rango);
								IDArmaMaletero[car][slot] = 0;
								MunicionMaletero[car][slot] = 0;
								SaveMaletero();
								return 1;
							}
					    }
					    else if(strcmp(tmp, "dejarchaleco", true) == 0)
					    {
					        new Float:chaleco;
			                GetPlayerArmour(playerid, chaleco);
			                if(chaleco == 0.0) { SendClientMessage(playerid, GRIS, "No tienes ningun chaleco puesto"); return 1; }
			                if(VidaChalecoMaletero[car] > 0.0)
			                {
			                    SendClientMessage(playerid, GRIS, "Ya tienes un chaleco guardado en el maletero");
			                    return 1;
			                }
		                    SetPlayerArmour(playerid, 0.0);
		                    VidaChalecoMaletero[car] = chaleco;
							SaveMaletero();
							format(rango, sizeof(rango), "Has dejado un chaleco con %f de protecci�n", chaleco);
							SendClientMessage(playerid, AZULCLARO, rango);
							return 1;
					    }
					    else if(strcmp(tmp, "cogerchaleco", true) == 0)
					    {
					        if(VidaChalecoMaletero[car] <= 0.0)
			                {
			                    SendClientMessage(playerid, GRIS, "No tienes un chaleco guardado en el maletero");
			                    return 1;
			                }
					        new Float:chaleco2;
			                GetPlayerArmour(playerid, chaleco2);
			                if(chaleco2 > 0.0) { SendClientMessage(playerid, GRIS, "Ya tienes un chaleco puesto"); return 1; }
			                SetPlayerArmour(playerid, VidaChalecoMaletero[car]);
			                format(rango, sizeof(rango), "Has sacado un chaleco con %f de protecci�n", VidaChalecoMaletero[car]);
		                    VidaChalecoMaletero[car] = 0.0;
							SaveMaletero();
							SendClientMessage(playerid, AZULCLARO, rango);
							return 1;
					    }
					    else if(strcmp(tmp, "info", true) == 0)
					    {
					        SendClientMessage(playerid, AZULCLARO, "|________________MALETERO________________|");
					        for(new i=0; i<5; i++)
					        {
					            new e=i;
								if(IDArmaMaletero[car][i] == 0)
								{
								    format(rango, sizeof(rango), " %d Nada", e+1);
								}
								else
								{
								    new gunname[25];
									GetWeaponName(IDArmaMaletero[car][i], gunname, sizeof(gunname));
									format(rango, sizeof(rango), " %d | %s con %d municiones", e+1, gunname, MunicionMaletero[car][i]);
								}
								SendClientMessage(playerid, BLANCO, rango);
					        }
							format(rango, sizeof(rango), " Chaleco con %f de protecci�n", VidaChalecoMaletero[car]);
							SendClientMessage(playerid, BLANCO, rango);
					    }
				    }
			    }
			    else
			    {
                    SendClientMessage(playerid, GRIS, "No puedes abrir este maletero");
			    	return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "No puedes abrir este maletero");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/proteger", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	       	if(Informacion[playerid][Faccion] == FBI)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /proteger [Usuario] [Precio]");
					return 1;
				}
				new money;
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { return 1; }
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, GRIS, "   El precio no debe ser menor a 1, o sobre 99999!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid)
						    {
						        SendClientMessage(playerid, GRIS, "   No puedes protegerte a t� mismo !");
						        return 1;
						    }
							new player;
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    format(rango, sizeof(rango), "* Has ofrecido proteccion a %s por $%d.", giveplayer, money);
							SendClientMessage(playerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "{FFFFFF}El detective %s te ofrese proteccion a $%d", NombreEx(playerid), money);
							ShowPlayerDialog(player, OGuarda, DIALOG_STYLE_MSGBOX, "- Oferta",rango,"Aceptar","Ignorar");
							GuardOffer[giveplayerid] = playerid;
							GuardPrice[giveplayerid] = money;
						}
						else
						{
						    SendClientMessage(playerid, GRIS, "   El jugador no esta cerca de t� !");
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "   Este jugador est� desconectado!");
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No eres guardaespaldas!");
				return 1;
		    }
		}
		return 1;
	}
	if(strcmp(cmd,"/remolcar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(Informacion[playerid][Faccion] == MECA || Informacion[playerid][Faccion] == LSPD)
		    {
		        if(IsPlayerInAnyVehicle(playerid))
		        {
			    	if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
		     	   	{
		     	   	    if(GetPlayerState(playerid)==2)
		     	   	    {
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
			   					vid++;
			   					GetVehiclePos(vid,vX,vY,vZ);
			   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
			   				    	Found=1;
			   				    	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			           				{
			   				        	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						           	}
						           	else
						           	{
			    						AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
			 					}
			     			}
							if(!Found)
				 			{
			   					SendClientMessage(playerid,GRIS,"No hay ning�n veh�culo cerca para remolcar.");
			   				}
						}
						else
						{
							SendClientMessage(playerid, GRIS, "Tienes que ser el conductor para poder remolcar!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, GRIS, "Necesitas estar en una gr�a para remolcar!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, GRIS, "No puedes remolcar a pie!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid,GRIS,"Debes ser de la facci�n para Utilizar este comando!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tunear", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerToPoint(3.0,playerid,2529.7273,-2112.8933,13.5542))
			{
		   		if(Informacion[playerid][Faccion] == MECA)
			    {
					if(IsPlayerInAnyVehicle(playerid))
					{
	  					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
					}
					else
					{
						SendClientMessage(playerid, GRIS, "Debes estar en un vehiculo!");
					}
				}
				else
				{
					SendClientMessage(playerid, GRIS, "No eres Mecanico!");
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Debes estar en el area de modificaciones");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/vcontrol", true) == 0)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
		    SendClientMessage(playerid, GRIS, "Debes estar dentro de un coche");
			return 1;
		}
		ShowPlayerDialog(playerid, VPanel, DIALOG_STYLE_LIST, "- Panel Vehiculo","-> Luces\n-> Capo\n-> Maletero","Seleccionar","Cancelar");
		return 1;
	}
	if(strcmp(cmd, "/renovacionextensa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(Informacion[playerid][Faccion] == NFS)
		    {
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        new coche = GetPlayerVehicleID(playerid);
					if(EsUnVehiculoVenta(coche))
					{
                            CarInfo[coche][cTComprado] = 840;
                            GameTextForPlayer(playerid, "Vehiculo Renovado por 1 mes", 1000, 1);
							GetVehicleParamsEx(coche,engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(coche,engine,lights,alarm,0,bonnet,boot,objective);
							format(rango, sizeof(rango), "* %s firma los papeles y renova el contrato de 1 mes", NombreEx(playerid));
							RangoCercano(30, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
							TogglePlayerControllable(playerid, DESCONGELADO);

				    }
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "Debes estar dentro del coche");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Necesitas ser miembro del departamento de propiedades");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/renovar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(Informacion[playerid][Faccion] == NFS)
		    {
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        new coche = GetPlayerVehicleID(playerid);
					if(EsUnVehiculoVenta(coche))
					{
                            CarInfo[coche][cTComprado] = 168;
                            GameTextForPlayer(playerid, "Vehiculo Renovado", 1000, 1);
							GetVehicleParamsEx(coche,engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(coche,engine,lights,alarm,0,bonnet,boot,objective);
							format(rango, sizeof(rango), "* %s firma los papeles y renova el contrato de 7 dias", NombreEx(playerid));
							RangoCercano(30, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
							TogglePlayerControllable(playerid, DESCONGELADO);

				    }
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "Debes estar dentro del coche");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Necesitas ser miembro del departamento de propiedades");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/duda", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
			result[idx - offset] = cmdtext[idx];
			idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /Duda [Texto]");
				return 1;
			}
			format(rango, sizeof(rango), "[DUDA] %s pregunta: %s [ID: %d]", NombreEx(playerid), (result), playerid);
			MensajeAdmin(PURPURA,rango);
			format(rango, sizeof(rango), "La pregunta ha sido enviada a los administradores");
			SendClientMessage(playerid, VERDE, rango);
			new year, month,day;
			getdate(year, month, day);
			format(rango, sizeof(rango), "Duda: %s | Usuario: %s | %d/%d/%d |",result ,NombreEx(playerid), day, month, year);
    		LDudas(rango);
	    }
	    return 1;
	}
	if(strcmp(cmd, "/bug", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
			result[idx - offset] = cmdtext[idx];
			idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /bug [Descipcion]");
				return 1;
			}
			format(rango, sizeof(rango), "Aviso, un nuevo bug ha sido almacenado en la base de datos, avisar al programador", result, playerid);
			MensajeAdmin(PURPURA,rango);
			SendClientMessage(playerid, VERDE, "Envio satisfactorio, su reporte ha sido enviado a la base de datos para que sea revisado");
			SendClientMessage(playerid, BLANCO,"Aviso, los mensajes que ingrese aqui no seran leidos por administradores, solo por el programador OOC");
			new year, month,day;
			getdate(year, month, day);
			format(rango, sizeof(rango), "Reporte: %s | Usuario: %s | %d/%d/%d |",result ,NombreEx(playerid), day, month, year);
    		LBugs(rango);
	    }
	    return 1;
	}
	if(strcmp(cmd, "/anuncio", true) == 0 || strcmp(cmd, "/an", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Telefono] == 0)
	        {
	            SendClientMessage(playerid, GRIS, "No tienes ningun celular");
	            return 1;
	        }
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /anuncio [Texto]");
				return 1;
			}
			if (!adds)
			{
				format(rango, sizeof(rango), "Lo siento, debes esperar %d segundos para Utilizar este comando",  TimeEsperaAd);
				SendClientMessage(playerid, GRIS, rango);
				return 1;

			}
			new payout = idx * 1;
			if(GetPlayerMoney(playerid) < payout)
	        {
	            format(rango, sizeof(rango), "* Has Utilizado %d caracteres a un costo de $%d, no tienes suficiente.", offset, payout);
	            SendClientMessage(playerid, BLANCO, rango);
	            return 1;
	        }
			GivePlayerMoney(playerid, -payout);
			format(rango, sizeof(rango), "[Anuncio] %s, Telefono: %d",  result, Informacion[playerid][Telefono]);
			SendClientMessageToAll(ROJIZO,rango);
			format(rango, sizeof(rango), "~r~Pagado $%d~n~~w~Mensaje de: %d Caracteres", payout, idx);
			GameTextForPlayer(playerid, rango, 5000, 1);
			format(rango, sizeof(rango), " %s [ID:%d] ha publicado un anuncio", NombreEx(playerid), playerid);
			MensajeAdmin(ROJO, rango);
			new year, month,day;
			getdate(year, month, day);
			format(rango, sizeof(rango), "Anuncio: %s | Usuario: %s | %d/%d/%d |",result ,NombreEx(playerid), day, month, year);
    		LAnuncios(rango);
			SetTimer("AddsOn", 60000, 0);
			SetTimer("EsperaAnuncio", 1000, 0);
			adds = 0;
		}
       	return 1;
    }
	if(strcmp(cmd, "/venderganzuas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(Informacion[playerid][Faccion] == MECA)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /venderganzuas [Usuario] [Valor] [Precio]");
				    return 1;
				}
				new player = strval(tmp);
				if(GetDistanceBetweenPlayers(playerid, player) > 5.0)
				{
				    SendClientMessage(playerid, GRIS, "Debes estar cercadel comprador!");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /venderganzuas [Usuario] [Valor] [Precio]");
				    return 1;
				}
				new nganzuas = strval(tmp);
				if(nganzuas > Informacion[playerid][Ganzuas])
				{
                    SendClientMessage(playerid, GRIS, "No dispones de esa cantidad de ganzuas!");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /venderganzuas [Usuario] [Valor] [Precio]");
				    return 1;
				}
				new precio = strval(tmp);
				GetPlayerName(player, giveplayer, sizeof(giveplayer));
				format(rango, sizeof(rango), "{FFFFFF}El mecanico %s te ofrese %d ganzuas a $%d", NombreEx(playerid), nganzuas, precio);
				ShowPlayerDialog(player, OGanzua, DIALOG_STYLE_MSGBOX, "- Oferta",rango,"Aceptar","Ignorar");
				format(rango, sizeof(rango), " ** Le has ofrecido %d ganzuas a %s por $%d **", nganzuas, giveplayer, precio);
				SendClientMessage(playerid, AZULCLARO, rango);
				GanzuaOferta[player] = playerid;
				GanzuaPrecio[player] = precio;
				GanzuaCantidad[player] = nganzuas;
		    }
		    else
		    {
		        SendClientMessage(playerid, GRIS, "Solo Mecanicos Utilizan este comando");
		        return 1;
		    }
		}
		return 1;
	}
	if(strcmp(cmd, "/cambiarmatricula", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == MECA)
	        {
				if(IsPlayerInAnyVehicle(playerid))
				{
				    new car = GetPlayerVehicleID(playerid);
				    if(car <= VV_DESDE && car >= TOTAL_VEH)
				    {
				        SendClientMessage(playerid, GRIS, "No puedes cambiarle la matricula a este vehiculo!");
				        return 1;
				    }
			        tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /cambiarmatricula [Matricula]");
						return 1;
					}
					new matricula = strval(tmp);
					if(matricula >= matriculainit && matricula <=(matricula+VV_DESDE))
					{
					    SendClientMessage(playerid, GRIS, "No puedes cambiarle la matricula a este vehiculo!");
				        return 1;
					}
					new DB:archivo = db_open("matriculas.db");
		            new DBResult:qresult;
		            new query[256];
		            format(query, sizeof(query), "SELECT matricula FROM matriculas");
		            qresult = db_query(archivo, query);
		            for(new i=0;i<db_num_rows(qresult);i++)
		            {
		                db_get_field(qresult, 0, rango, 256);
		                if(strval(rango) == matricula)
		                {
		                    SendClientMessage(playerid, GRIS, "Esa matricula ya existe");
		                    return 1;
		                }
		                else
		                {
		                    db_next_row(qresult);
		                }
		            }
		            db_free_result(qresult);
			        format(query, sizeof(query), "INSERT INTO matriculas (id, matricula, modelo) VALUES (%d, %d, '%s')", car, matricula, VehicleName[GetVehicleModel(car)-400]);
					qresult = db_query(archivo, query);
					db_free_result(qresult);
					db_close(archivo);
					CarMatricula[car] = matricula;
					format(rango, sizeof(rango), "La nueva matricula del vehiculo es %d", CarMatricula[car]);
					SendClientMessage(playerid, AZULCLARO, rango);
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "Debes estar en un vehiculo para Utilizar este comando");
				    return 1;
				}
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/capo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == MECA)
	        {
	            new vid = VehiculoCercano(playerid);
				GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
				if(bonnet == 0)
				{
					SetVehicleParamsEx(vid,engine,lights,alarm,doors,1,boot,objective);
		  			SendClientMessage(playerid, AZULCLARO, "Has abierto el capo");
		  			format(rango, sizeof(rango), "* %s abre el capo del vehiculo", NombreEx(playerid));
		  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
				}
				else
				{
				    SetVehicleParamsEx(vid,engine,lights,alarm,doors,0,boot,objective);
		  			SendClientMessage(playerid, AZULCLARO, "Has cerrado el capo");
		  			format(rango, sizeof(rango), "* %s cierra el capo del vehiculo", NombreEx(playerid));
		  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
				}
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/instalargps", true) == 0)
	{
		new carid;
		carid = GetPlayerVehicleID(playerid);
		if(!EsUnVehiculoVenta(carid))
		{
		    SendClientMessage(playerid, GRIS, "No tienes permiso para instalar un GPS en este coche");
		    return 1;
		}
	   	if(Informacion[playerid][Faccion] == MECA)
		{
		    if(PlayerToPoint(10, playerid, 2529.7273,-2112.8933,13.5542))
			{
		  		SendClientMessage(playerid, AZULCLARO, "Has instalado un GPS en el coche");
	  			format(rango, sizeof(rango), "* %s instala el GPS dentro del coche y lo programa segun el manual", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			CarInfo[carid][cGPS] = 1;
	  			OnPropUpdate();
	  	    }
	  	    else
	  	    {
	  	        SendClientMessage(playerid, GRIS, "Debes estar en el taller mecanico (Zona de Modificaciones)");
	  	        return 1;
	  	    }
		}
		else
		{
			SendClientMessage(playerid, GRIS, "No eres mecanico");
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/removergps", true) == 0)
	{
		new carid;
		carid = GetPlayerVehicleID(playerid);
	   	if(Informacion[playerid][Faccion] == MECA)
		{
			if(PlayerToPoint(10.0, playerid, 2529.7273,-2112.8933,13.5542))
			{
			    if(CarInfo[carid][cGPS] == 1)
			    {
	  				SendClientMessage(playerid, AZULCLARO, "Has quitado el GPS del vehiculo");
					format(rango, sizeof(rango), "* %s quita el GPS del coche y lo desactiva");
					RangoCercano(30, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
				  	CarInfo[carid][cGPS] = 0;
	  				OnPropUpdate();
	  	        }
	  	        else
	  	        {
	  	            SendClientMessage(playerid, GRIS, "Este veh�culo no tiene gps!");
	  	            return 1;
	  	        }
	  	    }
	  	    else
	  	    {
	  	        SendClientMessage(playerid, GRIS, "Debes estar en el taller. (Zona de Modificaciones)");
	  	        return 1;
	  	    }
		}
		else
		{
			SendClientMessage(playerid, GRIS, "No eres Mecanico!");
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/desbugearvehiculo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(Informacion[playerid][Admin] >= 1339)
		    {
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        new coche = GetPlayerVehicleID(playerid);
					if(EsUnVehiculoVenta(coche))
					{
						    CarInfo[coche][cVenta] = 0;
                            CarInfo[coche][cTComprado] = 0;
                            strmid(CarInfo[coche][cNameD], "Dealership", 0, strlen("Dealership"), 999);
                            CarInfo[coche][cLock] = 0;
                            GameTextForPlayer(playerid, "Vehiculo desbugeado", 1000, 1);
							GetVehicleParamsEx(coche,engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(coche,engine,lights,alarm,0,bonnet,boot,objective);
							TogglePlayerControllable(playerid, DESCONGELADO);
							RemovePlayerFromVehicle(playerid);
				    }
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "Debes estar arriba de un coche");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Necesitas ser administrador nivel 1338");
			    return 1;
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/hacersocio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == MECA && Informacion[playerid][Lider] == 1)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /hacersocio [Usuario]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(GetDistanceBetweenPlayers(playerid, giveplayerid) > 5.0)
				{
				    SendClientMessage(playerid, GRIS, "Debes estar cerca del usuario");
				    return 1;
				}
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(rango, sizeof(rango), "* Has echo socio de One Motors a %s",giveplayer);
				        SendClientMessage(playerid, AZULCLARO, rango);
				        format(rango, sizeof(rango), "* El jefe de los mecanicos %s te ha echo socio de One Motors",NombreEx(playerid));
				        SendClientMessage(giveplayerid, AZULCLARO, rango);
				        Informacion[giveplayerid][Asociado] = 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solo miembros de One Motos, y siendo lider del mismo.");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/agarage", true) == 0)
	{
		if(!PlayerToPoint(1,playerid, 2459.5200,-2100.5066,13.5469))
		{
			 SendClientMessage(playerid, GRIS, "Necesitas estar en el interruptor");
		     return 1;
		}
		if(Informacion[playerid][Faccion] != MECA)
		{
			 SendClientMessage(playerid, GRIS, "Solo mecanicos pueden Utilizar este comando");
		     return 1;
		}
		MoveObject(GPMECA, 2467.14062500,-2102.20117188,8.27733231, 10);
		format(rango, sizeof(rango), "* %s baja la palanca y abre la puerta del garage de pinturas", NombreEx(playerid));
		RangoCercano(30, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	    return 1;
	}
	if(strcmp(cmd, "/cgarage", true) == 0)
	{
		if(!PlayerToPoint(1,playerid, 2459.5200,-2100.5066,13.5469))
		{
			 SendClientMessage(playerid, GRIS, "Necesitas estar en el interruptor");
		     return 1;
		}
		if(Informacion[playerid][Faccion] != MECA)
		{
			 SendClientMessage(playerid, GRIS, "Solo mecanicos pueden Utilizar este comando");
		     return 1;
		}
		MoveObject(GPMECA, 2467.14086914,-2102.20117188,14.72731781, 10);
		format(rango, sizeof(rango), "* %s sube la palanca y cierra la puerta del garage de pinturas", NombreEx(playerid));
		RangoCercano(30, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	    return 1;
	}
    if(strcmp(cmd, "/vendernegocio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(Informacion[playerid][Faccion] == NFS)
		    {
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
			        SendClientMessage(playerid, DORADO, "Utiliza: /vendernegocio [Usuario] [Precio]");
			        return 1;
			    }
			    new player = strval(tmp);
			    if(player == playerid) return SendClientMessage(playerid, GRIS, "No puedes venderte el negocio a ti mismo");
			    if(GetDistanceBetweenPlayers(playerid, player) > 5.0)
				{
				    SendClientMessage(playerid, GRIS, "Debes estar cerca del comprador!");
				    return 1;
				}
			    if(Informacion[player][Casa] != 255)
				{
					SendClientMessage(playerid, GRIS, " Ese usuario ya es due�o de un negocio.");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
			        SendClientMessage(playerid, DORADO, "Utiliza: /vendernegocio [Usuario] [Precio]");
			        return 1;
			    }
			    new precio = strval(tmp);
				if(precio < 100000 || precio > 9999999)
				{
					SendClientMessage(playerid, GRIS, "El precio no puede ser menor a los $100000");
					return 1;
				}
				new Float:oldposx, Float:oldposy, Float:oldposz;
				GetPlayerName(playerid, playername, sizeof(playername));
				GetPlayerPos(playerid, oldposx, oldposy, oldposz);
				for(new b = 0; b < sizeof(SBizzInfo); b++)
				{
					if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]))
					{
						if(Informacion[player][Nivel] < SBizzInfo[b][sbLevelNeeded])
						{
							format(rango, sizeof(rango), "Lo siento, el comprador necesita tener nivel %d",SBizzInfo[b][sbLevelNeeded]);
							SendClientMessage(playerid, GRIS, rango);
							return 1;
						}
						IDnComprar[player] = b+100;
						PrecioNComprar[player] = precio;
						OfertaNComprar[player] = playerid;
						format(rango, sizeof(rango), "{FFFFFF}El vendedor %s te quiere vender este negocio por $%d", NombreEx(playerid), precio);
						ShowPlayerDialog(player, ONegocio, DIALOG_STYLE_MSGBOX, "- Oferta",rango,"Aceptar","Ignorar");
						format(rango, sizeof(rango), " ** Le has ofrecido a %s un negocio por $%d **", NombreEx(player), precio);
						SendClientMessage(playerid, AZULCLARO, rango);
					}
				}
				for(new g = 0; g < sizeof(GasInfo); g++)
				{
				    if(PlayerToPoint(2.0, playerid, GasInfo[g][gPuntoX], GasInfo[g][gPuntoY], GasInfo[g][gPuntoZ]))
					{
					    if(Informacion[player][Nivel] < GasInfo[g][gNivel])
						{
							format(rango, sizeof(rango), "Necesitas nivel %d para comprar el local",GasInfo[g][gNivel]);
							SendClientMessage(playerid, GRIS, rango);
							return 1;
						}
						IDnComprar[player] = g+500;
						PrecioNComprar[player] = precio;
						OfertaNComprar[player] = playerid;
						format(rango, sizeof(rango), "{FFFFFF}El vendedor %s te quiere vender este negocio por $%d", NombreEx(playerid), precio);
						ShowPlayerDialog(player, OPropiedad, DIALOG_STYLE_MSGBOX, "- Oferta",rango,"Aceptar","Ignorar");
						format(rango, sizeof(rango), " ** Le has ofrecido a %s un negocio por $%d **", NombreEx(player), precio);
						SendClientMessage(playerid, AZULCLARO, rango);
					}
				}
				for(new b = 0; b < sizeof(BizzInfo); b++)
				{
					if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]))
					{
						if(Informacion[player][Nivel] < BizzInfo[b][bLevelNeeded])
						{
							format(rango, sizeof(rango), "Necesitas nivel %d para comprar el local",GasInfo[b][gNivel]);
							SendClientMessage(playerid, GRIS, rango);
							return 1;
						}
						IDnComprar[player] = b;
						PrecioNComprar[player] = precio;
						OfertaNComprar[player] = playerid;
						format(rango, sizeof(rango), "{FFFFFF}El vendedor %s te quiere vender este negocio por $%d", NombreEx(playerid), precio);
						ShowPlayerDialog(player, OPropiedad, DIALOG_STYLE_MSGBOX, "- Oferta",rango,"Aceptar","Ignorar");
						format(rango, sizeof(rango), " ** Le has ofrecido a %s un negocio por $%d **", NombreEx(player), precio);
						SendClientMessage(playerid, AZULCLARO, rango);
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "No eres miembro del departamento de bienes y propiedades");
			    return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/venderpropiedad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == NFS)
		    {
		        tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
			        SendClientMessage(playerid, DORADO, "Utiliza: /venderpropiedad [Usuario] [Precio]");
			        return 1;
			    }
			    new player = strval(tmp);
			    if(player == playerid) {return SendClientMessage(playerid, GRIS, "No puedes venderte una propiedad a ti mismo");}
			    if(GetDistanceBetweenPlayers(playerid, player) > 5.0)
				{
				    SendClientMessage(playerid, GRIS, "Debes estar cerca del comprador");
				    return 1;
				}
	   			if(Informacion[player][Casa] != 255)
				{
					SendClientMessage(playerid, GRIS, "El Usuario ya tiene una casa");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
			       	SendClientMessage(playerid, DORADO, "Utiliza: /venderpropiedad [Usuario] [Precio]");
			        return 1;
			    }
			    new precio = strval(tmp);
				if(precio < 10000 || precio > 9999999)
				{
					SendClientMessage(playerid, GRIS, "El precio no puede ser menor a los $10000");
					return 1;
				}
				new Float:oldposx, Float:oldposy, Float:oldposz;
				GetPlayerName(playerid, playername, sizeof(playername));
				GetPlayerPos(playerid, oldposx, oldposy, oldposz);
				for(new h = 0; h < sizeof(HouseInfo); h++)
				{
					if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
					{
						if(Informacion[player][Nivel] < HouseInfo[h][hLevel])
						{
							format(rango, sizeof(rango), "El comprador no cumple con los requisitos, es necesario que tenga nivel %d", HouseInfo[h][hLevel]);
							SendClientMessage(playerid, GRIS, rango);
							return 1;
						}
	                    IDpComprar[player] = h;
						PrecioPComprar[player] = precio;
						OfertaPComprar[player] = playerid;
						format(rango, sizeof(rango), "{FFFFFF}El vendedor %s te quiere vender esta propiedad por $%d", NombreEx(playerid), precio);
						ShowPlayerDialog(player, OPropiedad, DIALOG_STYLE_MSGBOX, "- Oferta",rango,"Aceptar","Ignorar");
						format(rango, sizeof(rango), " ** Le has ofrecido a %s una propiedad por $%d **", NombreEx(player), precio);
						SendClientMessage(playerid, AZULCLARO, rango);
						return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, " Solo miembros del departamento de bienes y propiedades!");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gimnasio", true) == 0)
	{
	    if(PlayerToPoint(5, playerid, 766.1479,13.6475,1000.7020))
	    {
	        ShowPlayerDialog(playerid, Gimnasio, DIALOG_STYLE_LIST, "- Gimnasio","[$50] - Estilo simple\n[$250]- Boxing\n[$350]- Kung Fu\n[$400]- Knee Head\n","Aprender","Salir");
	        return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/vida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /vida [Usuario] [Valor]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if(Informacion[playerid][Admin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerHealth(playa, health);
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(rango, 256, "* %s has establecido el valor de vida de %s a %d", NombreEx(playerid), giveplayer, health);
						SendClientMessage(playerid, GRIS, rango);
						format(rango, 256, "* %s ha establecido el valor de tu vida a %d", NombreEx(playerid),health);
						SendClientMessage(playa, GRIS, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Solo miembros del staff nivel 2 y superior pueden usar este comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/blibdaje", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /blibdaje [Usuario] [Valor]");
				return 1;
			}
			new playa;
			new blindaje;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			blindaje = strval(tmp);
			if(Informacion[playerid][Admin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            SetPlayerArmour(playa, blindaje);
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(rango, 256, "* %s has establecido el valor de blindaje de %s a %d", NombreEx(playerid), giveplayer, blindaje);
						SendClientMessage(playerid, GRIS, rango);
						format(rango, 256, "* %s ha establecido el valor de tu blindaje a %d", NombreEx(playerid),blindaje);
						SendClientMessage(playa, GRIS, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Solo miembros del staff nivel 2 y superior pueden usar este comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/vermatricula", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new carv = VehiculoCercano(playerid);
	        if(DistanciaEntreCarPer(carv,playerid) < 5)
			{
			    if(carv >= TOTAL_VEH)
			    {
			        SendClientMessage(playerid, GRIS, "No puedes ver la matricula, esta muy borrosa");
			        return 1;
			    }
			    format(rango, sizeof(rango), "	%d", CarMatricula[carv]);
			    TextDrawSetString(M_TEXTO[playerid], rango);
			    TextDrawShowForPlayer(playerid, M_TEXTO[playerid]);
			    TextDrawShowForPlayer(playerid, M_FONDO);
			    TextDrawShowForPlayer(playerid, M_IDE);
				format(rango, sizeof(rango), "* %s mira la matricula del coche", NombreEx(playerid));
				RangoCercano(30, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
			    SetTimerEx("DMatricula", 7000, false, "d", playerid);
			}
	    }
	    return 1;
	}
    if(strcmp(cmd, "/animairport", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
    		ApplyAnimation(playerid,"AIRPORT","thrw_barl_thrw",4.1,0,1,1,1,1);
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd,"/animattr", true) == 0)
	{
 		if(!IsPlayerConnected(playerid)) { return 1; }
	 	tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"Attractors","StFBIt_in",4.1,0,1,1,1,1); }
    	case 2: { ApplyAnimation(playerid,"Attractors","StFBIt_loop",4.1,0,1,1,1,1); }
    	case 3: { ApplyAnimation(playerid,"Attractors","StFBIt_out",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animattr (1-3)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbar", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
	    case 1: { ApplyAnimation(playerid,"BAR","Barcustom_get",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BAR","Barcustom_loop",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BAR","Barcustom_order",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BAR","BARman_idle",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BAR","Barserve_bottle",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BAR","Barserve_glass",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BAR","Barserve_in",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BAR","Barserve_loop",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"BAR","Barserve_order",4.1,0,1,1,1,1); }
	    case 11: { ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,1,1,1,1); }
	    case 12: { ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbar (1-12)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbaseball", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
	    case 1: { ApplyAnimation(playerid,"BASEBALL","Bat_1",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BASEBALL","Bat_2",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BASEBALL","Bat_3",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BASEBALL","Bat_block",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BASEBALL","Bat_Hit_1",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BASEBALL","Bat_Hit_2",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BASEBALL","Bat_Hit_3",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BASEBALL","Bat_IDLE",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"BASEBALL","Bat_M",4.1,0,1,1,1,1); }
    	case 11: { ApplyAnimation(playerid,"BASEBALL","BAT_PART",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbball (1-11)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbdfire", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
	    case 1: { ApplyAnimation(playerid,"BD_FIRE","BD_Fire1",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BD_FIRE","BD_Fire2",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BD_FIRE","BD_Fire3",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BD_FIRE","BD_GF_Wave",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BD_FIRE","BD_Panic_01",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BD_FIRE","BD_Panic_02",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BD_FIRE","BD_Panic_03",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BD_FIRE","BD_Panic_04",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BD_FIRE","BD_Panic_Loop",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"BD_FIRE","Grlfrd_Kiss_03",4.1,0,1,1,1,1); }
	    case 11: { ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,1); }
	    case 12: { ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1); }
	    case 13: { ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbdfire (1-13)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbeach", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
	    case 1: { ApplyAnimation(playerid,"BEACH","bather",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BEACH","ParkSit_M_loop",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BEACH","ParkSit_W_loop",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbeach (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbpress", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
	    case 1: { ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"benchpress","gym_bp_down",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"benchpress","gym_bp_getoff",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"benchpress","gym_bp_geton",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"benchpress","gym_bp_up_A",4.1,0,1,1,1,1); }
        case 6: { ApplyAnimation(playerid,"benchpress","gym_bp_up_B",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"benchpress","gym_bp_up_smooth",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbpress (1-7)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbf", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
	    case 1: { ApplyAnimation(playerid,"BF_injection","BF_getin_LHS",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BF_injection","BF_getin_RHS",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BF_injection","BF_getout_LHS",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BF_injection","BF_getout_RHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbfinf (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbiked", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BIKED","BIKEd_Back",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BIKED","BIKEd_drivebyFT",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BIKED","BIKEd_drivebyLHS",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BIKED","BIKEd_drivebyRHS",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BIKED","BIKEd_Fwd",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BIKED","BIKEd_getoffBACK",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BIKED","BIKEd_getoffLHS",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BIKED","BIKEd_getoffRHS",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BIKED","BIKEd_hit",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"BIKED","BIKEd_jumponL",4.1,0,1,1,1,1); }
	    case 11: { ApplyAnimation(playerid,"BIKED","BIKEd_jumponR",4.1,0,1,1,1,1); }
	    case 12: { ApplyAnimation(playerid,"BIKED","BIKEd_kick",4.1,0,1,1,1,1); }
	    case 13: { ApplyAnimation(playerid,"BIKED","BIKEd_left",4.1,0,1,1,1,1); }
     	case 14: { ApplyAnimation(playerid,"BIKED","BIKEd_passenger",4.1,0,1,1,1,1); }
	    case 15: { ApplyAnimation(playerid,"BIKED","BIKEd_pushes",4.1,0,1,1,1,1); }
	    case 16: { ApplyAnimation(playerid,"BIKED","BIKEd_Ride",4.1,0,1,1,1,1); }
	    case 17: { ApplyAnimation(playerid,"BIKED","BIKEd_Right",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"BIKED","BIKEd_shuffle",4.1,0,1,1,1,1); }
	    case 19: { ApplyAnimation(playerid,"BIKED","BIKEd_Still",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbiked (1-19)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbikeh", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BIKEH","BIKEh_Back",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyFT",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyLHS",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyRHS",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BIKEH","BIKEh_Fwd",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BIKEH","BIKEh_getoffBACK",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BIKEH","BIKEh_getoffLHS",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BIKEH","BIKEh_getoffRHS",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BIKEH","BIKEh_hit",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"BIKEH","BIKEh_jumponL",4.1,0,1,1,1,1); }
	    case 11: { ApplyAnimation(playerid,"BIKEH","BIKEh_jumponR",4.1,0,1,1,1,1); }
	    case 12: { ApplyAnimation(playerid,"BIKEH","BIKEh_kick",4.1,0,1,1,1,1); }
	    case 13: { ApplyAnimation(playerid,"BIKEH","BIKEh_left",4.1,0,1,1,1,1); }
     	case 14: { ApplyAnimation(playerid,"BIKEH","BIKEh_passenger",4.1,0,1,1,1,1); }
	    case 15: { ApplyAnimation(playerid,"BIKEH","BIKEh_pushes",4.1,0,1,1,1,1); }
	    case 16: { ApplyAnimation(playerid,"BIKEH","BIKEh_Ride",4.1,0,1,1,1,1); }
	    case 17: { ApplyAnimation(playerid,"BIKEH","BIKEh_Right",4.1,0,1,1,1,1); }
	    case 18: { ApplyAnimation(playerid,"BIKEH","BIKEh_Still",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbikeh (1-18)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbikeleap", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
	    case 1: { ApplyAnimation(playerid,"BIKELEAP","bk_blnce_in",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BIKELEAP","bk_blnce_out",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BIKELEAP","bk_jmp",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BIKELEAP","bk_rdy_in",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BIKELEAP","bk_rdy_out",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BIKELEAP","struggle_cesar",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BIKELEAP","struggle_driver",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BIKELEAP","truck_driver",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BIKELEAP","truck_getin",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbikeleap (1-9)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbikes", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BIKES","BIKes_Back",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BIKES","BIKEs_drivebyFT",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BIKES","BIKEs_drivebyLHS",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BIKES","BIKEs_drivebyRHS",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BIKES","BIKEs_Fwd",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BIKES","BIKEs_getoffBACK",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BIKES","BIKEs_getoffLHS",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BIKES","BIKEs_getoffRHS",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BIKES","BIKEs_hit",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"BIKES","BIKEs_jumponL",4.1,0,1,1,1,1); }
	    case 11: { ApplyAnimation(playerid,"BIKES","BIKEs_jumponR",4.1,0,1,1,1,1); }
	    case 12: { ApplyAnimation(playerid,"BIKES","BIKEs_kick",4.1,0,1,1,1,1); }
	    case 13: { ApplyAnimation(playerid,"BIKES","BIKEs_Left",4.1,0,1,1,1,1); }
     	case 14: { ApplyAnimation(playerid,"BIKES","BIKEs_passenger",4.1,0,1,1,1,1); }
	    case 15: { ApplyAnimation(playerid,"BIKES","BIKEs_pushes",4.1,0,1,1,1,1); }
	    case 16: { ApplyAnimation(playerid,"BIKES","BIKEs_Ride",4.1,0,1,1,1,1); }
	    case 17: { ApplyAnimation(playerid,"BIKES","BIKEs_Right",4.1,0,1,1,1,1); }
	    case 18: { ApplyAnimation(playerid,"BIKES","BIKes_Snatch_L",4.1,0,1,1,1,1); }
        case 19: { ApplyAnimation(playerid,"BIKES","BIKes_Snatch_R",4.1,0,1,1,1,1); }
	    case 20: { ApplyAnimation(playerid,"BIKES","BIKes_Still",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbikes (1-20)"); }
		}
		return 1;
	}
	if(strcmp(cmd,"/animbikev", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BIKEv","BIKev_Back",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BIKEv","BIKEv_drivebyFT",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BIKEv","BIKEv_drivebyLHS",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BIKEv","BIKEv_drivebyRHS",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BIKEv","BIKEv_Fwd",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BIKEv","BIKEv_getoffBACK",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BIKEv","BIKEv_getoffLHS",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BIKEv","BIKEv_getoffRHS",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BIKEv","BIKEv_hit",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"BIKEv","BIKEv_jumponL",4.1,0,1,1,1,1); }
	    case 11: { ApplyAnimation(playerid,"BIKEv","BIKEv_jumponR",4.1,0,1,1,1,1); }
	    case 12: { ApplyAnimation(playerid,"BIKEv","BIKEv_kick",4.1,0,1,1,1,1); }
	    case 13: { ApplyAnimation(playerid,"BIKEv","BIKEv_Left",4.1,0,1,1,1,1); }
     	case 14: { ApplyAnimation(playerid,"BIKEv","BIKEv_passenger",4.1,0,1,1,1,1); }
	    case 15: { ApplyAnimation(playerid,"BIKEv","BIKEv_pushes",4.1,0,1,1,1,1); }
	    case 16: { ApplyAnimation(playerid,"BIKEv","BIKEv_Ride",4.1,0,1,1,1,1); }
	    case 17: { ApplyAnimation(playerid,"BIKEv","BIKEv_Right",4.1,0,1,1,1,1); }
	    case 18: { ApplyAnimation(playerid,"BIKEv","BIKev_Still",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbikev (1-18)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbikedbz", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
	    case 1: { ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbikedbz (1-4)");}
		}
		return 1;
	}

	if(strcmp(cmd,"/animbmx", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BMX","BMX_back",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BMX","BMX_bunnyhop",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BMX","BMX_drivebyFT",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BMX","BMX_driveby_LHS",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BMX","BMX_driveby_RHS",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BMX","BMX_fwd",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BMX","BMX_getoffBACK",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BMX","BMX_getoffLHS",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BMX","BMX_getoffRHS",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"BMX","BMX_jumponL",4.1,0,1,1,1,1); }
	    case 11: { ApplyAnimation(playerid,"BMX","BMX_jumponR",4.1,0,1,1,1,1); }
	    case 12: { ApplyAnimation(playerid,"BMX","BMX_Left",4.1,0,1,1,1,1); }
	    case 13: { ApplyAnimation(playerid,"BMX","BMX_pedal",4.1,0,1,1,1,1); }
     	case 14: { ApplyAnimation(playerid,"BMX","BMX_pushes",4.1,0,1,1,1,1); }
	    case 15: { ApplyAnimation(playerid,"BMX","BMX_Ride",4.1,0,1,1,1,1); }
	    case 16: { ApplyAnimation(playerid,"BMX","BMX_Right",4.1,0,1,1,1,1); }
	    case 17: { ApplyAnimation(playerid,"BMX","BMX_sprint",4.1,0,1,1,1,1); }
	    case 18: { ApplyAnimation(playerid,"BMX","BMX_still",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbmx (1-18)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbomber", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BOMBER","BOM_Plant_2Idle",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BOMBER","BOM_Plant_In",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbomber (1-6)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbox", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BOX","boxhipin",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BOX","boxhipup",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BOX","boxshdwn",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BOX","boxshup",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BOX","bxhipwlk",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BOX","bxhwlki",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BOX","bxshwlk",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BOX","bxshwlki",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BOX","bxwlko",4.1,0,1,1,1,1); }
        case 10: { ApplyAnimation(playerid,"BOX","catch_box",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbox (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbasket", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BSKTBALL","BBALL_def_jump_shot",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"BSKTBALL","BBALL_def_stepL",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"BSKTBALL","BBALL_def_stepR",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Gli",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Gli_O",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnch",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnch_O",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnd",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_O",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"BSKTBALL","BBALL_idle",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"BSKTBALL","BBALL_idle2",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"BSKTBALL","BBALL_idle2_O",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop_O",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"BSKTBALL","BBALL_idle_O",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Cancel",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Cancel_0",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_End",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot_O",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"BSKTBALL","BBALL_Net_Dnk_O",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup_O",4.1,0,1,1,1,1); }
		case 26: { ApplyAnimation(playerid,"BSKTBALL","BBALL_react_miss",4.1,0,1,1,1,1); }
		case 27: { ApplyAnimation(playerid,"BSKTBALL","BBALL_react_score",4.1,0,1,1,1,1); }
		case 28: { ApplyAnimation(playerid,"BSKTBALL","BBALL_run",4.1,0,1,1,1,1); }
		case 29: { ApplyAnimation(playerid,"BSKTBALL","BBALL_run_O",4.1,0,1,1,1,1); }
		case 30: { ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_L",4.1,0,1,1,1,1); }
		case 31: { ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_L_O",4.1,0,1,1,1,1); }
		case 32: { ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_R",4.1,0,1,1,1,1); }
		case 33: { ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_R_O",4.1,0,1,1,1,1); }
		case 34: { ApplyAnimation(playerid,"BSKTBALL","BBALL_walk",4.1,0,1,1,1,1); }
		case 35: { ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_L",4.1,0,1,1,1,1); }
		case 36: { ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_L_O",4.1,0,1,1,1,1); }
		case 37: { ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_R",4.1,0,1,1,1,1); }
		case 38: { ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_R_O",4.1,0,1,1,1,1); }
		case 39: { ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_O",4.1,0,1,1,1,1); }
		case 40: { ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_start",4.1,0,1,1,1,1); }
		case 41: { ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_start_O",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbasket (1-41)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbuddy", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BUDDY","buddy_crouchfire",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BUDDY","buddy_crouchreload",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BUDDY","buddy_fire",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BUDDY","buddy_fire_poor",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BUDDY","buddy_reload",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbuddy (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animbus", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BUS","BUS_close",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"BUS","BUS_getin_LHS",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"BUS","BUS_getin_RHS",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"BUS","BUS_geout_LHS",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"BUS","BUS_getout_RHS",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"BUS","BUS_jacked_LHS",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"BUS","BUS_open",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"BUS","BUS_open_RHS",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"BUS","BUS_pullout_LHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animbus (1-9)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcamera", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CAMERA","camcrch_cmon",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"CAMERA","camcrch_idleloop",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"CAMERA","camcrch_stay",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"CAMERA","camcrch_to_camstnd",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"CAMERA","camstnd_idleloop",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"CAMERA","camstnd_lkabt",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"CAMERA","camstnd_to_camrcrch",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"CAMERA","piccrch_in",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"CAMERA","picccrch_out",4.1,0,1,1,1,1); }
	    case 11: { ApplyAnimation(playerid,"CAMERA","piccrch_take",4.1,0,1,1,1,1); }
	    case 12: { ApplyAnimation(playerid,"CAMERA","picstnd_in",4.1,0,1,1,1,1); }
	    case 13: { ApplyAnimation(playerid,"CAMERA","picstnd_out",4.1,0,1,1,1,1); }
     	case 14: { ApplyAnimation(playerid,"CAMERA","picstnd_take",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcamera (1-14)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcar", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CAR","Fixn_Car_Loop",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"CAR","Fix_Car_Out",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"CAR","flag_drop",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"CAR","Sit_relaxed",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"CAR","Tyd2car_bump",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"CAR","Tyd2car_high",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"CAR","Tyd2car_low",4.1,0,1,1,1,1); }
	    case 8: { ApplyAnimation(playerid,"CAR","Tyd2car_med",4.1,0,1,1,1,1); }
	    case 9: { ApplyAnimation(playerid,"CAR","Tyd2car_TurnL",4.1,0,1,1,1,1); }
	    case 10: { ApplyAnimation(playerid,"CAR","Tyd2Car_TurnR",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcar (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcarry", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1); }
	    case 2: { ApplyAnimation(playerid,"CARRY","liftup",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"CARRY","liftup05",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"CARRY","liftup105",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"CARRY","putdwn",4.1,0,1,1,1,1); }
	    case 6: { ApplyAnimation(playerid,"CARRY","putdwn05",4.1,0,1,1,1,1); }
	    case 7: { ApplyAnimation(playerid,"CARRY","putdwn105",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcarry (1-7)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcarchat", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CAR_CHAT","carfone_in",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"CAR_CHAT","carfone_loopA",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"CAR_CHAT","carfone_loopA_to_B",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"CAR_CHAT","carfone_loopB",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"CAR_CHAT","carfone_loopB_to_A",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"CAR_CHAT","carfone_out",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_BL",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_BR",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_FL",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_FR",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc2_FL",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_BR",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_FL",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_FR",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BL",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BR",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_FL",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_FR",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"CAR_CHAT","car_talkm_in",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"CAR_CHAT","car_talkm_loop",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"CAR_CHAT","car_talkm_out",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcarchat (1-21)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcasino", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CASINO","cards_in",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"CASINO","cards_loop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"CASINO","cards_lose",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"CASINO","cards_out",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"CASINO","cards_pick_01",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"CASINO","cards_pick_02",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"CASINO","cards_rFBI",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"CASINO","cards_win",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"CASINO","dealone",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"CASINO","manwinb",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"CASINO","manwind",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"CASINO","Roulette_in",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"CASINO","Roulette_loop",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"CASINO","Roulette_lose",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"CASINO","Roulette_out",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"CASINO","Roulette_win",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"CASINO","Slot_bet_01",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"CASINO","Slot_bet_02",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"CASINO","Slot_in",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"CASINO","Slot_lose_out",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"CASINO","Slot_Plyr",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"CASINO","Slot_wait",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"CASINO","Slot_win_out",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"CASINO","wof",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcasino (1-25)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animchainsaw", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CHAINSAW","CSAW_1",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"CHAINSAW","CSAW_2",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"CHAINSAW","CSAW_3",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"CHAINSAW","CSAW_G",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_1",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_2",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_3",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"CHAINSAW","csaw_part",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"CHAINSAW","IDLE_csaw",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"CHAINSAW","WEAPON_csawlo",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animchainsaw (1-11)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animchoppa", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_back",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_bunnyhop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_drivebyFT",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_driveby_LHS",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_driveby_RHS",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_fwd",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffBACK",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffLHS",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffRHS",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_jumponL",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_jumponR",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_Left",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_pedal",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_Pushes",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_ride",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_Right",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_sprint",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"CHOPPA","CHOPPA_Still",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcho (1-18)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animclothes", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CLOTHES","CLO_Buy",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"CLOTHES","CLO_In",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"CLOTHES","CLO_Out",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Hat",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_In",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_In_O",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Legs",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Loop",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Out",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Out_O",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Shoes",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Torso",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Watch",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animclothes (1-13)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcoach", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"COACH","COACH_inL",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"COACH","COACH_inR",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"COACH","COACH_opnL",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"COACH","COACH_opnR",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"COACH","COACH_outL",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"COACH","COACH_outR",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcoach (1-6)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcolt", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"COLT45","2guns_crouchfire",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"COLT45","colt45_crouchfire",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"COLT45","colt45_crouchreload",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"COLT45","colt45_fire",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"COLT45","colt45_fire_2hands",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"COLT45","colt45_reload",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"COLT45","sawnoff_reload",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcolt (1-7)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcopamb", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_in",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_loop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_nod",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_out",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_shake",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"COP_AMBIENT","Coplook_in",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"COP_AMBIENT","Coplook_loop",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"COP_AMBIENT","Coplook_nod",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"COP_AMBIENT","Coplook_out",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"COP_AMBIENT","Coplook_shake",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcopamb (1-12)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcopdv", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_B",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_FT",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_L",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_R",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcopdv (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcrack", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"CRACK","crckdeth1",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"CRACK","crckdeth3",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"CRACK","crckdeth4",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"CRACK","crckidle1",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"CRACK","crckidle3",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"CRACK","crckidle4",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcrack (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animcrib", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"CRIB","CRIB_Console_Loop",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"CRIB","PED_Console_Loop",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"CRIB","PED_Console_Loose",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"CRIB","PED_Console_Win",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animcrib (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animdamj", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"DAM_JUMP","DAM_Dive_Loop",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"DAM_JUMP","DAM_Land",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"DAM_JUMP","DAM_Launch",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"DAM_JUMP","Jump_Roll",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"DAM_JUMP","SF_JumpWall",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animdamj (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animdance", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"DANCING","bd_clap",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"DANCING","dance_loop",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animdance (1-13)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animdealer", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"DEALER","DEALER_DEAL",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"DEALER","DEALER_IDLE",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"DEALER","DEALER_IDLE_01",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"DEALER","DEALER_IDLE_02",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"DEALER","DEALER_IDLE_03",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animdealer (1-7)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animdildo", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"DILDO","DILDO_1",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"DILDO","DILDO_2",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"DILDO","DILDO_3",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"DILDO","DILDO_block",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"DILDO","DILDO_G",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"DILDO","DILDO_Hit_1",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"DILDO","DILDO_Hit_2",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"DILDO","DILDO_Hit_3",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"DILDO","DILDO_IDLE",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animdildo (1-9)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animdodge", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"DODGE","Cover_Dive_01",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"DODGE","Cover_Dive_02",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"DODGE","Crushed",4.1,0,1,1,1,1); }
	 	case 4: { ApplyAnimation(playerid,"DODGE","Crush_Jump",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animdodge (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animdozer", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"DOZER","DOZER_Align_LHS",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"DOZER","DOZER_Align_RHS",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"DOZER","DOZER_getin_LHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"DOZER","DOZER_getin_RHS",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"DOZER","DOZER_getout_LHS",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"DOZER","DOZER_getout_RHS",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"DOZER","DOZER_Jacked_LHS",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"DOZER","DOZER_Jacked_RHS",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"DOZER","DOZER_pullout_LHS",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"DOZER","DOZER_pullout_RHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animdozer (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animdrivebys", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS_Bwd",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS_Fwd",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS_Bwd",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS_Fwd",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyTop_LHS",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyTop_RHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animdrivebys (1-8)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animfat", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"FAT","FatIdle",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"FAT","FatIdle_armed",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"FAT","FatIdle_Csaw",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"FAT","FatIdle_Rocket",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"FAT","FatRun",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"FAT","FatRun_armed",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"FAT","FatRun_Csaw",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"FAT","FatRun_Rocket",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"FAT","FatSprint",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"FAT","FatWalk",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"FAT","FatWalkstart",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"FAT","FatWalkstart_Csaw",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"FAT","FatWalkSt_armed",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"FAT","FatWalkSt_Rocket",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"FAT","FatWalk_armed",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"FAT","FatWalk_Csaw",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"FAT","FatWalk_Rocket",4.1,0,1,1,1,1); }
 		case 18: { ApplyAnimation(playerid,"FAT","IDLE_tired",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animfat (1-18)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animfightb", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"FIGHT_B","FightB_1",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"FIGHT_B","FightB_2",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"FIGHT_B","FightB_3",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"FIGHT_B","FightB_block",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"FIGHT_B","FightB_G",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"FIGHT_B","FightB_IDLE",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"FIGHT_B","FightB_M",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"FIGHT_B","HitB_1",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"FIGHT_B","HitB_2",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"FIGHT_B","HitB_3",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animfightb (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animfightc", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"FIGHT_C","FightC_1",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"FIGHT_C","FightC_2",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"FIGHT_C","FightC_3",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"FIGHT_C","FightC_block",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"FIGHT_C","FightC_blocking",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"FIGHT_C","FightC_G",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"FIGHT_C","FightC_IDLE",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"FIGHT_C","FightC_M",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"FIGHT_C","FightC_Spar",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"FIGHT_C","HitC_1",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"FIGHT_C","HitC_2",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"FIGHT_C","HitC_3",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animfightc (1-12)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animfightd", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"FIGHT_D","FightD_1",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"FIGHT_D","FightD_2",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"FIGHT_D","FightD_block",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"FIGHT_D","FightD_G",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"FIGHT_D","FightD_IDLE",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"FIGHT_D","FightD_M",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"FIGHT_D","HitD_1",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"FIGHT_D","HitD_2",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"FIGHT_D","HitD_3",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animfightd (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animfighte", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"FIGHT_E","FightKick",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"FIGHT_E","FightKick_B",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick_B",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animfighte (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animfin", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"FINALE","FIN_Climb_In",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"FINALE","FIN_Cop1_ClimbOut2",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"FINALE","FIN_Cop1_Loop",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"FINALE","FIN_Cop1_Stomp",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"FINALE","FIN_Hang_L",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"FINALE","FIN_Hang_Loop",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"FINALE","FIN_Hang_R",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"FINALE","FIN_Hang_L",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"FINALE","FIN_Jump_On",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"FINALE","FIN_Land_Die",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"FINALE","FIN_LegsUp",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"FINALE","FIN_LegsUp_L",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"FINALE","FIN_LegsUp_Loop",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"FINALE","FIN_LegsUp_R",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"FINALE","FIN_Let_Go",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animfin (1-16)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animfin2", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"FINALE2","FIN_Cop1_ClimbOut",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Fall",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Loop",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Shot",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Swing",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"FINALE2","FIN_Cop2_ClimbOut",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"FINALE2","FIN_Switch_P",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"FINALE2","FIN_Switch_S",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animfin2 (1-8)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animflame", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
    	ApplyAnimation(playerid,"FLAME","FLAME_fire",4.1,0,1,1,1,1);
		return 1;
	}

	if(strcmp(cmd,"/animflowers", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"Flowers","Flower_attack",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"Flowers","Flower_attack_M",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"Flowers","Flower_Hit",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animflowers (1-3)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animfood", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"FOOD","EAT_Chicken",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"FOOD","EAT_Vomit_P",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"FOOD","FF_Dam_Fwd",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"FOOD","FF_Dam_Left",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"FOOD","FF_Dam_Right",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"FOOD","FF_Die_Bkw",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"FOOD","FF_Die_Fwd",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"FOOD","FF_Die_Left",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"FOOD","FF_Die_Right",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"FOOD","FF_Sit_Eat1",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"FOOD","FF_Sit_Eat2",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"FOOD","FF_Sit_Eat3",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"FOOD","FF_Sit_In",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"FOOD","FF_Sit_In_L",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"FOOD","FF_Sit_In_R",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"FOOD","FF_Sit_Look",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"FOOD","FF_Sit_Loop",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"FOOD","FF_Sit_Out_180",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"FOOD","FF_Sit_Out_L_180",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"FOOD","FF_Sit_Out_R_180",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"FOOD","SHP_Thank",4.1,0,1,1,1,1); }
		case 26: { ApplyAnimation(playerid,"FOOD","SHP_Tray_In",4.1,0,1,1,1,1); }
		case 27: { ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift",4.1,0,1,1,1,1); }
		case 28: { ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_In",4.1,0,1,1,1,1); }
		case 29: { ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Loop",4.1,0,1,1,1,1); }
		case 30: { ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Out",4.1,0,1,1,1,1); }
		case 31: { ApplyAnimation(playerid,"FOOD","SHP_Tray_Out",4.1,0,1,1,1,1); }
		case 32: { ApplyAnimation(playerid,"FOOD","SHP_Tray_Pose",4.1,0,1,1,1,1); }
		case 33: { ApplyAnimation(playerid,"FOOD","SHP_Tray_Return",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animfood (1-33)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animfreew", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"Freeweights","gym_barbell",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"Freeweights","gym_free_A",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"Freeweights","gym_free_B",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"Freeweights","gym_free_celebrate",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"Freeweights","gym_free_down",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"Freeweights","gym_free_loop",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"Freeweights","gym_free_pickup",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"Freeweights","gym_free_putdown",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"Freeweights","gym_free_up_smooth",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animfreew (1-9)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animgangs", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"GANGS","DEALER_IDLE",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"GANGS","drnkbr_prtl",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"GANGS","drnkbr_prtl_F",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"GANGS","DRUGS_BUY",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"GANGS","hndshkcb",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"GANGS","hndshkda",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"GANGS","hndshkea",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"GANGS","Invite_No",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"GANGS","Invite_Yes",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"GANGS","leanIDLE",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"GANGS","leanIN",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"GANGS","leanOUT",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"GANGS","prtial_gngtlkA",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"GANGS","prtial_gngtlkB",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"GANGS","prtial_gngtlkCt",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"GANGS","prtial_gngtlkD",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"GANGS","prtial_gngtlkE",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"GANGS","prtial_gngtlkF",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"GANGS","prtial_gngtlkG",4.1,0,1,1,1,1); }
		case 26: { ApplyAnimation(playerid,"GANGS","prtial_gngtlkH",4.1,0,1,1,1,1); }
		case 27: { ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.1,0,1,1,1,1); }
		case 28: { ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01",4.1,0,1,1,1,1); }
		case 29: { ApplyAnimation(playerid,"GANGS","shake_cara",4.1,0,1,1,1,1); }
		case 30: { ApplyAnimation(playerid,"GANGS","shake_carK",4.1,0,1,1,1,1); }
		case 31: { ApplyAnimation(playerid,"GANGS","shake_carSH",4.1,0,1,1,1,1); }
		case 32: { ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.1,0,1,1,1,1); }
		case 33: { ApplyAnimation(playerid,"GANGS","smkcig_prtl_F",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animgangs (1-33)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animghands", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"GHANDS","gsign3LH",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"GHANDS","LHGsign1",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"GHANDS","LHGsign2",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"GHANDS","LHGsign3",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"GHANDS","LHGsign4",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"GHANDS","LHGsign5",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"GHANDS","RHGsign1",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"GHANDS","RHGsign2",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"GHANDS","RHGsign3",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"GHANDS","RHGsign4",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"GHANDS","RHGsign5",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animghands (1-20)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animghetto", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_PLY",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_SMO",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_SWE",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_PLY",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_RYD",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_SMO",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_SWE",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animghetto (1-7)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animgoggles", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
    	ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,1,1,1,1);
		return 1;
	}

	if(strcmp(cmd,"/animgrafitti", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"GRAFFITI","graffiti_Chkout",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"GRAFFITI","spraycan_fire",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animgrafitti (1-2)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animgraveyard", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"GRAVEYARD","mrnM_loop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"GRAVEYARD","prst_loopa",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animgraveyard (1-3)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animgrenade", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"GRENADE","WEAPON_start_throw",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"GRENADE","WEAPON_throw",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"GRENADE","WEAPON_throwu",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animgrenade (1-3)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animgym", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"GYMNASIUM","gym_bike_celebrate",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"GYMNASIUM","gym_bike_faster",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"GYMNASIUM","gym_bike_getoff",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"GYMNASIUM","gym_bike_geton",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"GYMNASIUM","gym_bike_pedal",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"GYMNASIUM","gym_bike_slow",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"GYMNASIUM","gym_bike_still",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"GYMNASIUM","gym_jog_falloff",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"GYMNASIUM","gym_shadowbox",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"GYMNASIUM","gym_tread_celebrate",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"GYMNASIUM","gym_tread_falloff",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"GYMNASIUM","gym_tread_getoff",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"GYMNASIUM","gym_tread_geton",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"GYMNASIUM","gym_tread_jog",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"GYMNASIUM","gym_tread_sprint",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"GYMNASIUM","gym_tread_tired",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"GYMNASIUM","gym_tread_walk",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"GYMNASIUM","gym_walk_falloff",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"GYMNASIUM","Pedals_fast",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"GYMNASIUM","Pedals_med",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"GYMNASIUM","Pedals_slow",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"GYMNASIUM","Pedals_still",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animgym (1-24)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animhair", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Beard_01",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Buy",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut_In",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut_Out",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Hair_01",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Hair_02",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"HAIRCUTS","BRB_In",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Out",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Loop",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_In",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_Loop",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_Out",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animhaircut (1-13)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animheist", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"HEIST9","CAS_G2_GasKO",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"HEIST9","swt_wllpk_L",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"HEIST9","swt_wllpk_L_back",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"HEIST9","swt_wllpk_R",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"HEIST9","swt_wllpk_R_back",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"HEIST9","swt_wllshoot_in_L",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"HEIST9","swt_wllshoot_in_R",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"HEIST9","swt_wllshoot_out_L",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"HEIST9","swt_wllshoot_out_R",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"HEIST9","Use_SwipeCard",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animheist (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animinthouse", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"INT_HOUSE","BED_In_L",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_L",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_R",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"INT_HOUSE","BED_Out_L",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"INT_HOUSE","BED_Out_R",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"INT_HOUSE","LOU_Loop",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"INT_HOUSE","LOU_Out",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"INT_HOUSE","wash_up",4.1,0,1,1,1,1); }
 		default: { SendClientMessage(playerid, DORADO, "Utiliza /animinthouse (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animoffice", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"INT_OFFICE","FF_Dam_Fwd",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_2Idle_180",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Bored_Loop",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Crash",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Drink",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Idle_Loop",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_In",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Read",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Watch",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animoffice (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animintshop", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"INT_SHOP","shop_cashier",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"INT_SHOP","shop_in",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"INT_SHOP","shop_lookA",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"INT_SHOP","shop_lookB",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"INT_SHOP","shop_loop",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"INT_SHOP","shop_out",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"INT_SHOP","shop_pay",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animintshop (1-8)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animjustb", true) == 0)  {

 		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"JST_BUISNESS","girl_01",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"JST_BUISNESS","girl_02",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"JST_BUISNESS","player_01",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"JST_BUISNESS","smoke_01",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animjustb (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animkart", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
	 	tmp = strtok(cmdtext, idx);
	 	switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"KART","KART_getin_LHS",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"KART","KART_getin_RHS",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"KART","KART_getout_LHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"KART","KART_getout_RHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animkart (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animkiss", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"KISSING","BD_GF_Wave",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"KISSING","gfwave2",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"KISSING","GF_CarArgue_01",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"KISSING","GF_CarArgue_02",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"KISSING","GF_CarSpot",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"KISSING","GF_StreetArgue_01",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"KISSING","GF_StreetArgue_02",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"KISSING","gift_get",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"KISSING","gift_give",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_01",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_02",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_03",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"KISSING","Playa_Kiss_02",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"KISSING","Playa_Kiss_03",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animkiss (1-15)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animknife", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Die",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"KNIFE","KILL_Knife_Player",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"KNIFE","KILL_Partial",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"KNIFE","knife_1",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"KNIFE","knife_2",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"KNIFE","knife_3",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"KNIFE","knife_4",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"KNIFE","knife_block",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"KNIFE","Knife_G",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"KNIFE","knife_hit_1",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"KNIFE","knife_hit_2",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"KNIFE","knife_hit_3",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"KNIFE","knife_IDLE",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"KNIFE","knife_part",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"KNIFE","WEAPON_knifeidle",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animknife (1-16)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animlapdan", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"LAPDAN1","LAPDAN_D",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"LAPDAN1","LAPDAN_P",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"LAPDAN2","LAPDAN_D",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"LAPDAN2","LAPDAN_P",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"LAPDAN3","LAPDAN_D",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"LAPDAN3","LAPDAN_P",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animlapdan (1-6)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animlowrider", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"LOWRIDER","F_smklean_loop",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_bdbnce",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_hair",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_hurry",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_idleloop",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_idle_to_l0",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_bnce",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_loop",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_to_l1",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l12_to_l0",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_bnce",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_loop",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_to_l2",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_bnce",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_loop",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_to_l3",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l345_to_l1",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_bnce",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_loop",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_to_l4",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_bnce",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_loop",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_to_l5",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l5_bnce",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"LOWRIDER","lrgirl_l5_loop",4.1,0,1,1,1,1); }
		case 26: { ApplyAnimation(playerid,"LOWRIDER","M_smklean_loop",4.1,0,1,1,1,1); }
		case 27: { ApplyAnimation(playerid,"LOWRIDER","M_smkstnd_loop",4.1,0,1,1,1,1); }
		case 28: { ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkB",4.1,0,1,1,1,1); }
		case 29: { ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkC",4.1,0,1,1,1,1); }
		case 30: { ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkD",4.1,0,1,1,1,1); }
		case 31: { ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkE",4.1,0,1,1,1,1); }
		case 32: { ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkF",4.1,0,1,1,1,1); }
		case 33: { ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkG",4.1,0,1,1,1,1); }
		case 34: { ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkH",4.1,0,1,1,1,1); }
		case 35: { ApplyAnimation(playerid,"LOWRIDER","RAP_A_Loop",4.1,0,1,1,1,1); }
		case 36: { ApplyAnimation(playerid,"LOWRIDER","RAP_B_Loop",4.1,0,1,1,1,1); }
		case 37: { ApplyAnimation(playerid,"LOWRIDER","RAP_C_Loop",4.1,0,1,1,1,1); }
		case 38: { ApplyAnimation(playerid,"LOWRIDER","Sit_relaxed",4.1,0,1,1,1,1); }
		case 39: { ApplyAnimation(playerid,"LOWRIDER","Tap_hand",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animlowrider (1-39)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animdchase", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"MD_CHASE","Carhit_Hangon",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"MD_CHASE","Carhit_Tumble",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"MD_CHASE","donutdrop",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L1",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L2",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L3",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R1",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R2",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R3",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"MD_CHASE","Hangon_Stun_loop",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"MD_CHASE","Hangon_Stun_Turn",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_2_HANG",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Jmp_BL",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Jmp_F",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_BL",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_BL",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_F",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_F",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll_F",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Punch",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Punch_F",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Shot_F",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Loop",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animdchase (1-25)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animend", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"MD_END","END_SC1_PLY",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"MD_END","END_SC1_RYD",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"MD_END","END_SC1_SMO",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"MD_END","END_SC1_SWE",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"MD_END","END_SC2_PLY",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"MD_END","END_SC2_RYD",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"MD_END","END_SC2_SMO",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"MD_END","END_SC2_SWE",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animend (1-8)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animmedic", true) == 0)
	{
    	if(!IsPlayerConnected(playerid)) { return 1; }
  		ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
  		return 1;
	}

	if(strcmp(cmd,"/animmisc", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"MISC","bitchslap",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"MISC","BMX_celebrate",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"MISC","BMX_comeon",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"MISC","bmx_idleloop_01",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"MISC","bmx_idleloop_02",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"MISC","bmx_talkleft_in",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"MISC","bmx_talkleft_loop",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"MISC","bmx_talkleft_out",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"MISC","bmx_talkright_in",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"MISC","bmx_talkright_loop",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"MISC","bmx_talkright_out",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"MISC","bng_wndw",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"MISC","bng_wndw_02",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"MISC","Case_pickup",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"MISC","door_jet",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"MISC","GRAB_L",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"MISC","GRAB_R",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"MISC","Hiker_Pose",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"MISC","Hiker_Pose_L",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"MISC","Idle_Chat_02",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"MISC","KAT_Throw_K",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"MISC","KAT_Throw_O",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"MISC","KAT_Throw_P",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"MISC","PASS_Rifle_O",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"MISC","PASS_Rifle_Ped",4.1,0,1,1,1,1); }
		case 26: { ApplyAnimation(playerid,"MISC","PASS_Rifle_Ply",4.1,0,1,1,1,1); }
		case 27: { ApplyAnimation(playerid,"MISC","pickup_box",4.1,0,1,1,1,1); }
		case 28: { ApplyAnimation(playerid,"MISC","Plane_door",4.1,0,1,1,1,1); }
		case 29: { ApplyAnimation(playerid,"MISC","Plane_exit",4.1,0,1,1,1,1); }
		case 30: { ApplyAnimation(playerid,"MISC","Plane_hijack",4.1,0,1,1,1,1); }
		case 31: { ApplyAnimation(playerid,"MISC","Plunger_01",4.1,0,1,1,1,1); }
		case 32: { ApplyAnimation(playerid,"MISC","Plyrlean_loop",4.1,0,1,1,1,1); }
		case 33: { ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,1,1,1,1); }
		case 34: { ApplyAnimation(playerid,"MISC","Run_Dive",4.1,0,1,1,1,1); }
		case 35: { ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,0,1,1,1,1); }
		case 36: { ApplyAnimation(playerid,"MISC","SEAT_LR",4.1,0,1,1,1,1); }
		case 37: { ApplyAnimation(playerid,"MISC","Seat_talk_01",4.1,0,1,1,1,1); }
		case 38: { ApplyAnimation(playerid,"MISC","Seat_talk_02",4.1,0,1,1,1,1); }
		case 39: { ApplyAnimation(playerid,"MISC","SEAT_watch",4.1,0,1,1,1,1); }
		case 40: { ApplyAnimation(playerid,"MISC","smalplane_door",4.1,0,1,1,1,1); }
		case 41: { ApplyAnimation(playerid,"MISC","smlplane_door",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animmisc (1-41)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animtb", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"MTB","MTB_back",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"MTB","MTB_bunnyhop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"MTB","MTB_drivebyFT",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"MTB","MTB_driveby_LHS",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"MTB","MTB_driveby_RHS",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"MTB","MTB_fwd",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"MTB","MTB_getoffBACK",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"MTB","MTB_pushes",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"MTB","MTB_getoffLHS",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"MTB","MTB_getoffRHS",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"MTB","MTB_jumponL",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"MTB","MTB_jumponR",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"MTB","MTB_Left",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"MTB","MTB_pedal",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"MTB","MTB_Ride",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"MTB","MTB_Right",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"MTB","MTB_sprint",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"MTB","MTB_still",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animtb (1-18)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animmuscular", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"MUSCULAR","MscleWalkst_armed",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"MUSCULAR","MscleWalkst_Csaw",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"MUSCULAR","Mscle_rckt_run",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"MUSCULAR","Mscle_rckt_walkst",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"MUSCULAR","Mscle_run_Csaw",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"MUSCULAR","MuscleIdle",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_armed",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_Csaw",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_rocket",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"MUSCULAR","MuscleRun",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"MUSCULAR","MuscleRun_armed",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"MUSCULAR","MuscleSprint",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"MUSCULAR","MuscleWalk",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"MUSCULAR","MuscleWalkstart",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"MUSCULAR","MuscleWalk_armed",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"MUSCULAR","Musclewalk_Csaw",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"MUSCULAR","Musclewalk_rocket",4.1,0,1,1,1,1); }
 		default: { SendClientMessage(playerid, DORADO, "Utiliza /animmuscular (1-17)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animnevada", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"NEVADA","NEVADA_getin",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"NEVADA","NEVADA_getout",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animnevada (1-2)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animlookers", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"ON_LOOKERS","lkaround_in",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"ON_LOOKERS","lkaround_loop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"ON_LOOKERS","lkaround_out",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"ON_LOOKERS","lkup_in",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"ON_LOOKERS","lkup_loop",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"ON_LOOKERS","lkup_out",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"ON_LOOKERS","lkup_point",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"ON_LOOKERS","panic_cower",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"ON_LOOKERS","panic_hide",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"ON_LOOKERS","panic_in",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"ON_LOOKERS","panic_loop",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"ON_LOOKERS","panic_out",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"ON_LOOKERS","panic_point",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"ON_LOOKERS","panic_shout",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"ON_LOOKERS","Pointup_in",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"ON_LOOKERS","Pointup_loop",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"ON_LOOKERS","Pointup_out",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"ON_LOOKERS","Pointup_shout",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"ON_LOOKERS","point_in",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"ON_LOOKERS","point_loop",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"ON_LOOKERS","point_out",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"ON_LOOKERS","shout_01",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"ON_LOOKERS","shout_in",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"ON_LOOKERS","shout_loop",4.1,0,1,1,1,1); }
		case 26: { ApplyAnimation(playerid,"ON_LOOKERS","shout_out",4.1,0,1,1,1,1); }
		case 27: { ApplyAnimation(playerid,"ON_LOOKERS","wave_in",4.1,0,1,1,1,1); }
		case 28: { ApplyAnimation(playerid,"ON_LOOKERS","wave_loop",4.1,0,1,1,1,1); }
		case 29: { ApplyAnimation(playerid,"ON_LOOKERS","wave_out",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animlookers (1-29)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animotb", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"OTB","betslp_in",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"OTB","betslp_loop",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"OTB","betslp_out",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"OTB","betslp_tnk",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"OTB","wtchrace_cmon",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"OTB","wtchrace_in",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"OTB","wtchrace_loop",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"OTB","wtchrace_lose",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"OTB","wtchrace_out",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"OTB","wtchrace_win",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animotb (1-11)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animparachute", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"PARACHUTE","FALL_skyDive",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_Accel",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"PARACHUTE","FALL_skyDive_DIE",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_L",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_R",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"PARACHUTE","PARA_decel",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"PARACHUTE","PARA_decel_O",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"PARACHUTE","PARA_float",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"PARACHUTE","PARA_float_O",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"PARACHUTE","PARA_Land",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"PARACHUTE","PARA_Land_O",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"PARACHUTE","PARA_Land_Water",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"PARACHUTE","PARA_Land_Water_O",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"PARACHUTE","PARA_open",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"PARACHUTE","PARA_open_O",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_Land_O",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_Loop_O",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_O",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"PARACHUTE","PARA_steerL",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"PARACHUTE","PARA_steerL_O",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"PARACHUTE","PARA_steerR_O",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animparachute (1-22)"); }
		}
		return 1;
	}
	if(strcmp(cmd,"/animpark", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"PARK","Tai_Chi_in",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"PARK","Tai_Chi_Out",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animpark (1-3)"); }
		}
		return 1;
	}
	if(strcmp(cmd,"/animpaulnmac", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"PAULNMAC","Piss_loop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"PAULNMAC","Piss_out",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"PAULNMAC","PnM_Argue1_A",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"PAULNMAC","PnM_Argue1_B",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"PAULNMAC","PnM_Argue2_A",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"PAULNMAC","PnM_Argue2_B",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"PAULNMAC","PnM_Loop_A",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"PAULNMAC","PnM_Loop_B",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"PAULNMAC","wank_in",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"PAULNMAC","wank_loop",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"PAULNMAC","wank_out",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animpaulnmac (1-12)"); }
		}
		return 1;
	}
	if(strcmp(cmd,"/animped", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"PED","abseil",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"PED","ARRESTgun",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"PED","ATM",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"PED","BIKE_elbowL",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"PED","BIKE_elbowR",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"PED","BIKE_fallR",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"PED","BIKE_fall_off",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"PED","BIKE_pickupL",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"PED","BIKE_pickupR",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"PED","BIKE_pullupL",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"PED","BIKE_pullupR",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"PED","bomber",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"PED","CAR_alignHI_LHS",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"PED","CAR_alignHI_RHS",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"PED","CAR_align_LHS",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"PED","CAR_align_RHS",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"PED","CAR_closedoorL_LHS",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"PED","CAR_closedoorL_RHS",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"PED","CAR_closedoor_LHS",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"PED","CAR_closedoor_RHS",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"PED","CAR_close_LHS",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"PED","CAR_close_RHS",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"PED","CAR_crawloutRHS",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"PED","CAR_dead_LHS",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"PED","CAR_dead_RHS",4.1,0,1,1,1,1); }
		case 26: { ApplyAnimation(playerid,"PED","CAR_doorlocked_LHS",4.1,0,1,1,1,1); }
		case 27: { ApplyAnimation(playerid,"PED","CAR_doorlocked_RHS",4.1,0,1,1,1,1); }
		case 28: { ApplyAnimation(playerid,"PED","CAR_fallout_LHS",4.1,0,1,1,1,1); }
		case 29: { ApplyAnimation(playerid,"PED","CAR_fallout_RHS",4.1,0,1,1,1,1); }
		case 30: { ApplyAnimation(playerid,"PED","CAR_getinL_LHS",4.1,0,1,1,1,1); }
		case 31: { ApplyAnimation(playerid,"PED","CAR_getinL_RHS",4.1,0,1,1,1,1); }
		case 32: { ApplyAnimation(playerid,"PED","CAR_getin_LHS",4.1,0,1,1,1,1); }
		case 33: { ApplyAnimation(playerid,"PED","CAR_getin_RHS",4.1,0,1,1,1,1); }
		case 34: { ApplyAnimation(playerid,"PED","CAR_getoutL_LHS",4.1,0,1,1,1,1); }
		case 35: { ApplyAnimation(playerid,"PED","CAR_getoutL_RHS",4.1,0,1,1,1,1); }
		case 36: { ApplyAnimation(playerid,"PED","CAR_getout_LHS",4.1,0,1,1,1,1); }
		case 37: { ApplyAnimation(playerid,"PED","CAR_getout_RHS",4.1,0,1,1,1,1); }
		case 38: { ApplyAnimation(playerid,"PED","car_hookertalk",4.1,0,1,1,1,1); }
		case 39: { ApplyAnimation(playerid,"PED","CAR_jackedLHS",4.1,0,1,1,1,1); }
		case 40: { ApplyAnimation(playerid,"PED","CAR_jackedRHS",4.1,0,1,1,1,1); }
		case 41: { ApplyAnimation(playerid,"PED","CAR_jumpin_LHS",4.1,0,1,1,1,1); }
		case 42: { ApplyAnimation(playerid,"PED","CAR_LB",4.1,0,1,1,1,1); }
		case 43: { ApplyAnimation(playerid,"PED","CAR_LB_pro",4.1,0,1,1,1,1); }
		case 44: { ApplyAnimation(playerid,"PED","CAR_LB_weak",4.1,0,1,1,1,1); }
		case 45: { ApplyAnimation(playerid,"PED","CAR_LjackedLHS",4.1,0,1,1,1,1); }
		case 46: { ApplyAnimation(playerid,"PED","CAR_LjackedRHS",4.1,0,1,1,1,1); }
		case 47: { ApplyAnimation(playerid,"PED","CAR_Lshuffle_RHS",4.1,0,1,1,1,1); }
		case 48: { ApplyAnimation(playerid,"PED","CAR_Lsit",4.1,0,1,1,1,1); }
		case 49: { ApplyAnimation(playerid,"PED","CAR_open_LHS",4.1,0,1,1,1,1); }
		case 50: { ApplyAnimation(playerid,"PED","CAR_open_RHS",4.1,0,1,1,1,1); }
		case 51: { ApplyAnimation(playerid,"PED","CAR_pulloutL_LHS",4.1,0,1,1,1,1); }
		case 52: { ApplyAnimation(playerid,"PED","CAR_pulloutL_RHS",4.1,0,1,1,1,1); }
		case 53: { ApplyAnimation(playerid,"PED","CAR_pullout_LHS",4.1,0,1,1,1,1); }
		case 54: { ApplyAnimation(playerid,"PED","CAR_pullout_RHS",4.1,0,1,1,1,1); }
		case 55: { ApplyAnimation(playerid,"PED","CAR_Qjacked",4.1,0,1,1,1,1); }
		case 56: { ApplyAnimation(playerid,"PED","CAR_rolldoor",4.1,0,1,1,1,1); }
		case 57: { ApplyAnimation(playerid,"PED","CAR_rolldoorLO",4.1,0,1,1,1,1); }
		case 58: { ApplyAnimation(playerid,"PED","CAR_rollout_LHS",4.1,0,1,1,1,1); }
		case 59: { ApplyAnimation(playerid,"PED","CAR_rollout_RHS",4.1,0,1,1,1,1); }
		case 60: { ApplyAnimation(playerid,"PED","CAR_shuffle_RHS",4.1,0,1,1,1,1); }
		case 61: { ApplyAnimation(playerid,"PED","CAR_sit",4.1,0,1,1,1,1); }
		case 62: { ApplyAnimation(playerid,"PED","CAR_sitp",4.1,0,1,1,1,1); }
		case 63: { ApplyAnimation(playerid,"PED","CAR_sitpLO",4.1,0,1,1,1,1); }
		case 64: { ApplyAnimation(playerid,"PED","CAR_sit_pro",4.1,0,1,1,1,1); }
		case 65: { ApplyAnimation(playerid,"PED","CAR_sit_weak",4.1,0,1,1,1,1); }
		case 66: { ApplyAnimation(playerid,"PED","CAR_tune_radio",4.1,0,1,1,1,1); }
		case 67: { ApplyAnimation(playerid,"PED","CLIMB_idle",4.1,0,1,1,1,1); }
		case 68: { ApplyAnimation(playerid,"PED","CLIMB_jump",4.1,0,1,1,1,1); }
		case 69: { ApplyAnimation(playerid,"PED","CLIMB_jump2fall",4.1,0,1,1,1,1); }
		case 70: { ApplyAnimation(playerid,"PED","CLIMB_jump_B",4.1,0,1,1,1,1); }
		case 71: { ApplyAnimation(playerid,"PED","CLIMB_Pull",4.1,0,1,1,1,1); }
		case 72: { ApplyAnimation(playerid,"PED","CLIMB_Stand",4.1,0,1,1,1,1); }
		case 73: { ApplyAnimation(playerid,"PED","CLIMB_Stand_finish",4.1,0,1,1,1,1); }
		case 74: { ApplyAnimation(playerid,"PED","cower",4.1,0,1,1,1,1); }
		case 75: { ApplyAnimation(playerid,"PED","Crouch_Roll_L",4.1,0,1,1,1,1); }
		case 76: { ApplyAnimation(playerid,"PED","Crouch_Roll_R",4.1,0,1,1,1,1); }
		case 77: { ApplyAnimation(playerid,"PED","DAM_armL_frmBK",4.1,0,1,1,1,1); }
		case 78: { ApplyAnimation(playerid,"PED","DAM_armL_frmFT",4.1,0,1,1,1,1); }
		case 79: { ApplyAnimation(playerid,"PED","DAM_armL_frmLT",4.1,0,1,1,1,1); }
		case 80: { ApplyAnimation(playerid,"PED","DAM_armR_frmBK",4.1,0,1,1,1,1); }
		case 81: { ApplyAnimation(playerid,"PED","DAM_armR_frmFT",4.1,0,1,1,1,1); }
		case 82: { ApplyAnimation(playerid,"PED","DAM_armR_frmRT",4.1,0,1,1,1,1); }
		case 83: { ApplyAnimation(playerid,"PED","DAM_LegL_frmBK",4.1,0,1,1,1,1); }
		case 84: { ApplyAnimation(playerid,"PED","DAM_LegL_frmFT",4.1,0,1,1,1,1); }
		case 85: { ApplyAnimation(playerid,"PED","DAM_LegL_frmLT",4.1,0,1,1,1,1); }
		case 86: { ApplyAnimation(playerid,"PED","DAM_LegR_frmBK",4.1,0,1,1,1,1); }
		case 87: { ApplyAnimation(playerid,"PED","DAM_LegR_frmFT",4.1,0,1,1,1,1); }
		case 88: { ApplyAnimation(playerid,"PED","DAM_LegR_frmRT",4.1,0,1,1,1,1); }
		case 89: { ApplyAnimation(playerid,"PED","DAM_stomach_frmBK",4.1,0,1,1,1,1); }
		case 90: { ApplyAnimation(playerid,"PED","DAM_stomach_frmFT",4.1,0,1,1,1,1); }
		case 91: { ApplyAnimation(playerid,"PED","DAM_stomach_frmLT",4.1,0,1,1,1,1); }
		case 92: { ApplyAnimation(playerid,"PED","DAM_stomach_frmRT",4.1,0,1,1,1,1); }
		case 93: { ApplyAnimation(playerid,"PED","DOOR_LHinge_O",4.1,0,1,1,1,1); }
		case 94: { ApplyAnimation(playerid,"PED","DOOR_RHinge_O",4.1,0,1,1,1,1); }
		case 95: { ApplyAnimation(playerid,"PED","DrivebyL_L",4.1,0,1,1,1,1); }
		case 96: { ApplyAnimation(playerid,"PED","DrivebyL_R",4.1,0,1,1,1,1); }
		case 97: { ApplyAnimation(playerid,"PED","Driveby_L",4.1,0,1,1,1,1); }
		case 98: { ApplyAnimation(playerid,"PED","Driveby_R",4.1,0,1,1,1,1); }
		case 99: { ApplyAnimation(playerid,"PED","DRIVE_BOAT",4.1,0,1,1,1,1); }
		case 100: { ApplyAnimation(playerid,"PED","DRIVE_BOAT_back",4.1,0,1,1,1,1); }
		case 101: { ApplyAnimation(playerid,"PED","DRIVE_BOAT_L",4.1,0,1,1,1,1); }
		case 102: { ApplyAnimation(playerid,"PED","DRIVE_BOAT_R",4.1,0,1,1,1,1); }
		case 103: { ApplyAnimation(playerid,"PED","Drive_L",4.1,0,1,1,1,1); }
		case 104: { ApplyAnimation(playerid,"PED","Drive_LO_l",4.1,0,1,1,1,1); }
		case 105: { ApplyAnimation(playerid,"PED","Drive_LO_R",4.1,0,1,1,1,1); }
		case 106: { ApplyAnimation(playerid,"PED","Drive_L_pro",4.1,0,1,1,1,1); }
		case 107: { ApplyAnimation(playerid,"PED","Drive_L_pro_slow",4.1,0,1,1,1,1); }
		case 108: { ApplyAnimation(playerid,"PED","Drive_L_slow",4.1,0,1,1,1,1); }
		case 109: { ApplyAnimation(playerid,"PED","Drive_L_weak",4.1,0,1,1,1,1); }
		case 110: { ApplyAnimation(playerid,"PED","Drive_L_weak_slow",4.1,0,1,1,1,1); }
		case 111: { ApplyAnimation(playerid,"PED","Drive_R",4.1,0,1,1,1,1); }
		case 112: { ApplyAnimation(playerid,"PED","Drive_R_pro",4.1,0,1,1,1,1); }
		case 113: { ApplyAnimation(playerid,"PED","Drive_R_pro_slow",4.1,0,1,1,1,1); }
		case 114: { ApplyAnimation(playerid,"PED","Drive_R_slow",4.1,0,1,1,1,1); }
		case 115: { ApplyAnimation(playerid,"PED","Drive_R_weak",4.1,0,1,1,1,1); }
		case 116: { ApplyAnimation(playerid,"PED","Drive_R_weak_slow",4.1,0,1,1,1,1); }
		case 117: { ApplyAnimation(playerid,"PED","Drive_truck",4.1,0,1,1,1,1); }
		case 118: { ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1); }
		case 119: { ApplyAnimation(playerid,"PED","DRIVE_truck_L",4.1,0,1,1,1,1); }
		case 120: { ApplyAnimation(playerid,"PED","DRIVE_truck_R",4.1,0,1,1,1,1); }
		case 121: { ApplyAnimation(playerid,"PED","Drown",4.1,0,1,1,1,1); }
		case 122: { ApplyAnimation(playerid,"PED","DUCK_cower",4.1,0,1,1,1,1); }
		case 123: { ApplyAnimation(playerid,"PED","endchat_01",4.1,0,1,1,1,1); }
		case 124: { ApplyAnimation(playerid,"PED","endchat_02",4.1,0,1,1,1,1); }
		case 125: { ApplyAnimation(playerid,"PED","endchat_03",4.1,0,1,1,1,1); }
		case 126: { ApplyAnimation(playerid,"PED","EV_dive",4.1,0,1,1,1,1); }
		case 127: { ApplyAnimation(playerid,"PED","EV_step",4.1,0,1,1,1,1); }
		case 128: { ApplyAnimation(playerid,"PED","facanger",4.1,0,1,1,1,1); }
		case 129: { ApplyAnimation(playerid,"PED","facanger",4.1,0,1,1,1,1); }
		case 130: { ApplyAnimation(playerid,"PED","facgum",4.1,0,1,1,1,1); }
		case 131: { ApplyAnimation(playerid,"PED","facsurp",4.1,0,1,1,1,1); }
		case 132: { ApplyAnimation(playerid,"PED","facsurpm",4.1,0,1,1,1,1); }
		case 133: { ApplyAnimation(playerid,"PED","factalk",4.1,0,1,1,1,1); }
		case 134: { ApplyAnimation(playerid,"PED","facurios",4.1,0,1,1,1,1); }
		case 135: { ApplyAnimation(playerid,"PED","FALL_back",4.1,0,1,1,1,1); }
		case 136: { ApplyAnimation(playerid,"PED","FALL_collapse",4.1,0,1,1,1,1); }
		case 137: { ApplyAnimation(playerid,"PED","FALL_fall",4.1,0,1,1,1,1); }
		case 138: { ApplyAnimation(playerid,"PED","FALL_front",4.1,0,1,1,1,1); }
		case 139: { ApplyAnimation(playerid,"PED","FALL_glide",4.1,0,1,1,1,1); }
		case 140: { ApplyAnimation(playerid,"PED","FALL_land",4.1,0,1,1,1,1); }
		case 141: { ApplyAnimation(playerid,"PED","FALL_skyDive",4.1,0,1,1,1,1); }
		case 142: { ApplyAnimation(playerid,"PED","Fight2Idle",4.1,0,1,1,1,1); }
		case 143: { ApplyAnimation(playerid,"PED","FightA_1",4.1,0,1,1,1,1); }
		case 144: { ApplyAnimation(playerid,"PED","FightA_2",4.1,0,1,1,1,1); }
		case 145: { ApplyAnimation(playerid,"PED","FightA_3",4.1,0,1,1,1,1); }
		case 146: { ApplyAnimation(playerid,"PED","FightA_block",4.1,0,1,1,1,1); }
		case 147: { ApplyAnimation(playerid,"PED","FightA_G",4.1,0,1,1,1,1); }
		case 148: { ApplyAnimation(playerid,"PED","FightA_M",4.1,0,1,1,1,1); }
		case 149: { ApplyAnimation(playerid,"PED","FIGHTIDLE",4.1,0,1,1,1,1); }
		case 150: { ApplyAnimation(playerid,"PED","FightShB",4.1,0,1,1,1,1); }
		case 151: { ApplyAnimation(playerid,"PED","FightShF",4.1,0,1,1,1,1); }
		case 152: { ApplyAnimation(playerid,"PED","FightSh_BWD",4.1,0,1,1,1,1); }
		case 153: { ApplyAnimation(playerid,"PED","FightSh_FWD",4.1,0,1,1,1,1); }
		case 154: { ApplyAnimation(playerid,"PED","FightSh_Left",4.1,0,1,1,1,1); }
		case 155: { ApplyAnimation(playerid,"PED","FightSh_Right",4.1,0,1,1,1,1); }
		case 156: { ApplyAnimation(playerid,"PED","flee_lkaround_01",4.1,0,1,1,1,1); }
		case 157: { ApplyAnimation(playerid,"PED","FLOOR_hit",4.1,0,1,1,1,1); }
		case 158: { ApplyAnimation(playerid,"PED","FLOOR_hit_f",4.1,0,1,1,1,1); }
		case 159: { ApplyAnimation(playerid,"PED","fucku",4.1,0,1,1,1,1); }
		case 160: { ApplyAnimation(playerid,"PED","gang_gunstand",4.1,0,1,1,1,1); }
		case 161: { ApplyAnimation(playerid,"PED","gas_cwr",4.1,0,1,1,1,1); }
		case 162: { ApplyAnimation(playerid,"PED","getup",4.1,0,1,1,1,1); }
		case 163: { ApplyAnimation(playerid,"PED","getup_front",4.1,0,1,1,1,1); }
		case 164: { ApplyAnimation(playerid,"PED","gum_eat",4.1,0,1,1,1,1); }
		case 165: { ApplyAnimation(playerid,"PED","GunCrouchBwd",4.1,0,1,1,1,1); }
		case 166: { ApplyAnimation(playerid,"PED","GunCrouchFwd",4.1,0,1,1,1,1); }
		case 167: { ApplyAnimation(playerid,"PED","GunMove_BWD",4.1,0,1,1,1,1); }
		case 168: { ApplyAnimation(playerid,"PED","GunMove_FWD",4.1,0,1,1,1,1); }
		case 169: { ApplyAnimation(playerid,"PED","GunMove_L",4.1,0,1,1,1,1); }
		case 170: { ApplyAnimation(playerid,"PED","GunMove_R",4.1,0,1,1,1,1); }
		case 171: { ApplyAnimation(playerid,"PED","Gun_2_IDLE",4.1,0,1,1,1,1); }
		case 172: { ApplyAnimation(playerid,"PED","GUN_BUTT",4.1,0,1,1,1,1); }
		case 173: { ApplyAnimation(playerid,"PED","GUN_BUTT_crouch",4.1,0,1,1,1,1); }
		case 174: { ApplyAnimation(playerid,"PED","Gun_stand",4.1,0,1,1,1,1); }
		case 175: { ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1); }
		case 176: { ApplyAnimation(playerid,"PED","handsup",4.1,0,1,1,1,1); }
		case 177: { ApplyAnimation(playerid,"PED","HitA_1",4.1,0,1,1,1,1); }
		case 178: { ApplyAnimation(playerid,"PED","HitA_2",4.1,0,1,1,1,1); }
		case 179: { ApplyAnimation(playerid,"PED","HitA_3",4.1,0,1,1,1,1); }
		case 180: { ApplyAnimation(playerid,"PED","HIT_back",4.1,0,1,1,1,1); }
		case 181: { ApplyAnimation(playerid,"PED","HIT_behind",4.1,0,1,1,1,1); }
		case 182: { ApplyAnimation(playerid,"PED","HIT_front",4.1,0,1,1,1,1); }
		case 183: { ApplyAnimation(playerid,"PED","HIT_GUN_BUTT",4.1,0,1,1,1,1); }
		case 184: { ApplyAnimation(playerid,"PED","HIT_L",4.1,0,1,1,1,1); }
		case 185: { ApplyAnimation(playerid,"PED","HIT_R",4.1,0,1,1,1,1); }
		case 186: { ApplyAnimation(playerid,"PED","HIT_walk",4.1,0,1,1,1,1); }
		case 187: { ApplyAnimation(playerid,"PED","HIT_wall",4.1,0,1,1,1,1); }
		case 188: { ApplyAnimation(playerid,"PED","Idlestance_fat",4.1,0,1,1,1,1); }
		case 189: { ApplyAnimation(playerid,"PED","idlestance_old",4.1,0,1,1,1,1); }
		case 190: { ApplyAnimation(playerid,"PED","IDLE_armed",4.1,0,1,1,1,1); }
		case 191: { ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1); }
		case 192: { ApplyAnimation(playerid,"PED","IDLE_csaw",4.1,0,1,1,1,1); }
		case 193: { ApplyAnimation(playerid,"PED","Idle_Gang1",4.1,0,1,1,1,1); }
		case 194: { ApplyAnimation(playerid,"PED","IDLE_HBHB",4.1,0,1,1,1,1); }
		case 195: { ApplyAnimation(playerid,"PED","IDLE_ROCKET",4.1,0,1,1,1,1); }
		case 196: { ApplyAnimation(playerid,"PED","IDLE_stance",4.1,0,1,1,1,1); }
		case 197: { ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1); }
		case 198: { ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,1,1); }
		case 199: { ApplyAnimation(playerid,"PED","Jetpack_Idle",4.1,0,1,1,1,1); }
		case 200: { ApplyAnimation(playerid,"PED","JOG_femaleA",4.1,0,1,1,1,1); }
		case 201: { ApplyAnimation(playerid,"PED","JOG_maleA",4.1,0,1,1,1,1); }
		case 202: { ApplyAnimation(playerid,"PED","JUMP_glide",4.1,0,1,1,1,1); }
		case 203: { ApplyAnimation(playerid,"PED","JUMP_land",4.1,0,1,1,1,1); }
		case 204: { ApplyAnimation(playerid,"PED","JUMP_launch",4.1,0,1,1,1,1); }
		case 205: { ApplyAnimation(playerid,"PED","JUMP_launch_R",4.1,0,1,1,1,1); }
		case 206: { ApplyAnimation(playerid,"PED","KART_drive",4.1,0,1,1,1,1); }
		case 207: { ApplyAnimation(playerid,"PED","KART_L",4.1,0,1,1,1,1); }
		case 208: { ApplyAnimation(playerid,"PED","KART_LB",4.1,0,1,1,1,1); }
		case 209: { ApplyAnimation(playerid,"PED","KART_R",4.1,0,1,1,1,1); }
		case 210: { ApplyAnimation(playerid,"PED","KD_left",4.1,0,1,1,1,1); }
		case 211: { ApplyAnimation(playerid,"PED","KD_right",4.1,0,1,1,1,1); }
		case 212: { ApplyAnimation(playerid,"PED","KO_shot_face",4.1,0,1,1,1,1); }
		case 213: { ApplyAnimation(playerid,"PED","KO_shot_front",4.1,0,1,1,1,1); }
		case 214: { ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1); }
		case 215: { ApplyAnimation(playerid,"PED","KO_skid_back",4.1,0,1,1,1,1); }
		case 216: { ApplyAnimation(playerid,"PED","KO_skid_front",4.1,0,1,1,1,1); }
		case 217: { ApplyAnimation(playerid,"PED","KO_spin_L",4.1,0,1,1,1,1); }
		case 218: { ApplyAnimation(playerid,"PED","KO_spin_R",4.1,0,1,1,1,1); }
		case 219: { ApplyAnimation(playerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1); }
		case 220: { ApplyAnimation(playerid,"PED","phone_in",4.1,0,1,1,1,1); }
		case 221: { ApplyAnimation(playerid,"PED","phone_out",4.1,0,1,1,1,1); }
		case 222: { ApplyAnimation(playerid,"PED","phone_talk",4.1,0,1,1,1,1); }
		case 223: { ApplyAnimation(playerid,"PED","Player_Sneak",4.1,0,1,1,1,1); }
		case 224: { ApplyAnimation(playerid,"PED","Player_Sneak_walkstart",4.1,0,1,1,1,1); }
		case 225: { ApplyAnimation(playerid,"PED","roadcross",4.1,0,1,1,1,1); }
		case 226: { ApplyAnimation(playerid,"PED","roadcross_female",4.1,0,1,1,1,1); }
		case 227: { ApplyAnimation(playerid,"PED","roadcross_gang",4.1,0,1,1,1,1); }
		case 228: { ApplyAnimation(playerid,"PED","roadcross_old",4.1,0,1,1,1,1); }
		case 229: { ApplyAnimation(playerid,"PED","run_1armed",4.1,0,1,1,1,1); }
		case 230: { ApplyAnimation(playerid,"PED","run_armed",4.1,0,1,1,1,1); }
		case 231: { ApplyAnimation(playerid,"PED","run_civi",4.1,0,1,1,1,1); }
		case 232: { ApplyAnimation(playerid,"PED","run_csaw",4.1,0,1,1,1,1); }
		case 233: { ApplyAnimation(playerid,"PED","run_fat",4.1,0,1,1,1,1); }
		case 234: { ApplyAnimation(playerid,"PED","run_fatold",4.1,0,1,1,1,1); }
		case 235: { ApplyAnimation(playerid,"PED","run_gang1",4.1,0,1,1,1,1); }
		case 236: { ApplyAnimation(playerid,"PED","run_left",4.1,0,1,1,1,1); }
		case 237: { ApplyAnimation(playerid,"PED","run_old",4.1,0,1,1,1,1); }
		case 238: { ApplyAnimation(playerid,"PED","run_player",4.1,0,1,1,1,1); }
		case 239: { ApplyAnimation(playerid,"PED","run_right",4.1,0,1,1,1,1); }
		case 240: { ApplyAnimation(playerid,"PED","run_rocket",4.1,0,1,1,1,1); }
		case 241: { ApplyAnimation(playerid,"PED","Run_stop",4.1,0,1,1,1,1); }
		case 242: { ApplyAnimation(playerid,"PED","Run_stopR",4.1,0,1,1,1,1); }
		case 243: { ApplyAnimation(playerid,"PED","Run_Wuzi",4.1,0,1,1,1,1); }
		case 244: { ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,1,1,1,1); }
		case 245: { ApplyAnimation(playerid,"PED","SEAT_idle",4.1,0,1,1,1,1); }
		case 246: { ApplyAnimation(playerid,"PED","SEAT_up",4.1,0,1,1,1,1); }
		case 247: { ApplyAnimation(playerid,"PED","SHOT_leftP",4.1,0,1,1,1,1); }
		case 248: { ApplyAnimation(playerid,"PED","SHOT_partial",4.1,0,1,1,1,1); }
		case 249: { ApplyAnimation(playerid,"PED","SHOT_partial_B",4.1,0,1,1,1,1); }
		case 250: { ApplyAnimation(playerid,"PED","SHOT_rightP",4.1,0,1,1,1,1); }
		case 251: { ApplyAnimation(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1); }
		case 252: { ApplyAnimation(playerid,"PED","Smoke_in_car",4.1,0,1,1,1,1); }
		case 253: { ApplyAnimation(playerid,"PED","sprint_civi",4.1,0,1,1,1,1); }
		case 254: { ApplyAnimation(playerid,"PED","sprint_panic",4.1,0,1,1,1,1); }
		case 255: { ApplyAnimation(playerid,"PED","Sprint_Wuzi",4.1,0,1,1,1,1); }
		case 256: { ApplyAnimation(playerid,"PED","swat_run",4.1,0,1,1,1,1); }
		case 257: { ApplyAnimation(playerid,"PED","Swim_Tread",4.1,0,1,1,1,1); }
		case 258: { ApplyAnimation(playerid,"PED","Tap_hand",4.1,0,1,1,1,1); }
		case 259: { ApplyAnimation(playerid,"PED","Tap_handP",4.1,0,1,1,1,1); }
		case 260: { ApplyAnimation(playerid,"PED","turn_180",4.1,0,1,1,1,1); }
		case 261: { ApplyAnimation(playerid,"PED","Turn_L",4.1,0,1,1,1,1); }
		case 262: { ApplyAnimation(playerid,"PED","Turn_R",4.1,0,1,1,1,1); }
		case 263: { ApplyAnimation(playerid,"PED","WALK_armed",4.1,0,1,1,1,1); }
		case 264: { ApplyAnimation(playerid,"PED","WALK_civi",4.1,0,1,1,1,1); }
		case 265: { ApplyAnimation(playerid,"PED","WALK_csaw",4.1,0,1,1,1,1); }
		case 266: { ApplyAnimation(playerid,"PED","Walk_DoorPartial",4.1,0,1,1,1,1); }
		case 267: { ApplyAnimation(playerid,"PED","WALK_drunk",4.1,0,1,1,1,1); }
		case 268: { ApplyAnimation(playerid,"PED","WALK_fat",4.1,0,1,1,1,1); }
		case 269: { ApplyAnimation(playerid,"PED","WALK_fatold",4.1,0,1,1,1,1); }
		case 270: { ApplyAnimation(playerid,"PED","WALK_gang1",4.1,0,1,1,1,1); }
		case 271: { ApplyAnimation(playerid,"PED","WALK_gang2",4.1,0,1,1,1,1); }
		case 272: { ApplyAnimation(playerid,"PED","WALK_old",4.1,0,1,1,1,1); }
		case 273: { ApplyAnimation(playerid,"PED","WALK_player",4.1,0,1,1,1,1); }
		case 274: { ApplyAnimation(playerid,"PED","WALK_rocket",4.1,0,1,1,1,1); }
		case 275: { ApplyAnimation(playerid,"PED","WALK_shuffle",4.1,0,1,1,1,1); }
		case 276: { ApplyAnimation(playerid,"PED","WALK_start",4.1,0,1,1,1,1); }
		case 277: { ApplyAnimation(playerid,"PED","WALK_start_armed",4.1,0,1,1,1,1); }
		case 278: { ApplyAnimation(playerid,"PED","WALK_start_csaw",4.1,0,1,1,1,1); }
		case 279: { ApplyAnimation(playerid,"PED","WALK_start_rocket",4.1,0,1,1,1,1); }
		case 280: { ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,0,1,1,1,1); }
		case 281: { ApplyAnimation(playerid,"PED","WEAPON_crouch",4.1,0,1,1,1,1); }
		case 282: { ApplyAnimation(playerid,"PED","woman_idlestance",4.1,0,1,1,1,1); }
		case 283: { ApplyAnimation(playerid,"PED","woman_run",4.1,0,1,1,1,1); }
		case 284: { ApplyAnimation(playerid,"PED","WOMAN_runbusy",4.1,0,1,1,1,1); }
		case 285: { ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,0,1,1,1,1); }
		case 286: { ApplyAnimation(playerid,"PED","woman_runpanic",4.1,0,1,1,1,1); }
		case 287: { ApplyAnimation(playerid,"PED","WOMAN_runsexy",4.1,0,1,1,1,1); }
		case 288: { ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,0,1,1,1,1); }
		case 289: { ApplyAnimation(playerid,"PED","WOMAN_walkfatold",4.1,0,1,1,1,1); }
		case 290: { ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,0,1,1,1,1); }
		case 291: { ApplyAnimation(playerid,"PED","WOMAN_walkold",4.1,0,1,1,1,1); }
		case 292: { ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,0,1,1,1,1); }
		case 293: { ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,0,1,1,1,1); }
		case 294: { ApplyAnimation(playerid,"PED","WOMAN_walkshop",4.1,0,1,1,1,1); }
		case 295: { ApplyAnimation(playerid,"PED","XPRESSscratch",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animped (1-295)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animpdvbys", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyBwd",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyFwd",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyLHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyRHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animpdvbys (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animplayidles", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"PLAYIDLES","shift",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"PLAYIDLES","shldr",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"PLAYIDLES","strleg",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"PLAYIDLES","time",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animplayidles (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animpolice", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"POLICE","CopTraf_Away",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"POLICE","CopTraf_Come",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"POLICE","CopTraf_Left",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"POLICE","COP_getoutcar_LHS",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"POLICE","Cop_move_FWD",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"POLICE","crm_drgbst_01",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"POLICE","Door_Kick",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"POLICE","plc_drgbst_01",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"POLICE","plc_drgbst_02",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animpolice (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animpool", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"POOL","POOL_ChalkCue",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"POOL","POOL_Idle_Stance",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"POOL","POOL_Long_Shot",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"POOL","POOL_Long_Shot_O",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"POOL","POOL_Long_Start",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"POOL","POOL_Long_Start_O",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"POOL","POOL_Med_Shot",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"POOL","POOL_Med_Shot_O",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"POOL","POOL_Med_Start",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"POOL","POOL_Med_Start_O",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"POOL","POOL_Place_White",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"POOL","POOL_Short_Shot",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"POOL","POOL_Short_Shot_O",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"POOL","POOL_Short_Start",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"POOL","POOL_Short_Start_O",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"POOL","POOL_Walk",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"POOL","POOL_Walk_Start",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"POOL","POOL_XLong_Shot",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"POOL","POOL_XLong_Shot_O",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"POOL","POOL_XLong_Start",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"POOL","POOL_XLong_Start_O",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animpool (1-21)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animpoor", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"POOR","WINWASH_Start",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"POOR","WINWASH_Wash2Beg",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animpoor (1-2)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animpython", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
	    case 1: { ApplyAnimation(playerid,"PYTHON","python_crouchfire",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"PYTHON","python_crouchreload",4.1,0,1,1,1,1); }
	    case 3: { ApplyAnimation(playerid,"PYTHON","python_fire",4.1,0,1,1,1,1); }
	    case 4: { ApplyAnimation(playerid,"PYTHON","python_fire_poor",4.1,0,1,1,1,1); }
	    case 5: { ApplyAnimation(playerid,"PYTHON","python_reload",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animpython (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animquad", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"QUAD","QUAD_back",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"QUAD","QUAD_driveby_FT",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"QUAD","QUAD_driveby_LHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"QUAD","QUAD_driveby_RHS",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"QUAD","QUAD_FWD",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"QUAD","QUAD_getoff_B",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"QUAD","QUAD_getoff_LHS",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"QUAD","QUAD_getoff_RHS",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"QUAD","QUAD_geton_LHS",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"QUAD","QUAD_geton_RHS",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"QUAD","QUAD_hit",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"QUAD","QUAD_kick",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"QUAD","QUAD_Left",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"QUAD","QUAD_passenger",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"QUAD","QUAD_reverse",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"QUAD","QUAD_ride",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"QUAD","QUAD_Right",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animquad (1-17)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animquaddbz", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animquaddbz (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animrifle", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"RIFLE","RIFLE_crouchfire",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"RIFLE","RIFLE_crouchload",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"RIFLE","RIFLE_fire",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"RIFLE","RIFLE_load",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animrifle (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animriot", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"RIOT","RIOT_ANGRY_B",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"RIOT","RIOT_challenge",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"RIOT","RIOT_CHANT",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"RIOT","RIOT_FUKU",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"RIOT","RIOT_PUNCHES",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"RIOT","RIOT_shout",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animriot (1-7)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animrobb", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open_O",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animrobb (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animrocket", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"ROCKET","idle_rocket",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"ROCKET","RocketFire",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"ROCKET","run_rocket",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"ROCKET","walk_rocket",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"ROCKET","WALK_start_rocket",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animrocket (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animrustler", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"RUSTLER","Plane_align_LHS",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"RUSTLER","Plane_close",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"RUSTLER","Plane_getin",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"RUSTLER","Plane_getout",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"RUSTLER","Plane_open",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animrustler (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animryder", true) == 0)  {
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"RYDER","RYD_Beckon_01",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"RYDER","RYD_Beckon_02",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"RYDER","RYD_Beckon_03",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"RYDER","RYD_Die_PT1",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"RYDER","RYD_Die_PT2",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"RYDER","Van_Crate_L",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"RYDER","Van_Crate_R",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"RYDER","Van_Fall_L",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"RYDER","Van_Fall_R",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"RYDER","Van_Lean_L",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"RYDER","Van_Lean_R",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"RYDER","VAN_PickUp_E",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"RYDER","VAN_PickUp_S",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"RYDER","Van_Stand",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"RYDER","Van_Stand_Crate",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"RYDER","Van_Throw",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animryder (1-16)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animscratching", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SCRATCHING","scdldlp",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SCRATCHING","scdlulp",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SCRATCHING","scdrdlp",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SCRATCHING","scdrulp",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"SCRATCHING","sclng_l",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"SCRATCHING","sclng_r",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"SCRATCHING","scmid_l",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"SCRATCHING","scmid_r",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"SCRATCHING","scshrtl",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"SCRATCHING","scshrtr",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"SCRATCHING","sc_ltor",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"SCRATCHING","sc_rtol",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animscratching (1-12)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animshamal", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SHAMAL","SHAMAL_align",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SHAMAL","SHAMAL_getin_LHS",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SHAMAL","SHAMAL_getout_LHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SHAMAL","SHAMAL_open",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animshamal (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animshop", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SHOP","ROB_2Idle",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SHOP","ROB_Loop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SHOP","ROB_Shifty",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"SHOP","ROB_StickUp_In",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"SHOP","SHP_Duck",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"SHOP","SHP_Duck_Aim",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"SHOP","SHP_Duck_Fire",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"SHOP","SHP_Gun_Aim",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"SHOP","SHP_Gun_Duck",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"SHOP","SHP_Gun_Fire",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"SHOP","SHP_Gun_Grab",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"SHOP","SHP_Gun_Threat",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"SHOP","SHP_HandsUp_Scr",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"SHOP","SHP_Jump_Glide",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"SHOP","SHP_Jump_Land",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"SHOP","SHP_Jump_Launch",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"SHOP","SHP_Rob_GiveCash",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"SHOP","SHP_Rob_HandsUp",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"SHOP","SHP_Rob_React",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"SHOP","SHP_Serve_End",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"SHOP","SHP_Serve_Idle",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"SHOP","SHP_Serve_Loop",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"SHOP","SHP_Serve_Start",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"SHOP","Smoke_RYD",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animshop (1-25)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animshotgun", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SHOTGUN","shotgun_crouchfire",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SHOTGUN","shotgun_fire",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SHOTGUN","shotgun_fire_poor",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animshotgun (1-3)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animsilenced", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SILENCED","CrouchReload",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SILENCED","SilenceCrouchfire",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SILENCED","Silence_fire",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SILENCED","Silence_reload",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animsilenced (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animskate", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SKATE","skate_idle",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SKATE","skate_run",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SKATE","skate_sprint",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animskate (1-3)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animsmoking", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SMOKING","F_smklean_loop",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"SMOKING","M_smk_in",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"SMOKING","M_smk_loop",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"SMOKING","M_smk_out",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"SMOKING","M_smk_tap",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animsmoking (1-8)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animsniper", true) == 0)
	{
		if(!IsPlayerConnected(playerid))
    	ApplyAnimation(playerid,"SNIPER","WEAPON_sniper",4.1,0,1,1,1,1);
		return 1;
	}

	if(strcmp(cmd,"/animspraycan", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SPRAYCAN","spraycan_fire",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animspraycan (1-2)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animstrip", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"STRIP","PLY_CASH",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"STRIP","PUN_LOOP",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"STRIP","strip_A",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"STRIP","strip_B",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"STRIP","strip_C",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"STRIP","strip_D",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"STRIP","strip_E",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"STRIP","strip_F",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"STRIP","strip_G",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"STRIP","STR_A2B",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"STRIP","STR_B2C",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"STRIP","STR_C1",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"STRIP","STR_C2",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"STRIP","STR_C2B",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"STRIP","STR_Loop_A",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"STRIP","STR_Loop_B",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"STRIP","STR_Loop_C",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animstrip (1-20)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animsunbathe", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SUNBATHE","batherdown",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SUNBATHE","batherup",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_in",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_out",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleA",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleB",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleC",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_in",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_out",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleB",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleC",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_in",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_out",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"SUNBATHE","SBATHE_F_LieB2Sit",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"SUNBATHE","SBATHE_F_Out",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"SUNBATHE","SitnWait_out_W",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animsunbathe (1-18)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animswat", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SWAT","gnstwall_injurd",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SWAT","JMP_Wall1m_180",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SWAT","Rail_fall",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SWAT","Rail_fall_crawl",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"SWAT","swt_breach_01",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"SWAT","swt_breach_02",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"SWAT","swt_breach_03",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"SWAT","swt_go",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"SWAT","swt_lkt",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"SWAT","swt_sty",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"SWAT","swt_vent_01",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"SWAT","swt_vent_02",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"SWAT","swt_vnt_sht_die",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"SWAT","swt_vnt_sht_in",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"SWAT","swt_vnt_sht_loop",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"SWAT","swt_wllpk_L",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"SWAT","swt_wllpk_L_back",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"SWAT","swt_wllpk_R",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"SWAT","swt_wllpk_R_back",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"SWAT","swt_wllshoot_in_L",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"SWAT","swt_wllshoot_in_R",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"SWAT","swt_wllshoot_out_L",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"SWAT","swt_wllshoot_out_R",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animswat (1-23)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animsweet", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SWEET","ho_ass_slapped",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SWEET","LaFin_Player",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SWEET","LaFin_Sweet",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SWEET","plyr_hndshldr_01",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"SWEET","sweet_hndshldr_01",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"SWEET","Sweet_injuredloop",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animsweet (1-7)"); }
		}
		return 1;
	}


	if(strcmp(cmd,"/animswim", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SWIM","Swim_Breast",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SWIM","SWIM_crawl",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SWIM","Swim_Dive_Under",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SWIM","Swim_Glide",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"SWIM","Swim_jumpout",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"SWIM","Swim_Tread",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"SWIM","Swim_Under",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animswim (1-7)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animsword", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SWORD","sword_1",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SWORD","sword_2",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SWORD","sword_3",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SWORD","sword_4",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"SWORD","Sword_Hit_1",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"SWORD","Sword_Hit_2",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"SWORD","Sword_Hit_3",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"SWORD","sword_IDLE",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"SWORD","sword_part",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animsword (1-10)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animtank", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"TANK","TANK_align_LHS",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"TANK","TANK_close_LHS",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"TANK","TANK_doorlocked",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"TANK","TANK_getin_LHS",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"TANK","TANK_getout_LHS",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"TANK","TANK_open_LHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animtank (1-6)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animtattoo", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_O",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_P",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_T",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Out_O",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Out_P",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Out_T",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_O",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_P",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_T",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_O",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_P",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_T",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_O",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_P",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_T",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_O",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_P",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_T",4.1,0,1,1,1,1); }
		case 19: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_O",4.1,0,1,1,1,1); }
		case 20: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_P",4.1,0,1,1,1,1); }
		case 21: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_T",4.1,0,1,1,1,1); }
		case 22: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_O",4.1,0,1,1,1,1); }
		case 23: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_P",4.1,0,1,1,1,1); }
		case 24: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_T",4.1,0,1,1,1,1); }
		case 25: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_O",4.1,0,1,1,1,1); }
		case 26: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_P",4.1,0,1,1,1,1); }
		case 27: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_T",4.1,0,1,1,1,1); }
		case 28: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_In_P",4.1,0,1,1,1,1); }
		case 29: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_Loop_P",4.1,0,1,1,1,1); }
		case 30: { ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_Out_P",4.1,0,1,1,1,1); }
		case 31: { ApplyAnimation(playerid,"TATTOOS","TAT_Bel_In_O",4.1,0,1,1,1,1); }
		case 32: { ApplyAnimation(playerid,"TATTOOS","TAT_Bel_In_T",4.1,0,1,1,1,1); }
		case 33: { ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Out_O",4.1,0,1,1,1,1); }
		case 34: { ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Out_T",4.1,0,1,1,1,1); }
		case 35: { ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Pose_O",4.1,0,1,1,1,1); }
		case 36: { ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Pose_T",4.1,0,1,1,1,1); }
		case 37: { ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_O",4.1,0,1,1,1,1); }
		case 38: { ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_P",4.1,0,1,1,1,1); }
		case 39: { ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_T",4.1,0,1,1,1,1); }
		case 40: { ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_O",4.1,0,1,1,1,1); }
		case 41: { ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_P",4.1,0,1,1,1,1); }
		case 42: { ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_T",4.1,0,1,1,1,1); }
		case 43: { ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_O",4.1,0,1,1,1,1); }
		case 44: { ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_P",4.1,0,1,1,1,1); }
		case 45: { ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_T",4.1,0,1,1,1,1); }
		case 46: { ApplyAnimation(playerid,"TATTOOS","TAT_Drop_O",4.1,0,1,1,1,1); }
		case 47: { ApplyAnimation(playerid,"TATTOOS","TAT_Idle_Loop_O",4.1,0,1,1,1,1); }
		case 48: { ApplyAnimation(playerid,"TATTOOS","TAT_Idle_Loop_T",4.1,0,1,1,1,1); }
		case 49: { ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_O",4.1,0,1,1,1,1); }
		case 50: { ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_P",4.1,0,1,1,1,1); }
		case 51: { ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_T",4.1,0,1,1,1,1); }
		case 52: { ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_O",4.1,0,1,1,1,1); }
		case 53: { ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_P",4.1,0,1,1,1,1); }
		case 54: { ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_T",4.1,0,1,1,1,1); }
		case 55: { ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_O",4.1,0,1,1,1,1); }
		case 56: { ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_P",4.1,0,1,1,1,1); }
		case 57: { ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_T",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animtattoo (1-57)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animtec", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"TEC","TEC_crouchfire",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"TEC","TEC_crouchreload",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"TEC","TEC_fire",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"TEC","TEC_reload",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animtec (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animtrain", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"TRAIN","tran_gtup",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"TRAIN","tran_hng",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"TRAIN","tran_ouch",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"TRAIN","tran_stmb",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animtrain (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animtruck", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"TRUCK","TRUCK_ALIGN_LHS",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"TRUCK","TRUCK_ALIGN_RHS",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"TRUCK","TRUCK_closedoor_LHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"TRUCK","TRUCK_closedoor_RHS",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"TRUCK","TRUCK_close_LHS",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"TRUCK","TRUCK_close_RHS",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"TRUCK","TRUCK_getin_LHS",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"TRUCK","TRUCK_getin_RHS",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"TRUCK","TRUCK_getout_LHS",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"TRUCK","TRUCK_getout_RHS",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"TRUCK","TRUCK_jackedLHS",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"TRUCK","TRUCK_jackedRHS",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"TRUCK","TRUCK_open_LHS",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"TRUCK","TRUCK_open_RHS",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"TRUCK","TRUCK_pullout_LHS",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"TRUCK","TRUCK_pullout_RHS",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"TRUCK","TRUCK_Shuffle",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animtruck (1-17)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animuzi", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"UZI","UZI_crouchfire",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"UZI","UZI_crouchreload",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"UZI","UZI_fire",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"UZI","UZI_fire_poor",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"UZI","UZI_reload",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animuzi (1-5)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animvan", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"VAN","VAN_close_back_LHS",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"VAN","VAN_close_back_RHS",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"VAN","VAN_getin_Back_LHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"VAN","VAN_getin_Back_RHS",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"VAN","VAN_getout_back_LHS",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"VAN","VAN_getout_back_RHS",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"VAN","VAN_open_back_LHS",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"VAN","VAN_open_back_RHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animvan (1-8)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animvedding", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"VENDING","vend_eat1_P",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"VENDING","VEND_Eat_P",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"VENDING","VEND_Use",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"VENDING","VEND_Use_pt2",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animvedding (1-6)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animvortex", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"VORTEX","CAR_jumpin_LHS",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"VORTEX","CAR_jumpin_RHS",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"VORTEX","vortex_getout_LHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"VORTEX","vortex_getout_RHS",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animvortex (1-4)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animwayfarer", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"WAYFARER","WF_Back",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"WAYFARER","WF_drivebyFT",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"WAYFARER","WF_drivebyLHS",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"WAYFARER","WF_drivebyRHS",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"WAYFARER","WF_Fwd",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"WAYFARER","WF_getoffBACK",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"WAYFARER","WF_getoffLHS",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"WAYFARER","WF_getoffRHS",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"WAYFARER","WF_hit",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"WAYFARER","WF_jumponL",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"WAYFARER","WF_jumponR",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"WAYFARER","WF_kick",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"WAYFARER","WF_Left",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"WAYFARER","WF_passenger",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"WAYFARER","WF_pushes",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"WAYFARER","WF_Ride",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"WAYFARER","WF_Right",4.1,0,1,1,1,1); }
		case 18: { ApplyAnimation(playerid,"WAYFARER","WF_Still",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animwayfarer (1-18)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animweapons", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"WEAPONS","SHP_1H_Lift",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"WEAPONS","SHP_1H_Lift_End",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"WEAPONS","SHP_1H_Ret",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"WEAPONS","SHP_1H_Ret_S",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"WEAPONS","SHP_2H_Lift",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"WEAPONS","SHP_2H_Lift_End",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"WEAPONS","SHP_2H_Ret",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"WEAPONS","SHP_2H_Ret_S",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Lift",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Lift_End",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Ret",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Ret_S",4.1,0,1,1,1,1); }
		case 13: { ApplyAnimation(playerid,"WEAPONS","SHP_G_Lift_In",4.1,0,1,1,1,1); }
		case 14: { ApplyAnimation(playerid,"WEAPONS","SHP_G_Lift_Out",4.1,0,1,1,1,1); }
		case 15: { ApplyAnimation(playerid,"WEAPONS","SHP_Tray_In",4.1,0,1,1,1,1); }
		case 16: { ApplyAnimation(playerid,"WEAPONS","SHP_Tray_Out",4.1,0,1,1,1,1); }
		case 17: { ApplyAnimation(playerid,"WEAPONS","SHP_Tray_Pose",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animweapons (1-17)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animwuzi", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"WUZI","CS_Dead_Guy",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"WUZI","CS_Plyr_pt1",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"WUZI","CS_Plyr_pt2",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"WUZI","CS_Wuzi_pt1",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"WUZI","CS_Wuzi_pt2",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"WUZI","Walkstart_Idle_01",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"WUZI","Wuzi_follow",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Plyr",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"WUZI","Wuzi_grnd_chk",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"WUZI","Wuzi_stand_loop",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"WUZI","Wuzi_Walk",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animwuzi (1-12)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animsex", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"SNM","SPANKING_IDLEW",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"SNM","SPANKING_IDLEP",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"SNM","SPANKINGW",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"SNM","SPANKINGP",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"SNM","SPANKEDP",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"SNM","SPANKING_ENDW",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"SNM","SPANKING_ENDP",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animsex (1-8)"); }
		}
		return 1;
	}

	if(strcmp(cmd,"/animblowjob", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) { return 1; }
		tmp = strtok(cmdtext, idx);
		switch(strval(tmp)) {
		case 1: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,1,1,1,1); }
		case 2: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_W",4.1,0,1,1,1,1); }
		case 3: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_P",4.1,0,1,1,1,1); }
		case 4: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_W",4.1,0,1,1,1,1); }
		case 5: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,1); }
		case 6: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,1); }
		case 7: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_P",4.1,0,1,1,1,1); }
		case 8: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_W",4.1,0,1,1,1,1); }
		case 9: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_LOOP_P",4.1,0,1,1,1,1); }
		case 10: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_LOOP_W",4.1,0,1,1,1,1); }
		case 11: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_P",4.1,0,1,1,1,1); }
		case 12: { ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_W",4.1,0,1,1,1,1); }
		default: { SendClientMessage(playerid, DORADO, "Utiliza /animblowjob (1-12)"); }
		}
		return 1;
	}

	if(strcmp(cmd, "/handsup", true) == 0) {
        gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
		gPlayerUsingLoopingAnim[playerid] = 2;
        return 1;
    }
    if(strcmp(cmd, "/drunk", true) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"PED","WALK_DRUNK",4.0,1,1,1,1,0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
    }
    if (strcmp("/robman", cmdtext, true) == 0) {
        gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
	}
    if (strcmp("/crossarms", cmdtext, true) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
	}
    if (strcmp("/lay", cmdtext, true, 6) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
    }
    if (strcmp("/hide", cmdtext, true, 3) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
	}
    if (strcmp("/vomitar", cmdtext, true) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		return 1;
	}
    if (strcmp("/comer", cmdtext, true) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
	}
    if (strcmp("/saludar", cmdtext, true) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
	}
    if (strcmp("/trato", cmdtext, true) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}
    if (strcmp("/crack", cmdtext, true, 6) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
	}
    if (strcmp("/smokem", cmdtext, true, 4) == 0) {
        gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
	}
    if (strcmp("/smokef", cmdtext, true) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
	}
    if (strcmp("/sentarse", cmdtext, true, 4) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
    }
    if(strcmp(cmd, "/fucku", true) == 0) {
        gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0);
		return 1;
    }
    if(strcmp(cmd, "/taichi", true) == 0) {
    	gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
    }
    if(strcmp(cmd, "/asiento", true) == 0) {
        gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.0,1,0,0,0,0);
		gPlayerUsingLoopingAnim[playerid] = 1;
		return 1;
    }
 	if(strcmp(cmd, "/dance", true) == 0)
	{
  		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid,DORADO,"Utiliza: /dance (1-4)");
			return 1;
		}

		new dancestyle = strval(tmp);
		if(dancestyle < 1 || dancestyle > 4)
		{
		    SendClientMessage(playerid,DORADO,"Utiliza: /dance (1-4)");
		    return 1;
		}
        gPlayerUsingLoopingAnim[playerid] = 0;
        ClearAnimations(playerid);
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		if(dancestyle == 1)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		    gPlayerUsingLoopingAnim[playerid] = 2;
		}
		else if(dancestyle == 2)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		    gPlayerUsingLoopingAnim[playerid] = 2;
		}
		else if(dancestyle == 3)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		    gPlayerUsingLoopingAnim[playerid] = 2;
		}
		else if(dancestyle == 4)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		    gPlayerUsingLoopingAnim[playerid] = 2;
		}
  		return 1;
	}
	if(strcmp(cmd, "/papeles", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(Informacion[playerid][Coche]!= 9999)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Papeles [Usuario]");
					return 1;
				}
				new player = strval(tmp);
				if(GetDistanceBetweenPlayers(playerid, player) > 3.0)
				{
				    SendClientMessage(playerid, GRIS, "Debes estar cerca del jugador!");
				    return 1;
				}
				new car = Informacion[playerid][Coche];
                new dias = ((CarInfo[car][cTComprado]-(CarInfo[car][cTComprado]%24))/24);
                new horas = (CarInfo[car][cTComprado]%24);
				format(rango, sizeof(rango), "{D49E00}Propietario: {FFFFFF}%s\n{D49E00}Matricula: {FFFFFF}%d\n{D49E00}Modelo: {FFFFFF}%s\n{D49E00}Vencimiento: {FFFFFF}%d dias y %d horas", CarInfo[car][cNameD],CarMatricula[car],VehicleName[GetVehicleModel(car)-400], dias, horas);
				ShowPlayerDialog(player, pInfo, DIALOG_STYLE_MSGBOX, "- Papeles", rango, "Cerrar","");
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "No tienes un vehiculo");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/puente", true) == 0)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        new coche = GetPlayerVehicleID(playerid);
		    if(EsUnVehiculoVenta(coche))
		    {
			    if(Informacion[playerid][Ganzuas] >= 1)
			    {
			        if(CarInfo[coche][cVenta] == 0)
        			{
        			    if(CarPuenteado[coche] == 0)
        			    {
							GameTextForPlayer(playerid, "~w~Haciendo puente", 3500, 4);
							SetTimerEx("PuenteVehiculo", 3500, false, "d", playerid);
   			            }
			            else
			            {
			                SendClientMessage(playerid, GRIS, "Este coche ya est� puenteado");
			            }
			        }
			        else
			        {
			            SendClientMessage(playerid, GRIS, "No puedes hacerle un puente a este veh�culo");
					}
			    }
			    else
			    {
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, DESCONGELADO);
					SendClientMessage(playerid, GRIS, "No tienes ganzuas!");
			    }
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "No puedes puentear este coche");
			}
		}
		else
		{
		    SendClientMessage(playerid, GRIS, "Debes estar en un vehiculo para Utilizar este comando");
		}
		return 1;
	}
	if(strcmp(cmd, "/vendercoche", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == NFS)
	        {
				if(IsPlayerInAnyVehicle(playerid))
				{
				    new coche = GetPlayerVehicleID(playerid);
				    if(EsUnVehiculoVenta(coche))
				    {
				        if(CarInfo[coche][cVenta] == 0)
				        {
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SendClientMessage(playerid, DORADO, "Utiliza: /vendercoche [Usuario] [Precio]");
								return 1;
							}
							new player=strval(tmp);
							if(GetDistanceBetweenPlayers(playerid, player) > 5.0)
							{
							    SendClientMessage(playerid, GRIS, "Debes estar cerca del comprador!");
							    return 1;
							}
							if(player == playerid)
							{
							    SendClientMessage(playerid, GRIS, "No puedes venderte un coche a ti!");
							    return 1;
							}
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SendClientMessage(playerid, DORADO, "Utiliza: /vendercoche [Usuario] [Precio]");
								return 1;
							}
							new precio = strval(tmp);
							if(precio > 6000 || precio < 1) { SendClientMessage(playerid, GRIS, "El precio no puede pasar los $6000 y tampoco ser menor a $1!"); return 1; }
							GetPlayerName(player, giveplayer, sizeof(giveplayer));
							if(strcmp(CarInfo[coche][cNameD], "Dealership", true) != 0) { SendClientMessage(playerid, GRIS, "Este coche ya tiene due�o!"); return 1; }
							if(Informacion[player][Coche] != 9999) { SendClientMessage(playerid, GRIS, "Ese jugador ya tiene un veh�culo"); return 1; }
							format(rango, sizeof(rango), "{FFFFFF}El vendedor de coches %s te ofrese un coche por $%d", NombreEx(playerid), precio);
							ShowPlayerDialog(player, OAuto, DIALOG_STYLE_MSGBOX, "- Oferta",rango,"Aceptar","Ignorar");
							format(rango, sizeof(rango), "* Le ofreciste a %s un veh�culo por $%d **", giveplayer, precio);
							SendClientMessage(playerid, AZULCLARO, rango);
							OfertaCoche[player] = playerid;
							PrecioCoche[player] = precio;
							IDcCoche[player] = coche;
				        }
				        else
				        {
				            SendClientMessage(playerid, GRIS, "Este veh�culo no est� en venta");
							return 1;
				        }
					}
					else
			        {
			            SendClientMessage(playerid, GRIS, "No puedes vender este veh�culo!");
						return 1;
			        }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "Debes estar en el veh�culo que venderas!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "No eres vendedor de veh�culos!");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/reacomodar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == NFS)
	        {
				if(IsPlayerInAnyVehicle(playerid))
				{
				    new coche = GetPlayerVehicleID(playerid);
				    if(EsUnVehiculoVenta(coche))
				    {
				        if(CarInfo[coche][cVenta] == 1)
						{
						    if(CarInfo[coche][cLock] == 0)
						    {
					            if(IsPlayerInRangeOfPoint(playerid, 8.0 ,305.7799,-1481.4413,24.4687) || IsPlayerInRangeOfPoint(playerid, 8.0, 2800.8508,-1466.3916,16.1014))
					            {
					                RemovePlayerFromVehicle(playerid);
	                                SetVehicleToRespawn(coche);
	                                CarInfo[coche][cVenta] = 0;
	                                CarInfo[coche][cTComprado] = 0;
	                                CarInfo[coche][cLock] = 0;
	                                for(new i=0;i<MAX_PLAYERS;i++)
	                                {
										GetVehicleParamsEx(coche,engine,lights,alarm,doors,bonnet,boot,objective);
										SetVehicleParamsEx(coche,engine,lights,alarm,0,bonnet,boot,objective);
	                                    GetPlayerName(i, giveplayer, sizeof(giveplayer));
	                                    if(strcmp(CarInfo[coche][cNameD], giveplayer, true) == 0)
	                                    {
	                                       Informacion[playerid][Coche] = 9999;
	                                       DisablePlayerCheckpoint(playerid);
	                          			}
	                             	}
	                                strmid(CarInfo[coche][cNameD], "Dealership", 0, strlen("Dealership"), 999);
								}
						        else
						        {
									SendClientMessage(playerid, GRIS, "Se ha indicado el lugar m�s cercano para dropear");
									new Float:distancia1 = DistanciaDelPunto(playerid,305.7799,-1481.4413,24.4687);
									new Float:distancia2 = DistanciaDelPunto(playerid,2800.8508,-1466.3916,16.1014);
									if(distancia1 < distancia2)
									{
						               	SetPlayerCheckpoint(playerid,305.7799,-1481.4413,24.4687,8.0);
					                }
 					                else if(distancia1 > distancia2)
					                {
					                    SetPlayerCheckpoint(playerid,2800.8508,-1466.3916,16.1014,8.0);
					                }
					                else
					                {
					                    SetPlayerCheckpoint(playerid,305.7799,-1481.4413,24.4687,8.0);
					                }
							    	return 1;
					            }
					        }
					    }
					    else
				        {
				            SendClientMessage(playerid, GRIS, "No puedes hacer un dropear este veh�culo");
				            return 1;
				        }
			        }
			        else
					{
					    SendClientMessage(playerid, GRIS, "No puedes hacer un dropear este veh�culo");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "No puedes hacer un dropear este veh�culo");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Debes estar en un veh�culo para Utilizar este comando");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, GRIS, "No eres ladr�n de veh�culos");
		    return 1;
		}
		return 1;
    }
	if(strcmp(cmd, "/desactivarbomba", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == FBI)
	        {
	            for(new i=0;i<MAX_PLAYERS;i++)
	            {
	                if(PlayerBomba[i] == 2)
	                {
						if(IsPlayerInRangeOfPoint(playerid, 2.0, PosBomba[i][0], PosBomba[i][1], PosBomba[i][2]))
						{
                            ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 1, 0, 0, 0, 10000);
							ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 1, 0, 0, 0, 10000);
							SetTimerEx("desactivarBomba", 10000, false, "dfff", playerid, i);
						}
				    }
	            }
	        }
	        else
		    {
		        SendClientMessage(playerid, GRIS, "No estas autorizado a Utilizar este comando!");
		        return 1;
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/vvida", true) == 0)
	{
		if(Informacion[playerid][Admin] >= 2)
		{
			new tmp1[256], tmp2[256], jugador, admin, rango1[256], rango2[256], nombrejugador[MAX_PLAYER_NAME], nombreadmin[MAX_PLAYER_NAME], Float:vvida;
			tmp1 = strtok(cmdtext, idx);
			tmp2 = strtok(cmdtext, idx);
			if (!strlen(tmp1) || !strlen(tmp2)) return SendClientMessage(playerid, DORADO, "Utiliza: /vvida [ID] [Cantidad].");
			jugador = strval(tmp1);
			admin = playerid;
			GetPlayerName(jugador, nombrejugador, sizeof(nombrejugador));
			GetPlayerName(admin, nombreadmin, sizeof(nombreadmin));
			vvida = float(strval(tmp2));
			if (IsPlayerConnected(jugador))
			{
				format(rango1, sizeof(rango1), "Has puesto la vida del vehiculo de %s en %f.", nombrejugador, vvida);
				format(rango2, sizeof(rango2), "%s ha puesto la vida de tu vehiculo en %f.", nombreadmin, vvida);
				SendClientMessage(admin, CELESTE, rango1);
				SendClientMessage(jugador, VERDE, rango2);
				PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
				PlayerPlaySound(jugador, 1057, 0.0, 0.0, 0.0);
				SetVehicleHealth(GetPlayerVehicleID(jugador), vvida);
			}
			else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra conectado.");
		}
		else return SendClientMessage(playerid, GRIS, "Necesitas ser administrador nivel 2 o mas para Utilizar este comando");
		return 1;
	}
	if (strcmp(cmd, "/vreparar", true) == 0)
	{
		if(Informacion[playerid][Admin] >= 2)
		{
			new jugador, admin, rango1[256], rango2[256], nombrejugador[MAX_PLAYER_NAME], nombreadmin[MAX_PLAYER_NAME];
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /vreparar [ID].");
			jugador = strval(tmp);
			admin = playerid;
			GetPlayerName(jugador, nombrejugador, sizeof(nombrejugador));
			GetPlayerName(admin, nombreadmin, sizeof(nombreadmin));
			if (IsPlayerConnected(jugador))
			{
			    if (IsPlayerInAnyVehicle(jugador))
			    {
					format(rango1, sizeof(rango1), "Has reparado el vehiculo de %s.", nombrejugador);
					format(rango2, sizeof(rango2), "%s ha reparado tu vehiculo.", nombreadmin);
					SendClientMessage(admin, CELESTE, rango1);
					SendClientMessage(jugador, VERDE, rango2);
					PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
					PlayerPlaySound(jugador, 1057, 0.0, 0.0, 0.0);
					RepairVehicle(GetPlayerVehicleID(jugador));
				}
				else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra en un vehiculo.");
			}
			else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra conectado.");
		}
		else return SendClientMessage(playerid, GRIS, "Necesitas ser administrador nivel 2 o mas para Utilizar este comando.");
		return 1;
	}
	if (strcmp(cmd, "/vdestruir", true) == 0)
	{
		if(Informacion[playerid][Admin] >= 2)
		{
			new tmp1[256], jugador, admin, rango1[256], rango2[256], nombrejugador[MAX_PLAYER_NAME], nombreadmin[MAX_PLAYER_NAME];
			tmp1 = strtok(cmdtext, idx);
			if (!strlen(tmp1)) return SendClientMessage(playerid, DORADO, "Utiliza: /vdestruir [ID].");
			jugador = strval(tmp1);
			admin = playerid;
			GetPlayerName(jugador, nombrejugador, sizeof(nombrejugador));
			GetPlayerName(admin, nombreadmin, sizeof(nombreadmin));
			if (IsPlayerConnected(jugador))
			{
			    if (IsPlayerInAnyVehicle(jugador))
			    {
					format(rango1, sizeof(rango1), "Has destruido el vehiculo de %s.", nombrejugador);
					format(rango2, sizeof(rango2), "%s ha destruido tu vehiculo.", nombreadmin);
					SendClientMessage(admin, CELESTE, rango1);
					SendClientMessage(jugador, VERDE, rango2);
					PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
					PlayerPlaySound(jugador, 1057, 0.0, 0.0, 0.0);
					DestroyVehicle(GetPlayerVehicleID(jugador));
				}
				else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra en un vehiculo.");
			}
			else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra conectado.");
		}
		else return SendClientMessage(playerid, GRIS, "Necesitas ser administrador nviel 2 para Utilizar este comando.");
		return 1;
	}
	if (strcmp(cmd, "/vnitro", true) == 0)
	{
		if(Informacion[playerid][Admin] >= 2)
		{
			new jugador, admin, rango1[256], rango2[256], nombrejugador[MAX_PLAYER_NAME], nombreadmin[MAX_PLAYER_NAME];
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /vnitro [ID].");
			jugador = strval(tmp);
			admin = playerid;
			GetPlayerName(jugador, nombrejugador, sizeof(nombrejugador));
			GetPlayerName(admin, nombreadmin, sizeof(nombreadmin));
			if (IsPlayerConnected(jugador))
			{
			    if (IsPlayerInAnyVehicle(jugador))
			    {
					format(rango1, sizeof(rango1), "Le has a�adido nitro al vehiculo de %s.", nombrejugador);
					format(rango2, sizeof(rango2), "%s le ha a�adido nitro a tu vehiculo.", nombreadmin);
					SendClientMessage(admin, CELESTE, rango1);
					SendClientMessage(jugador, VERDE, rango2);
					PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
					PlayerPlaySound(jugador, 1057, 0.0, 0.0, 0.0);
					AddVehicleComponent(GetPlayerVehicleID(jugador), 1010);
				}
				else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra en un vehiculo.");
			}
			else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra conectado.");
		}
		else return SendClientMessage(playerid, GRIS, "Necesitas ser administrador nivel 2 para Utilizar este comando.");
		return 1;
	}
	if (strcmp(cmd, "/vcolor", true) == 0)
	{
		if(Informacion[playerid][Admin] >= 2)
		{
			new tmp1[256], tmp2[256], tmp3[256], jugador, admin, rango1[256], rango2[256], nombrejugador[MAX_PLAYER_NAME], nombreadmin[MAX_PLAYER_NAME], color1, color2;
			tmp1 = strtok(cmdtext, idx);
			tmp2 = strtok(cmdtext, idx);
			tmp3 = strtok(cmdtext, idx);
			if (!strlen(tmp1) || !strlen(tmp2) || strlen(tmp3)) return SendClientMessage(playerid, DORADO, "Utiliza: /vcolor [ID] [Color1] [Color2].");
			jugador = strval(tmp1);
			admin = playerid;
			GetPlayerName(jugador, nombrejugador, sizeof(nombrejugador));
			GetPlayerName(admin, nombreadmin, sizeof(nombreadmin));
			vehiculo = GetVehicleModel(GetPlayerVehicleID(jugador));
			color1 = strval(tmp2);
			color2 = strval(tmp3);
			if (IsPlayerConnected(jugador))
			{
			    if (IsPlayerInAnyVehicle(jugador))
			    {
					format(rango1, sizeof(rango1), "Has cambiado el color del vehiculo de %s. (Color 1: %d Color 2: %d)", nombrejugador, color1, color2);
					format(rango2, sizeof(rango2), "%s ha cambiado el color de tu vehiculo. (Color 1: %d Color 2: %d)", nombreadmin, color1, color2);
					SendClientMessage(admin, CELESTE, rango1);
					SendClientMessage(jugador, VERDE, rango2);
					PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
					PlayerPlaySound(jugador, 1057, 0.0, 0.0, 0.0);
					ChangeVehicleColor(vehiculo, color1, color2);
				}
				else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra en un vehiculo.");
			}
			else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra conectado.");
		}
		else return SendClientMessage(playerid, GRIS, "Necesitas ser administrador nivel 2 para Utilizar este comando.");
		return 1;
	}
	if(strcmp(cmd, "/creararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Faccion] != LEON && Informacion[playerid][Faccion] != YAKU)
			{
			    SendClientMessage(playerid, GRIS, "No estas autorizado a Utilizar este comando!");
		        return 1;
			}
			new listitems[] = "1\tCuchillo\t10 materiales\n2\t9mm\t\t50 materiales\n3\tSilenciada\t80 materiales\n4\tDeagle\t\t100 materiales\n5\tTec9\t\t120 materiales\n6\tMP5\t\t150 materiales\n7\tBomba\t\t500 materiales";
			ShowPlayerDialog(playerid,MArmas,DIALOG_STYLE_LIST,"Armas",listitems,"Comprar","Salir");
		    return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/ponerbomba", true)== 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Faccion] != LEON && Informacion[playerid][Faccion] != YAKU)
			{
			    SendClientMessage(playerid, GRIS, "No estas autorizado a Utilizar este comando!");
		        return 1;
			}
		    if(PlayerBomba[playerid] == 1)
		    {
				new Float:xpos,Float:ypos,Float:zpos;
				GetPlayerPos(playerid, xpos, ypos, zpos);
				PosBomba[playerid][0] = xpos;
				PosBomba[playerid][1] = ypos;
				PosBomba[playerid][2] = zpos;
				RemovePlayerAttachedObject(playerid, 1);
				new car = VehiculoCercano(playerid);
		        if(DistanciaEntreCarPer(car, playerid) < 2.0)
		        {
		    		IDCarBomba[playerid] = car;
		            ObjetoBomba[playerid] = CreateObject(1654, xpos, ypos, zpos - 0.8,270,0,0);
		            AttachObjectToVehicle(ObjetoBomba[playerid], car, xpos, ypos, zpos - 1.0,270,0,0);
		            ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0);
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0);
					SendClientMessage(playerid, AZULCLARO, "Has puesto una bomba en un coche!");
				    format(rango, sizeof(rango), "* %s pone una bomba en el coche y la activa", NombreEx(playerid));
				    RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				    PlayerBomba[playerid] = 3;
		        }
		        else
		        {
					ObjetoBomba[playerid] = CreateObject(1654, xpos, ypos, zpos - 0.8,270,0,0);
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0);
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0);
					SendClientMessage(playerid, AZULCLARO, "Has puesto una bomba!");
					format(rango, sizeof(rango), "* %s pone una bomba en el piso y la activa", NombreEx(playerid));
				    RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					PlayerBomba[playerid] = 2;
			    }
	        }
	        else if(PlayerBomba[playerid] == 2)
	        {
				SendClientMessage(playerid, GRIS, "Ya has puesto una bomba, no puedes poner m�s de una!");
				return 1;
	        }
	        else
	        {
				SendClientMessage(playerid, GRIS, "No tienes ninguna bomba");
				return 1;
	        }
		}
		return 1;
    }
	if(strcmp(cmd, "/detonarbomba", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Faccion] != LEON && Informacion[playerid][Faccion] != YAKU)
			{
			    SendClientMessage(playerid, GRIS, "No estas autorizado a Utilizar este comando!");
		        return 1;
			}
	        if(PlayerBomba[playerid] == 2)
	        {
	            DestroyObject(ObjetoBomba[playerid]);
				CreateExplosion(PosBomba[playerid][0], PosBomba[playerid][1], PosBomba[playerid][2], 2, 10.0);
	            PlayerBomba[playerid] = 0;
	            SendClientMessage(playerid, AZULCLARO, "Has detonado la bomba");
				format(rango, sizeof(rango), "* %s apreta el boton rojo del control remoto", NombreEx(playerid));
				RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	            for(new player=0;player<MAX_PLAYERS;player++)
	            {
	                if(IsPlayerInRangeOfPoint(player, 10.0, PosBomba[playerid][0], PosBomba[playerid][1], PosBomba[playerid][2]))
	                {
						SetPlayerHealth(player, 0.0);
	                }
	            }
	            for(new carid=0;carid<MAX_PLAYERS;carid++)
	            {
	                if(IsCarNearToPoint(carid, 10.0, PosBomba[playerid][0], PosBomba[playerid][1], PosBomba[playerid][2]))
	                {
						SetVehicleHealth(carid, 0.0);
	                }
	            }
	        }
	        else if(PlayerBomba[playerid] == 3)
	        {
	            DestroyObject(ObjetoBomba[playerid]);
	            new Float:xpos,Float:ypos,Float:zpos;
				GetVehiclePos(IDCarBomba[playerid], xpos, ypos, zpos);
				CreateExplosion(xpos, ypos, zpos, 2, 10.0);
				PlayerBomba[playerid] = 0;
		        SendClientMessage(playerid, AZULCLARO, "Has detonado la bomba");
				format(rango, sizeof(rango), "* %s apreta el boton rojo del control remoto", NombreEx(playerid));
				RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	            for(new player=0;player<MAX_PLAYERS;player++)
	            {
	                if(IsPlayerInRangeOfPoint(player, 10.0, xpos, ypos, zpos))
	                {
						SetPlayerHealth(player, 0.0);
	                }
	            }
	            for(new carid=0;carid<MAX_PLAYERS;carid++)
	            {
	                if(IsCarNearToPoint(carid, 10.0, xpos, ypos, zpos))
	                {
						SetVehicleHealth(carid, 0.0);
	                }
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid,GRIS, "No has puesto ninguna bomba!");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/fumar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Cigarrillos] == 0)
			{
			    SendClientMessage(playerid, GRIS, "No tienes cigarrillos para fumar");
			    return 1;
			}
			Informacion[playerid][Cigarrillos] -= 1;
	        SendClientMessage(playerid, AMARILLO, "Has Utilizado un cigarrillo");
	        SetPlayerDrunkLevel(playerid, 1);
			format(rango, sizeof(rango), "* %s saca un cigarrillo de la cajita y fuma un cigarro", NombreEx(playerid));
	        RangoCercano(30, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
			return 1;
		}
	}
	if(strcmp(cmd, "/autorizar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Admin] >= 1)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /autorizar [Usuario]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(rango, sizeof(rango), "* Has dado una autorizacion al usuario %s",giveplayer);
				        SendClientMessage(playerid, AZULCLARO, rango);
				        format(rango, sizeof(rango), "* El Administrador %s te ha dado la autorizacion para Utilizar el comando",NombreEx(playerid));
				        SendClientMessage(giveplayerid, AZULCLARO, rango);
				        Autorizado[giveplayerid] = 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solo administradores pueden Utilizar este comando");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/autodesbug", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Autorizado[playerid] == 0)
			{
			    SendClientMessage(playerid, GRIS, "Un administrador no te autorizo para Utilizar este comando");
			    return 1;
			}
			SendClientMessage(playerid, VERDE, "Te has desbugeado de los mas probables bug, recuerda que perdiste la autorizacion para volver a repetirlo");
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerSkin(playerid, Informacion[playerid][Skin]);
			TogglePlayerControllable(playerid, DESCONGELADO);
			Autorizado[playerid] = 0;
			ActualizarEstrellas(playerid);
			TextDrawHideForPlayer(playerid, DNI_FONDO);
			TextDrawHideForPlayer(playerid, DNI_NAME[playerid]);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd,"/comercaramelo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Caramelos] <= 0)
			{
			    SendClientMessage(playerid, GRIS," No tienes caramelos!");
			    return 1;
			}
			Informacion[playerid][Caramelos] -= 1;
			Informacion[playerid][Hambre] += 5;
			format(rango, sizeof(rango),"Has empezado a comer un caramelo, bajas tu hambre un 5 porciento.", giveplayer);
			SendClientMessage(playerid,AZULCLARO, rango);
			format(rango, sizeof(rango), "* %s mete un caramelo en su boca y lo mastica", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			return 1;
		}
	}
	if(strcmp(cmd, "/armeria", true) == 0)
	{
		if(!PlayerToPoint(5, playerid, 296.7918,-38.2912,1001.5156))
		{
		    SendClientMessage(playerid, GRIS, "Debes estar en la ammu-nation");
		    return 1;
		}
		if(Informacion[playerid][LArmas] == 0)
		{
		    SendClientMessage(playerid, GRIS, "Lo siento, necesitas licencia de armas para obterla legalmente");
		    return 1;
		}
		ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST,"- Armas","[$10] - Spray\n[$20] - Pu�o Americano\n[$50] - Cuchillo\n[$100] - Pistola 9mm\n[$150] - Desert Eagle\n[$200] - Pistola con Silenciador\n[$250] - Tec 9\n[$260] - Blindaje\n[$300] - Sub Fusil MP5\n[$350] - Rifle de Cazeria\n[$400] - Escopeta\n[$700] - Rifle Francotirador\n[$800] - Ametralladora Automatica M4\n[$1000] - Ametralladora Automatica AK-47","Comprar","Cancelar");
		return 1;
	}
	if(strcmp(cmd, "/equipar", true) == 0)
	{
		if(!PlayerToPoint(5, playerid, 253.4972,79.3319,1003.6406))
		{
		    SendClientMessage(playerid, GRIS, "Debes estar en los vestuarios");
		    return 1;
		}
		if(Informacion[playerid][Faccion] != LSPD)
		{
		    SendClientMessage(playerid, GRIS, "Solo miembros del departamento de policia");
		    return 1;
		}
		ShowPlayerDialog(playerid, Equipar, DIALOG_STYLE_LIST,"- Equipos Especiales","-> Equipo S.W.A.T Ligero\n-> Equipo S.W.A.T Mediano\n-> Equipo S.W.A.T Pesado\n-> Equipo de Espionaje\n-> Equipo Francotirador\n-> Retirar Equipo","Usar","Cancelar");
  		return 1;
	}
	if(strcmp(cmd, "/tienda", true) == 0)
	{
		if(!PlayerToPoint(5, playerid, -28.1112,-184.9997,1003.5469) && !PlayerToPoint(5, playerid, 2.3553,-28.9129,1003.5494) && !PlayerToPoint(5, playerid,-27.5308,-89.4513,1003.5469))
		{
		    SendClientMessage(playerid, GRIS, "Lo siento, debes estar dentro de una tiena 24/7");
		    return 1;
		}
		ShowPlayerDialog(playerid, Tienda, DIALOG_STYLE_LIST,"- Tienda 24/7","[$10] - Caramelos\n[$50] - Camara de Fotos\n[$60] - Cigarros\n[$100] - Telefono Celular\n[$150] - Reproductor MP3\n[$200] - Pack de $300 de Saldo\n[$150] - Relog","Comprar","Salir");
		return 1;
	}
	if(strcmp(cmd, "/venderDNI", true) == 0)
	{
	    if(Informacion[playerid][Faccion] == PRES)
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /venderdni [Usuario] [Precio]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 50 || money > 500) { SendClientMessage(playerid, GRIS, "El precio no puede ser menor a 50 ni mayor a 500"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(RangoCercanoS(8.0, playerid, playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, GRIS, "No puedes repararte a ti mismo"); return 1; }
				    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					    format(rango, sizeof(rango), "* Ofresiste a %s un DNI por $%d",giveplayer,money);
						SendClientMessage(playerid, AZULCLARO, rango);
						format(rango, sizeof(rango), "{FFFFFF}El Agente %s te ofrese $%d por una DNI", NombreEx(playerid), money);
						ShowPlayerDialog(playa, Documentos, DIALOG_STYLE_MSGBOX, "- Oferta",rango,"Aceptar","Ignorar");
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador debe estar cerca tuyo");
				}
				}
			}
			else
			{
	   			 SendClientMessage(playerid, GRIS, "Jugador desconectado");
			}
		}
		else
		{
	 		SendClientMessage(playerid, GRIS, "No eres miembro de presidencia de la nacion");
		}
		return 1;
	}
 	if(strcmp(cmd, "/reparar", true) == 0)
	{
	   if(PlayerToPoint(5, playerid, 2523.9111,-2087.4182,13.5814))
	   {
		    if(Informacion[playerid][Faccion] == MECA)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Reparar [Usuario] [Precio]");
					return 1;
				}
				new playa;
				new money;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
				if(money < 50 || money > 35000) { SendClientMessage(playerid, GRIS, "El precio no puede ser menor a 50 ni mayor a 35000"); return 1; }
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(RangoCercanoS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
						{
						    if(playa == playerid) { SendClientMessage(playerid, GRIS, "No puedes repararte a ti mismo"); return 1; }
					    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						    format(rango, sizeof(rango), "* Ofresiste a %s reparar su coche por $%d",giveplayer,money);
							SendClientMessage(playerid, AZULCLARO, rango);
							format(rango, sizeof(rango), "{FFFFFF}El mecanico %s te ofrese $%d por reparar tu coche", NombreEx(playerid), money);
							ShowPlayerDialog(playa, OMecanico, DIALOG_STYLE_MSGBOX, "- Oferta",rango,"Aceptar","Ignorar");
							RepairOffer[playa] = playerid;
							RepairPrice[playa] = money;
						}
						else
						{
						    SendClientMessage(playerid, GRIS, "El jugador debe estar cerca tuyo y en un coche!");
						}
					}
				}
				else
				{
		   			 SendClientMessage(playerid, GRIS, "Jugador desconectado");
				}
			}
			else
			{
		 		SendClientMessage(playerid, GRIS, "No eres miembro de OneMotors");
			}
		}
		else
		{
			   SendClientMessage(playerid, GRIS, "Debes estar en el area de reparacion del taller");
		}
		return 1;
	}
	if(strcmp(cmd, "/quitartraje", true) == 0)
	{
		if(EstaConTraje[playerid] == 0)
		{
			SendClientMessage(playerid, GRIS, "Ya no poses traje, puedes ponerte uno cuando quieras");
			return 1;
		}
		EstaConTraje[playerid] = 0;
		SetPlayerSkin(playerid, Informacion[playerid][Skin]);
		SendClientMessage(playerid, VERDE, "Te has quitado el traje, puedes volver a ponerte otro");
		return 1;
	}
	if(strcmp(cmd, "/trajes", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Kit1] == 0 && Informacion[playerid][Kit2] == 0 && Informacion[playerid][Kit3] == 0)
			{
				SendClientMessage(playerid, GRIS, "Lo siento, debes tener al menos un kit de trajes para Utilizar el comando");
				return 1;
			}
	  	    new x[256];
			x = strtok(cmdtext, idx);
			if(!strlen(x))
			{
			    SendClientMessage(playerid, DORADO, "Utiliza: /trajes [ID]");
			    SendClientMessage(playerid, BLANCO, "Si quieres ver la lista de skins validos, ingresa como opcion la palabra LISTA");
				return 1;
			}
		    if(strcmp(x,"lista",true) == 0)
			{
				if(Informacion[playerid][Kit1] == 1)
				{
	 				SendClientMessage(playerid, BLANCO, "{FF8D00}1| {FFFFFF}Traje de Prostituta Economico");
					SendClientMessage(playerid, BLANCO, "{FF8D00}2| {FFFFFF}Traje de Prostituta Estilo 1");
					SendClientMessage(playerid, BLANCO, "{FF8D00}3| {FFFFFF}Traje de Prostituta Estilo 2");
					SendClientMessage(playerid, BLANCO, "{FF8D00}4| {FFFFFF}Traje de Prostituta Estilo 3");
					SendClientMessage(playerid, BLANCO, "{FF8D00}5| {FFFFFF}Traje de Ba�o para piel parda");
					SendClientMessage(playerid, BLANCO, "{FF8D00}6| {FFFFFF}Traje de Ba�o para piel blanca");
					SendClientMessage(playerid, BLANCO, "{FF8D00}7| {FFFFFF}Traje de Ba�o para piel morena");
					SendClientMessage(playerid, BLANCO, "{FF8D00}8| {FFFFFF}Traje de Fantasia");
					SendClientMessage(playerid, BLANCO, "{FF8D00}9| {FFFFFF}Traje de Fantasia Satira");
					SendClientMessage(playerid, BLANCO, "{FF8D00}10| {FFFFFF}Traje de Fantasia Policial");
					SendClientMessage(playerid, BLANCO, "{FF8D00}11| {FFFFFF}Traje de Fantasia Striptease");
        			return 1;
				}
   			}
			if(strcmp(x, "1", true) == 0)
			{
			    if(Informacion[playerid][Kit1] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 1");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 238);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "2", true) == 0)
			{
			    if(Informacion[playerid][Kit1] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 1");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 63);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "3", true) == 0)
			{
			    if(Informacion[playerid][Kit1] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 1");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 64);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "4", true) == 0)
			{
			    if(Informacion[playerid][Kit1] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 1");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 85);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "5", true) == 0)
			{
			    if(Informacion[playerid][Kit2] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 2");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 140);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "6", true) == 0)
			{
			    if(Informacion[playerid][Kit2] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 2");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 138);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "7", true) == 0)
			{
			    if(Informacion[playerid][Kit2] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 2");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 139);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "8", true) == 0)
			{
			    if(Informacion[playerid][Kit3] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 3");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 178);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "9", true) == 0)
			{
			    if(Informacion[playerid][Kit3] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 3");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 257);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "10", true) == 0)
			{
			    if(Informacion[playerid][Kit3] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 3");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 246);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
			if(strcmp(x, "11", true) == 0)
			{
			    if(Informacion[playerid][Kit3] == 0)
			    {
					SendClientMessage(playerid, GRIS, "Lo siento, debes comprar un kit de trajes de nivel 3");
					return 1;
				}
				if(EstaConTraje[playerid] == 1)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, ya tienes un traje puesto, Utiliza /quitartraje para quitartelo");
					return 1;
				}
				EstaConTraje[playerid] = 1;
				SetPlayerSkin(playerid, 87);
				SendClientMessage(playerid, AMARILLO, "Te has puesto un traje!, Utiliza /quitartraje para quitartelo");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sexshop", true) == 0)
	{
		if(!PlayerToPoint(2, playerid, -105.0600,-11.1400,1000.7188))
		{
  			SendClientMessage(playerid, GRIS, "Necesitas estar en la tienda pornografica");
			return 1;
		}
		ShowPlayerDialog(playerid, TPorno, DIALOG_STYLE_LIST, "- Tienda Porno","-> Complementos\n-> Trajes","Seleccionar","Cancelar");
		return 1;
	}
	if(strcmp(cmd, "/darcrack", true) == 0)
	{
       if(IsPlayerConnected(playerid))
       {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /darcrack [Usuario] [Cantidad]");
				return 1;
			}
 		    if(giveplayerid == playerid)
		    {
		        SendClientMessage(playerid, GRIS," No puedes pasarte crack a ti mismo!");
				return 1;
			}
		    if(giveplayerid != INVALID_PLAYER_ID)
		    {
	  			if (RangoCercanoS(8.0, playerid, giveplayerid))
				{
 					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new amount;
					amount = strval(tmp);
					if(amount > 0 && amount <= Informacion[playerid][Crack])
					{
						Informacion[playerid][Crack] -= amount;
						Informacion[giveplayerid][Crack] += amount;
						format(rango, sizeof(rango),"Le has dado a %s %d gramos de crack", giveplayer, amount);
						SendClientMessage(playerid,BLANCO, rango);
						format(rango, sizeof(rango),"Recibiste %d gramos de crack de %s",amount, NombreEx(playerid));
						SendClientMessage(giveplayerid,BLANCO, rango);
						format(rango, sizeof(rango), "* %s le pasa unas piedras a escondidas*", NombreEx(playerid), NombreEx(giveplayerid));
						RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, GRIS," No tienes esa cantidad!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, GRIS," El jugador no est� cerca tuyo!");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS," El jugador no existe o no est� conectado!");
				return 1;
			}
		}
	}
	if(strcmp(cmd, "/armarioyakuza", true) == 0)
	{
	    if(!PlayerToPoint(1, playerid, 2330.2798,-1011.7328,1054.7188))
	    {
			SendClientMessage(playerid, GRIS, "Debes estar en el armario de la segunda planta de Yakuza Mansion");
			return 1;
		}
		if(Informacion[playerid][Faccion] != YAKU)
	    {
			SendClientMessage(playerid, GRIS, "Debes ser parte de la familia Yakuza para Utilizar este comando");
			return 1;
		}
		ShowPlayerDialog(playerid, CSkinYakuza, DIALOG_STYLE_LIST, "- Vestimentas","*| Vestimenta para Mujeres\n1| Novato\n2| Recadero\n3| Miembro Honorario\n4| Capo Criminal\n5| Capo de Regimen\n6| Consejero\n7| Sub Jefe Yakuza\n8| Don Yakuza","Aceptar","Salir");
		return 1;
	}
	if(strcmp(cmd, "/armarioCorleone", true) == 0)
	{
	    if(!PlayerToPoint(2, playerid, 1261.7921,-795.8046,1084.2415))
	    {
			SendClientMessage(playerid, GRIS, "Debes estar en el armario de la segunda planta de Corleone`s Mansion");
			return 1;
		}
		if(Informacion[playerid][Faccion] != LEON)
	    {
			SendClientMessage(playerid, GRIS, "Debes ser parte de la familia Corleone para Utilizar este comando");
			return 1;
		}
		ShowPlayerDialog(playerid, CSkinCorleone, DIALOG_STYLE_LIST, "- Vestimentas","*| Vestimenta para Mujeres\n1| Novato\n2| Recadero\n3| Miembro Honorario\n4| Capo Criminal\n5| Capo de Regimen\n6| Consejero\n7| Sub Jefe Corleone\n8| Don Corleone","Aceptar","Salir");
		return 1;
	}
	if(strcmp(cmd, "/Utilizaradrenalina", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Adrenalina] == 0)
	        {
	            SendClientMessage(playerid, GRIS, "No tienes suficiente adrenalina para drogarte");
	            return 1;
	        }
			if(EstaDrogadoConAdrenalina[playerid] == 1)
			{
			    SendClientMessage(playerid, GRIS, "Ya estas drogado, espera a que pase el efecto");
			    return 1;
			}
		    Informacion[playerid][Adrenalina] -= 1;
		    EstaDrogadoConAdrenalina[playerid] = 1;
	        SendClientMessage(playerid, AMARILLO, "Has Utilizado 1 pastilla de adrenalina");
	        SetPlayerDrunkLevel(playerid, 1000000);
			TextDrawShowForPlayer(playerid, EAdrenalina);
			format(rango, sizeof(rango), "* %s saca una pastilla de adrenalina y se la toma", NombreEx(playerid));
	        RangoCercano(30, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
			SetTimerEx("TerminarEfectoDroga", 300000, false, "i", playerid);
			return 1;
		}
	}
	if(strcmp(cmd, "/compraradrenalina", true) == 0)
    {
		if(IsPlayerConnected(playerid))
		{
		    if(!PlayerToPoint(1, playerid, 756.5405,5.3007,1000.6991))
		    {
		        SendClientMessage(playerid, GRIS, "Necesitas estar en el gimnasion para utilziar este comando");
		        return 1;
		    }
			ShowPlayerDialog(playerid, CAdrenalina, DIALOG_STYLE_LIST, "- Tienda del Gimnasio","[$250] - Pack de 5 pastillas\n[$400] - Pack de 10 pastillas\n[$600] - Pack de 25 pastillas","Comprar","Cancelar");
			return 1;
		}
    }
	if (strcmp(cmd, "/dararma", true) == 0)
	{
		if (Informacion[playerid][Admin] >= 1337)
		{
			new tmp1[256], tmp2[256], tmp3[256], jugador, admin, string1[256], string2[256], nombrejugador[MAX_PLAYER_NAME], nombreadmin[MAX_PLAYER_NAME], arma, municion;
			tmp1 = strtok(cmdtext, idx);
			tmp2 = strtok(cmdtext, idx);
			tmp3 = strtok(cmdtext, idx);
			if (!strlen(tmp1) || !strlen(tmp2) || !strlen(tmp3)) return SendClientMessage(playerid, DORADO, "Utiliza: /dararma [ID] [Arma] [Municion].");
			jugador = strval(tmp1);
			admin = playerid;
			GetPlayerName(jugador, nombrejugador, sizeof(nombrejugador));
			GetPlayerName(admin, nombreadmin, sizeof(nombreadmin));
			arma = strval(tmp2);
			municion = strval(tmp3);
			if (IsPlayerConnected(jugador))
			{
				format(string1, sizeof(string1), "Le has dado a %s un arma. (ID: %d - Municion: %d)", nombrejugador, arma, municion);
				format(string2, sizeof(string2), "%s te ha dado un arma. (ID: %d - Municion: %d)", nombreadmin, arma, municion);
				SendClientMessage(admin, GRIS, string1);
				SendClientMessage(jugador, GRIS, string2);
				PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
				PlayerPlaySound(jugador, 1057, 0.0, 0.0, 0.0);
				GivePlayerWeapon(jugador, arma, municion);
			}
			else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra conectado.");
		}
		else return SendClientMessage(playerid, GRIS, "Necesitas ser administrador nivel 1337 como minimo");
		return 1;
	}
	if(strcmp(cmd, "/chora", true) == 0)
	{
		new nombreadmin[MAX_PLAYER_NAME];
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /chora [0 - 23]");
				return 1;
			}
			hour = strval(tmp);
			if(Informacion[playerid][Admin] >= 1337)
			{
	            SetWorldTime(hour);
				format(string, sizeof(string), "%s ha cambiado la hora a %d:00", nombreadmin, hour);
				MensajeAdmin(0xB39A79FF, string);
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Solo miembros del staff pueden Utilizar este comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/Utilizarcrack",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Crack] <= 0)
			{
			    SendClientMessage(playerid, GRIS," No tienes crack!");
			    return 1;
			}
			if(EstaDrogado[playerid] == 1)
			{
			    SendClientMessage(playerid, GRIS,"Ya estas drogado, espera a que pase el efecto");
			    return 1;
			}
			EstaDrogado[playerid] = 1;
			Informacion[playerid][Crack] -= 1;
			Informacion[playerid][IndiceCrack] += 2;
			format(rango, sizeof(rango),"Has fumado un gramo de crack", giveplayer);
			SendClientMessage(playerid,AZULCLARO, rango);
			format(rango, sizeof(rango), "* %s fuma un poco de crack", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetPlayerDrunkLevel(playerid, 10000);
			TextDrawShowForPlayer(playerid, DrogaRosa);
			SetTimerEx("TDrogaRosa", 30000, false, "edi", playerid);
			return 1;
		}
	}
	if(strcmp(cmd,"/dar",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
  			new x_job[256];
			x_job = strtok(cmdtext, idx);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO,"Utiliza /dar [Opcion] [Usuario]");
				SendClientMessage(playerid, BLANCO,"Crack - Adrenalina - Codificador - Cerveza - Ganzua - Arma");
				return 1;
			}
	        giveplayerid = ReturnUser(tmp);
			if(strcmp(x_job, "Arma", true) == 0)
			{
				if(GetPlayerWeapon(playerid) > 0)
				{
				    new armasch[13][2];
				    new armaact = GetPlayerWeapon(playerid);
				    for(new i=0;i<13;i++)
				    {
				        new arma, balas;
				        GetPlayerWeaponData(playerid, i, arma, balas);
				        if(arma != armaact && balas != 0)
				        {
				            GetPlayerWeaponData(playerid, i, armasch[i][0], armasch[i][1]);
				        }
				        else
				        {
				            GivePlayerWeapon(giveplayerid, arma, balas);
				        }
				    }
				    ResetPlayerWeapons(playerid);
				    for(new i=0;i<13;i++)
				    {
				        GivePlayerWeapon(playerid, armasch[i][0], armasch[i][1]);
				    }
				    format(rango, sizeof(rango), "* %s le da un arma a %s", NombreEx(playerid), NombreEx(giveplayerid));
					RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				}
			}
		   	else if(strcmp(x_job,"Crack",true) == 0)
	        {
	            if(IsPlayerConnected(playerid))
	            {
 				    if(giveplayerid == playerid)
				    {
				        SendClientMessage(playerid, GRIS,"No puedes darte elementos a ti mismo");
						return 1;
					}
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
	  					if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
        					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							if(Informacion[playerid][Crack] <= 0)
							{
							    SendClientMessage(playerid, GRIS," No tienes crack!");
							    return 1;
							}
							else
							{
							    Informacion[giveplayerid][Crack] += 5;
							    Informacion[playerid][Crack] -= 5;
								format(rango, sizeof(rango),"Le has dado 5 gr de crack a %s", giveplayer);
								SendClientMessage(playerid,AZULCLARO, rango);
								format(rango, sizeof(rango),"Has recibido 5 gr de crack de %s",NombreEx(playerid));
								SendClientMessage(giveplayerid,AZULCLARO, rango);
								format(rango, sizeof(rango), "* %s le dio un poco de crack a %s.", NombreEx(playerid), giveplayer);
								RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							}
						}
						else
						{
						    SendClientMessage(playerid, GRIS,"El jugador se encuentra lejos de ti");
						}
					}
					else
					{
					    SendClientMessage(playerid, GRIS," Jugador sin conexion");
					}
				}
			}
   			else if(strcmp(x_job,"Adrenalina",true) == 0)
	        {
	            if(IsPlayerConnected(playerid))
	            {
 				    if(giveplayerid == playerid)
				    {
				        SendClientMessage(playerid, GRIS,"No puedes darte elementos a ti mismo");
						return 1;
					}
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
	  					if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
        					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							if(Informacion[playerid][Adrenalina] <= 0)
							{
							    SendClientMessage(playerid, GRIS," No tienes Adrenalina!");
							    return 1;
							}
							else
							{
							    Informacion[giveplayerid][Adrenalina] += 1;
							    Informacion[playerid][Adrenalina] -= 1;
								format(rango, sizeof(rango),"Le has dado 1 gr de Adrenalina a %s", giveplayer);
								SendClientMessage(playerid,AZULCLARO, rango);
								format(rango, sizeof(rango),"Has recibido 5 gr de Adrenalina de %s",NombreEx(playerid));
								SendClientMessage(giveplayerid,AZULCLARO, rango);
								format(rango, sizeof(rango), "* %s le dio una pastilla de adrenalina %s.", NombreEx(playerid), giveplayer);
								RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							}
						}
						else
						{
						    SendClientMessage(playerid, GRIS,"El jugador se encuentra lejos de ti");
						}
					}
					else
					{
					    SendClientMessage(playerid, GRIS," Jugador sin conexion");
					}
				}
			}
   			else if(strcmp(x_job,"Codificador",true) == 0)
	        {
	            if(IsPlayerConnected(playerid))
	            {
 				    if(giveplayerid == playerid)
				    {
				        SendClientMessage(playerid, GRIS,"No puedes darte elementos a ti mismo");
						return 1;
					}
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
	  					if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
        					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							if(Informacion[playerid][Codificadores] <= 0)
							{
							    SendClientMessage(playerid, GRIS," No tienes Codificador!");
							    return 1;
							}
							else
							{
							    Informacion[giveplayerid][Codificadores] += 1;
							    Informacion[playerid][Codificadores] -= 1;
								format(rango, sizeof(rango),"Le has dado un Codificadores a %s", giveplayer);
								SendClientMessage(playerid,AZULCLARO, rango);
								format(rango, sizeof(rango),"Has recibido un Codificadores de %s",NombreEx(playerid));
								SendClientMessage(giveplayerid,AZULCLARO, rango);
								format(rango, sizeof(rango), "* %s le dio un codificador %s.", NombreEx(playerid), giveplayer);
								RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							}
						}
						else
						{
						    SendClientMessage(playerid, GRIS,"El jugador se encuentra lejos de ti");
						}
					}
					else
					{
					    SendClientMessage(playerid, GRIS," Jugador sin conexion");
					}
				}
			}
			else if(strcmp(x_job,"Cerveza",true) == 0)
	        {
	            if(IsPlayerConnected(playerid))
	            {
 				    if(giveplayerid == playerid)
				    {
				        SendClientMessage(playerid, GRIS,"No puedes darte elementos a ti mismo");
						return 1;
					}
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
	  					if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
        					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							if(Informacion[playerid][Cervezas] <= 0)
							{
							    SendClientMessage(playerid, GRIS," No tienes Cervezas!");
							    return 1;
							}
							else
							{
							    Informacion[giveplayerid][Cervezas] += 1;
							    Informacion[playerid][Cervezas] -= 1;
								format(rango, sizeof(rango),"Le has dado una cerveza a %s", giveplayer);
								SendClientMessage(playerid,AZULCLARO, rango);
								format(rango, sizeof(rango),"Has recibido una cerveza de %s",NombreEx(playerid));
								SendClientMessage(giveplayerid,AZULCLARO, rango);
								format(rango, sizeof(rango), "* %s le dio una cerveza %s.", NombreEx(playerid), giveplayer);
								RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							}
						}
						else
						{
						    SendClientMessage(playerid, GRIS,"El jugador se encuentra lejos de ti");
						}
					}
					else
					{
					    SendClientMessage(playerid, GRIS," Jugador sin conexion");
					}
				}
			}
			else if(strcmp(x_job,"Ganzua",true) == 0)
	        {
	            if(IsPlayerConnected(playerid))
	            {
 				    if(giveplayerid == playerid)
				    {
				        SendClientMessage(playerid, GRIS,"No puedes darte elementos a ti mismo");
						return 1;
					}
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
	  					if(RangoCercanoS(8.0, playerid, giveplayerid))
						{
        					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							if(Informacion[playerid][Ganzuas] <= 0)
							{
							    SendClientMessage(playerid, GRIS," No tienes Ganzua!");
							    return 1;
							}
							else
							{
							    Informacion[giveplayerid][Ganzuas] += 1;
							    Informacion[playerid][Ganzuas] -= 1;
								format(rango, sizeof(rango),"Le has dado una ganzua a %s", giveplayer);
								SendClientMessage(playerid,AZULCLARO, rango);
								format(rango, sizeof(rango),"Has recibido una ganzua de %s",NombreEx(playerid));
								SendClientMessage(giveplayerid,AZULCLARO, rango);
								format(rango, sizeof(rango), "* %s le dio una ganzua %s.", NombreEx(playerid), giveplayer);
								RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							}
						}
						else
						{
						    SendClientMessage(playerid, GRIS,"El jugador se encuentra lejos de ti");
						}
					}
					else
					{
					    SendClientMessage(playerid, GRIS," Jugador sin conexion");
					}
				}
			}
			return 1;
		}
	}
	if(strcmp(cmd, "/fabricar", true) == 0)
	{
		if(Informacion[playerid][Faccion] != TRAF)
		{
		    SendClientMessage(playerid, GRIS, "Solo traficantes de drogas pueden Utilizar este comando");
			return 1;
		}
		if(PlayerToPoint(1, playerid, 2529.0439,-1285.0314,1048.2891))
	    {
			if(ProcesoFabricacion[playerid] == 255)
			{
			    SendClientMessage(playerid, GRIS, "Tienes que esperar 2 minutos para volver a fabricar drogas");
				return 1;
			}
			InicioYFinialCrack[playerid] = 1;
			ProcesoFabricacion[playerid] = 1;
			DestroyPickup(Pickup1);
			Pickup2 = CreatePickup(1239, 23, 2547.3103,-1291.4229,1044.1250, 0);
			SetPlayerSkin(playerid, 144);
			SendClientMessage(playerid, AZULCLARO, "* Has empezado a fabricar drogas, Procesadora de quimicos (Siguiente Pickup)");
			format(rango, sizeof(rango), "* %s toma elementos quimicos de preparacion y se coloca su traje de seguridad", NombreEx(playerid));
			RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
		else
		{
		    SendClientMessage(playerid, GRIS, "Necesitas estar en la fabrica de drogas");
			return 1;
		}
	}
	if(strcmp(cmd, "/procesar", true) == 0)
	{
		if(Informacion[playerid][Faccion] != TRAF)
		{
		    SendClientMessage(playerid, GRIS, "Solo traficantes de drogas pueden Utilizar este comando");
			return 1;
		}
	    if(PlayerToPoint(1, playerid, 2547.3103,-1291.4229,1044.1250))
	    {
			if(ProcesoFabricacion[playerid] != 1)
			{
			    SendClientMessage(playerid, GRIS, "Necesitas hacer el otro paso antes que este");
				return 1;
			}
			DestroyPickup(Pickup2);
			Pickup3 = CreatePickup(1239, 23, 2537.3657,-1304.3899,1044.1250, 0);
			SendClientMessage(playerid, AZULCLARO, "* Has empezado a procesar los elementos quimicos, este proceso durara 15 segundos");
			TogglePlayerControllable(playerid, 0);
			format(rango, sizeof(rango), "* %s coloca los elementos en la procesadora y la enciende", NombreEx(playerid));
			RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetTimerEx("Proceso1", 15000, false, "i", playerid);
		}
		else
		{
		    SendClientMessage(playerid, GRIS, "Necesitas estar en la fabrica de drogas");
			return 1;
		}
	}
	if(strcmp(cmd, "/calentar", true) == 0)
	{
		if(Informacion[playerid][Faccion] != TRAF)
		{
		    SendClientMessage(playerid, GRIS, "Solo traficantes de drogas pueden Utilizar este comando");
			return 1;
		}
	    if(PlayerToPoint(1, playerid, 2537.3657,-1304.3899,1044.1250))
	    {
			if(ProcesoFabricacion[playerid] != 2)
			{
			    SendClientMessage(playerid, GRIS, "Necesitas hacer el otro paso antes que este");
				return 1;
			}
			DestroyPickup(Pickup3);
			Pickup4 = CreatePickup(1239, 23, 2532.5337,-1304.4724,1044.1250, 0);
			SendClientMessage(playerid, AZULCLARO, "* Has empezado a calentar la materia amarillenta, este proceso durara 30 segundos");
			TogglePlayerControllable(playerid, 0);
			format(rango, sizeof(rango), "* %s coloca la materia amarillenta dentro del horno industrial", NombreEx(playerid));
			RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetTimerEx("Proceso2", 30000, false, "i", playerid);
		}
		else
		{
		    SendClientMessage(playerid, GRIS, "Necesitas estar en la fabrica de drogas");
			return 1;
		}
	}
	if(strcmp(cmd, "/enfriar", true) == 0)
	{
		if(Informacion[playerid][Faccion] != TRAF)
		{
		    SendClientMessage(playerid, GRIS, "Solo traficantes de drogas pueden Utilizar este comando");
			return 1;
		}
		if(PlayerToPoint(1, playerid, 2532.5337,-1304.4724,1044.1250))
	    {
			if(ProcesoFabricacion[playerid] != 3)
			{
			    SendClientMessage(playerid, GRIS, "Necesitas hacer el otro paso antes que este");
				return 1;
			}
			DestroyPickup(Pickup4);
			Pickup5 = CreatePickup(1239, 23, 2527.8694,-1290.8790,1048.2891, 0);
			SendClientMessage(playerid, AZULCLARO, "* Has empezado a enfriar el bloque de crack, este proceso durara 15 segundos");
			TogglePlayerControllable(playerid, 0);
			format(rango, sizeof(rango), "* %s coloca el bloque de crack caliente en el freezer industrial", NombreEx(playerid));
			RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetTimerEx("Proceso3", 15000, false, "i", playerid);
		}
		else
		{
		    SendClientMessage(playerid, GRIS, "Necesitas estar en la fabrica de drogas");
			return 1;
		}
	}
	if(strcmp(cmd, "/purificar", true) == 0)
	{
		if(Informacion[playerid][Faccion] != TRAF)
		{
		    SendClientMessage(playerid, GRIS, "Solo traficantes de drogas pueden Utilizar este comando");
			return 1;
		}
	    if(PlayerToPoint(1, playerid, 2527.8694,-1290.8790,1048.2891))
	    {
			if(ProcesoFabricacion[playerid] != 4)
			{
			    SendClientMessage(playerid, GRIS, "Necesitas hacer el otro paso antes que este");
				return 1;
			}
			DestroyPickup(Pickup5);
			Pickup6 = CreatePickup(1239, 23, 2523.4963,-1301.6503,1048.2891, 0);
  			SendClientMessage(playerid, AZULCLARO, "* Has empezado a purificar el bloque de crack congelado, este proceso durara 10 segundos");
			TogglePlayerControllable(playerid, 0);
			format(rango, sizeof(rango), "* %s coloca el bloque de crack congelado en la purificadora de la PC", NombreEx(playerid));
			RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetTimerEx("Proceso4", 10000, false, "i", playerid);
		}
		else
		{
		    SendClientMessage(playerid, GRIS, "Necesitas estar en la fabrica de drogas");
			return 1;
		}
	}
	if(strcmp(cmd, "/depositarcrack", true) == 0)
	{
		if(Informacion[playerid][Faccion] != TRAF)
		{
		    SendClientMessage(playerid, GRIS, "Solo traficantes de drogas pueden Utilizar este comando");
			return 1;
		}
	    if(PlayerToPoint(1, playerid, 2523.4963,-1301.6503,1048.2891))
	    {
			if(ProcesoFabricacion[playerid] != 5)
			{
			    SendClientMessage(playerid, GRIS, "Necesitas hacer el otro paso antes que este");
				return 1;
			}
			DestroyPickup(Pickup6);
			Pickup7 = CreatePickup(1239, 23, 2611.9126,-1402.5598,34.9336, 0);
		    ProcesoFabricacion[playerid] = 6;
			InicioYFinialCrack[playerid] = 0;
		    SetPlayerSkin(playerid, Informacion[playerid][Skin]);
			SendClientMessage(playerid, AZULCLARO, "* Ya casi falta, has enviado todo al deposito, recoje la droga en la entrada de la fabrica");
			format(rango, sizeof(rango), "* %s coloca el crack de maxima pureza en el deposito", NombreEx(playerid));
			RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
		else
		{
		    SendClientMessage(playerid, GRIS, "Necesitas estar en la fabrica de drogas");
			return 1;
		}
	}
	if(strcmp(cmd, "/retirarcrack", true) == 0)
	{
		if(Informacion[playerid][Faccion] != TRAF)
		{
		    SendClientMessage(playerid, GRIS, "Solo traficantes de drogas pueden Utilizar este comando");
			return 1;
		}
	    if(PlayerToPoint(1, playerid, 2611.9126,-1402.5598,34.9336))
	    {
			if(ProcesoFabricacion[playerid] != 6)
			{
			    SendClientMessage(playerid, GRIS, "Necesitas hacer el otro paso antes que este");
				return 1;
			}
			ProcesoFabricacion[playerid] = 255;
	        SetPlayerSkin(playerid, Informacion[playerid][Skin]);
  			DestroyPickup(Pickup7);
			Informacion[playerid][Crack] += 10;
			SendClientMessage(playerid, AZULCLARO, "* Satisfactorio, has recogido 10 gr de crack en su maxima pureza, ya puedes Utilizarla o venderla");
			format(rango, sizeof(rango), "* %s retira una caja, la abre y saca su crack", NombreEx(playerid));
			RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetTimerEx("TiempoFabricado", 120000, false, "i", playerid);
		}
		else
		{
		    SendClientMessage(playerid, GRIS, "Necesitas estar en la entrada de la fabrica de drogas");
			return 1;
		}
	}
	if(strcmp(cmd, "/dpuntorol", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Admin] >= 1)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /dpuntorol [Usuario]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(rango, sizeof(rango), "* Has dado 1 punto de rol al usuario %s",giveplayer);
				        SendClientMessage(playerid, AZULCLARO, rango);
				        format(rango, sizeof(rango), "* El administrador %s te dio 1 punto de rol al usuario",NombreEx(playerid));
				        SendClientMessage(giveplayerid, AZULCLARO, rango);
				        Informacion[giveplayerid][PuntosRol] += 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solo administradores generales u programadores pueden Utilizar este comando");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/advertir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Admin] >= 1)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /advertir [Usuario]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(rango, sizeof(rango), "* Has advertido al al usuario %s",giveplayer);
				        SendClientMessage(playerid, AZULCLARO, rango);
				        format(rango, sizeof(rango), "* El miembro del staff %s ha advertido [%d/3]",NombreEx(playerid), Informacion[playerid][Advertencias]);
				        SendClientMessage(giveplayerid, AZULCLARO, rango);
				        Informacion[giveplayerid][Advertencias] += 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solamente miembros del staff pueden Utilizar este comando");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/sansionar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Admin] >= 1337)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /sansionar [Admin]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(rango, sizeof(rango), "* Has sansionado al miembro del staff %s",giveplayer);
				        SendClientMessage(playerid, AZULCLARO, rango);
				        format(rango, sizeof(rango), "* El Administrador General %s te ha sansionado",NombreEx(playerid));
				        SendClientMessage(giveplayerid, AZULCLARO, rango);
				        Informacion[giveplayerid][Sansiones] += 1;
					    format(rango, sizeof(rango), "* El administrador %s ha advertido al miembro del staff %s", NombreEx(playerid), giveplayer);
						MensajeAdmin(0xB39A79FF, rango);
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solo administradores generales u programadores pueden Utilizar este comando");
	            return 1;
	        }
	    }
	    return 1;
	}
	if (strcmp(cmd, "/clima", true) == 0)
	{
		if(Informacion[playerid][Admin] >= 1337)
		{
			new admin, nombreadmin[MAX_PLAYER_NAME], clima;
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /clima [ID].");
			admin = playerid;
			GetPlayerName(admin, nombreadmin, sizeof(nombreadmin));
			clima = strval(tmp);
			format(rango, sizeof(rango), "%s ha cambiado el clima. (ID: %d.)", nombreadmin, clima);
			MensajeAdmin(0xB39A79FF, rango);
			PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
			for(new i=0; i < MAX_PLAYERS; i++)
			{
				SetPlayerWeather(i, clima);
			}
		}
		else return SendClientMessage(playerid, GRIS, "Solo miembros del staff pueden utilizar este comando");
		return 1;
	}
	if(strcmp(cmd, "/aestado", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Admin] == 0)
			{
			    SendClientMessage(playerid, GRIS, "Solo miembros del staff pueden Utilizar este comando");
			    return 1;
			}
			// -= Texto 1 =-
	        new ANivel = Informacion[playerid][Admin];
	        new ATime = Informacion[playerid][ATiempo];
			new ADuty = Informacion[playerid][Servicios];
			new ARes = Informacion[playerid][Respawns];
			new ASan = Informacion[playerid][Sansiones];
			// -= Texto 2 =-
			new AKick = Informacion[playerid][Kickeos];
			new ABan = Informacion[playerid][Baneos];
			new ACon = Informacion[playerid][Congelos];
			new ADes = Informacion[playerid][Descongelos];
			new ASki = Informacion[playerid][SkinsCambiados];
			new rango2[256], rango3[256];
			format(rango,sizeof(rango),"~g~Usuario: ~w~%s", NombreEx(playerid));
			format(rango2,sizeof(rango2),"~g~Rango: ~w~%d ~n~~g~Tiempo: ~w~%d hs ~n~~g~Servicios: ~w~%d ~n~~g~Respawns: ~w~%d ~n~~g~Sansiones: ~w~%d", ANivel, ATime, ADuty, ARes, ASan);
			format(rango3,sizeof(rango3),"~g~Kickeos: ~w~%d ~n~~g~Baneos: ~w~%d~n~~g~Congelos: ~w~%d~n~~g~Descongelos: ~w~%d~n~~g~Skins Cambiados: ~w~%d",AKick, ABan, ACon, ADes, ASki);
			TextDrawSetString(E_NOMBRE[playerid],rango);
			TextDrawSetString(E_TEXTO1[playerid],rango2);
			TextDrawSetString(E_TEXTO2[playerid],rango3);
			TextDrawShowForPlayer(playerid,E_NOMBRE[playerid]);
			TextDrawShowForPlayer(playerid,E_TEXTO1[playerid]);
			TextDrawShowForPlayer(playerid,E_TEXTO2[playerid]);
			TextDrawShowForPlayer(playerid, E_FONDO);
			SetTimerEx("QuitarEstado", 10000, false, "dewwq", playerid);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/descongelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Admin] >= 1)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /descongelar [Usuario]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(rango, sizeof(rango), "*Has descongelado al usuario %s",giveplayer);
				        SendClientMessage(playerid, AZULCLARO, rango);
				        format(rango, sizeof(rango), "* El miembro del staff %s te ha descongelado",NombreEx(playerid));
				        SendClientMessage(giveplayerid, AZULCLARO, rango);
				        TogglePlayerControllable(giveplayerid, 1);
						Informacion[playerid][Descongelos] += 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solo miembros del staff puedne Utilizar este comando");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/congelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Admin] >= 1)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /congelar [Usuario]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(rango, sizeof(rango), "*Has congelado al usuario %s",giveplayer);
				        SendClientMessage(playerid, AZULCLARO, rango);
				        format(rango, sizeof(rango), "* El miembro del staff %s te ha congelado",NombreEx(playerid));
				        SendClientMessage(giveplayerid, AZULCLARO, rango);
						Informacion[playerid][Congelos] += 1;
				        TogglePlayerControllable(giveplayerid, 0);
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Solo miembros del staff puedne Utilizar este comando");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/cuenta", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new sTexto[64];
			new fTexto[64];
			new oTexto[64];
			new tTexto[64];

			// -= Sexo =-
			if(Informacion[playerid][Sexo] == 1) { sTexto = "Masculino"; }
			else if(Informacion[playerid][Sexo] == 2) { sTexto = "Femenino"; }

			// -= Origen =-
			if(Informacion[playerid][Origen] == 1) { oTexto = "America Latina"; }
			else if(Informacion[playerid][Origen] == 2) { oTexto = "Ameria Anglosajona"; }
			else if(Informacion[playerid][Origen] == 3) { oTexto = "Europa"; }
			else if(Informacion[playerid][Origen] == 4) { oTexto = "Oriente"; }

			// -= Faccion =-
			if(Informacion[playerid][Faccion] == 9) { fTexto = "Ninguna"; }
			else if(Informacion[playerid][Faccion] == 1) { fTexto = "LSPD"; }
			else if(Informacion[playerid][Faccion] == 2) { fTexto = "LSMD"; }
			else if(Informacion[playerid][Faccion] == 3) { fTexto = "Taxistas"; }
			else if(Informacion[playerid][Faccion] == 4) { fTexto = "Gobierno"; }
			else if(Informacion[playerid][Faccion] == 5) { fTexto = "CNN San Andreas"; }
			else if(Informacion[playerid][Faccion] == 6) { fTexto = "Gobierno"; }
			else if(Informacion[playerid][Faccion] == 7) { fTexto = "Mecanicos"; }
			else if(Informacion[playerid][Faccion] == 8) { fTexto = "FBI"; }
			else if(Informacion[playerid][Faccion] == 9) { fTexto = "Licencieros"; }
			else if(Informacion[playerid][Faccion] == 10) { fTexto = "Yakuza"; }
			else if(Informacion[playerid][Faccion] == 11) { fTexto = "Traficantes"; }
			else if(Informacion[playerid][Faccion] == 12) { fTexto = "D.B.P"; }
			else if(Informacion[playerid][Faccion] == 13) { fTexto = "Bomberos"; }

			// -= Trabajos =-
			if(Informacion[playerid][Trabajo] == 0) { tTexto = "Ninguno"; }
			else if(Informacion[playerid][Trabajo] == 1) { tTexto = "Prostituta"; }
			else if(Informacion[playerid][Trabajo] == 2) { tTexto = "Basureros"; }


			// -= Enumeradores Numericos =-
			new tEdad = Informacion[playerid][Edad];
			new tRango = Informacion[playerid][Rango];
			new tSkin = Informacion[playerid][Skin];
			new tRolePuntos = Informacion[playerid][PuntosRol];
			new tStars = Informacion[playerid][Estrellas];
			new tBank = Informacion[playerid][Banco];
			new tExp = Informacion[playerid][Experiencia];
			new tTlf = Informacion[playerid][Telefono];
			new tCI = Informacion[playerid][CI];
			new tCode = Informacion[playerid][Codificadores];
			new tCrack = Informacion[playerid][Crack];
			new tBlood = Informacion[playerid][Sangre];
			new tCancer = Informacion[playerid][Cancer];
			new tSaldo = Informacion[playerid][Saldo];
			new tHunger = Informacion[playerid][Hambre];
			new tZZZ = Informacion[playerid][Cansancio];
			new tClean = Informacion[playerid][Higiene];
			new tBrain = Informacion[playerid][Inteligencia];
			new tBody = Informacion[playerid][EstadoFisico];
			new tSexApp = Informacion[playerid][Apariencia];
			new tDiv = Informacion[playerid][Diversion];
			new tMaths = Informacion[playerid][Materiales];
			new tCandy = Informacion[playerid][Caramelos];
			new tCondon = Informacion[playerid][Preservativos];
			new tCiga = Informacion[playerid][Cigarrillos];
			new AdmLvl = Informacion[playerid][Admin];
			new PrmLvl = Informacion[playerid][Premium];
			new Lvl = Informacion[playerid][Nivel];
			new Sans = Informacion[playerid][Sansiones];

			new rango1[256],rango2[256],rango3[256],rango4[256],rango5[256],rango6[256],rango7[256],rango8[256];
			// -= Datos a Enumerar =-
			format(rango1, sizeof(rango1), "Nombre: %s | Sexo: %s | Edad: %d | Origen: %s | Faccion: %s",NombreEx(playerid), sTexto, tEdad, oTexto, fTexto);
			format(rango2, sizeof(rango2), "Rango: %d | Trabajo: %s | Skin: %d | RolPuntos: %d | Estrellas: %d",tRango,tTexto, tSkin, tRolePuntos, tStars);
			format(rango3, sizeof(rango3), "Banco:  $%d | Experiencia: %d/10 | Telefono: %d | CI: %d",tBank, tExp, tTlf, tCI);
			format(rango4, sizeof(rango4), "Codificadores: %d | Crack: %d | Sangre: %d | Cancer: %d | Saldo: %d",tCode, tCrack, tBlood, tCancer, tSaldo);
			format(rango5, sizeof(rango5), "Hambre: %d | Cansancio: %d | Higiene: %d | Inteligencia: %d | Estado Fisico: %d",tHunger, tZZZ, tClean, tBrain, tBody);
			format(rango6, sizeof(rango6), "Apariencia: %d | Diversion: %d | Materiales: %d | Caramelos: %d", tSexApp, tDiv, tMaths, tCandy);
			format(rango7, sizeof(rango7), "Preservativos: %d | Cigarrillos: %d | ID Coche: %d | ID Negocio: %d | ID Casa: %d",tCondon, tCiga, Informacion[playerid][Coche], Informacion[playerid][Negocio], Informacion[playerid][Casa]);
			format(rango8, sizeof(rango8), "Nivel Admin: %d | Nivel Premium: %d | Nivel General: %d | Sansiones: %d",AdmLvl, PrmLvl, Lvl, Sans);
			SendClientMessage(playerid, BLANCO, rango1);
			SendClientMessage(playerid, BLANCO, rango2);
			SendClientMessage(playerid, BLANCO, rango3);
			SendClientMessage(playerid, BLANCO, rango4);
			SendClientMessage(playerid, BLANCO, rango5);
			SendClientMessage(playerid, BLANCO, rango6);
			SendClientMessage(playerid, BLANCO, rango7);
			SendClientMessage(playerid, BLANCO, rango8);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/jugar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!PosCasinos(playerid))
			{
		        SendClientMessage(playerid, GRIS, "Debes estar en alguna maquina del casino");
	            return 1;
	        }
	        if(GetPlayerMoney(playerid) < 100)
	        {
	            SendClientMessage(playerid, GRIS, "No tienes $100 para jugar");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, DORADO,"Utiliza: /jugar [Numero]");
				return 1;
			}
			new lottonr = strval(tmp);
			if(lottonr < 1 || lottonr > 100) { SendClientMessage(playerid, GRIS, "El valor minimo es 1, y el maximo 100"); return 1; }
			format(rango, sizeof(rango), "* Espera 5 segundos mientras la maquina esta funcionando, el numero es %d.", lottonr);
			SendClientMessage(playerid, VERDE, rango);
			GivePlayerMoney(playerid, -100);
			NumeroAzar[playerid] = lottonr;
			SetTimerEx("ProcesoCasino", 5000, false, "i", playerid);
		}
	    return 1;
	}
	if(strcmp(cmd, "/pararmusica", true) == 0)
	{
	    if(Reproduciendo[playerid] == 0)
	    {
			SendClientMessage(playerid, GRIS, "No estas reproduciendo musica");
			return 1;
		}
		Audio_Stop(playerid, 1);
		Audio_Stop(playerid, 2);
		Audio_Stop(playerid, 3);
		Audio_Stop(playerid, 4);
		Audio_Stop(playerid, 5);
		Audio_Stop(playerid, 6);
		Reproduciendo[playerid] = 0;
		SendClientMessage(playerid, AZULCLARO, "Musica detenida, ya puedes escuchar otra cancion");
		return 1;
	}
	if(strcmp(cmd, "/reproductor", true) == 0)
	{
		if(Informacion[playerid][MP3] == 0)
		{
		    SendClientMessage(playerid, GRIS, "No tienes reproductor de musica");
		    return 1;
		}
		ShowPlayerDialog(playerid, Musica, DIALOG_STYLE_LIST, "- PlayList","1| Shampagne Showers - LMFAO\n2| Sexy Bitch - David Guetta\n3| Where dem Girls At - David Guetta ft Flo Rida\n4| In The End - Linking Park\n5| Yeah - Usher\n6| You spin my head - Flo Rida\n","Escuchar", "Cancelar");
	    return 1;
	}
	if(strcmp(cmd, "/Ita", true) == 0 || strcmp(cmd, "/italiano", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Italiano] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Italiano [Texto]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerToPoint(20, i, x, y, z))
					    {
							if(Informacion[i][Italiano] == 1)
							{
					    		format(rango, sizeof(rango), "[Italiano] %s dice: %s", NombreEx(playerid), result);
					    		SendClientMessage(i, BLANCO, rango);
							}
							else
							{
					    		format(rango, sizeof(rango), "%s dice: [Lenguaje Desconocido]", NombreEx(playerid));
					    		SendClientMessage(i, BLANCO, rango);
							}
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no sabes Italiano");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ing", true) == 0 || strcmp(cmd, "/ingles", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Ingles] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Ingles [Texto]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerToPoint(20, i, x, y, z))
					    {
							if(Informacion[i][Ingles] == 1)
							{
					    		format(rango, sizeof(rango), "[INGLES] %s dice: %s", NombreEx(playerid), result);
					    		SendClientMessage(i, BLANCO, rango);
							}
							else
							{
					    		format(rango, sizeof(rango), "%s dice: [Lenguaje Desconocido]", NombreEx(playerid));
					    		SendClientMessage(i, BLANCO, rango);
							}
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no sabes ingles");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Rus", true) == 0 || strcmp(cmd, "/Ruso", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Ruso] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Ruso [Texto]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerToPoint(20, i, x, y, z))
					    {
							if(Informacion[i][Ruso] == 1)
							{
					    		format(rango, sizeof(rango), "[Ruso] %s dice: %s", NombreEx(playerid), result);
					    		SendClientMessage(i, BLANCO, rango);
							}
							else
							{
					    		format(rango, sizeof(rango), "%s dice: [Lenguaje Desconocido]", NombreEx(playerid));
					    		SendClientMessage(i, BLANCO, rango);
							}
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no sabes Ruso");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Chi", true) == 0 || strcmp(cmd, "/Chino", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Chino] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Chino [Texto]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerToPoint(20, i, x, y, z))
					    {
							if(Informacion[i][Chino] == 1)
							{
					    		format(rango, sizeof(rango), "[Chino] %s dice: %s", NombreEx(playerid), result);
					    		SendClientMessage(i, BLANCO, rango);
							}
							else
							{
					    		format(rango, sizeof(rango), "%s dice: [Lenguaje Desconocido]", NombreEx(playerid));
					    		SendClientMessage(i, BLANCO, rango);
							}
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no sabes Chino");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Jap", true) == 0 || strcmp(cmd, "/Japones", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Japones] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Chino [Texto]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerToPoint(20, i, x, y, z))
					    {
							if(Informacion[i][Japones] == 1)
							{
					    		format(rango, sizeof(rango), "[Japones] %s dice: %s", NombreEx(playerid), result);
					    		SendClientMessage(i, BLANCO, rango);
							}
							else
							{
					    		format(rango, sizeof(rango), "%s dice: [Lenguaje Desconocido]", NombreEx(playerid));
					    		SendClientMessage(i, BLANCO, rango);
							}
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no sabes Japones");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Sui", true) == 0 || strcmp(cmd, "/Suizo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Suizo] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Suizo [Texto]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerToPoint(20, i, x, y, z))
					    {
							if(Informacion[i][Suizo] == 1)
							{
					    		format(rango, sizeof(rango), "[Suizo] %s dice: %s", NombreEx(playerid), result);
					    		SendClientMessage(i, BLANCO, rango);
							}
							else
							{
					    		format(rango, sizeof(rango), "%s dice: [Lenguaje Desconocido]", NombreEx(playerid));
					    		SendClientMessage(i, BLANCO, rango);
							}
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no sabes Suizo");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Fra", true) == 0 || strcmp(cmd, "/Frances", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Frances] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Frances [Texto]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerToPoint(20, i, x, y, z))
					    {
							if(Informacion[i][Frances] == 1)
							{
					    		format(rango, sizeof(rango), "[Frances] %s dice: %s", NombreEx(playerid), result);
					    		SendClientMessage(i, BLANCO, rango);
							}
							else
							{
					    		format(rango, sizeof(rango), "%s dice: [Lenguaje Desconocido]", NombreEx(playerid));
					    		SendClientMessage(i, BLANCO, rango);
							}
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no sabes Frances");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Pol", true) == 0 || strcmp(cmd, "/Polaco", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Polaco] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Polaco [Texto]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerToPoint(20, i, x, y, z))
					    {
							if(Informacion[i][Polaco] == 1)
							{
					    		format(rango, sizeof(rango), "[Polaco] %s dice: %s", NombreEx(playerid), result);
					    		SendClientMessage(i, BLANCO, rango);
							}
							else
							{
					    		format(rango, sizeof(rango), "%s dice: [Lenguaje Desconocido]", NombreEx(playerid));
					    		SendClientMessage(i, BLANCO, rango);
							}
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no sabes Polaco");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Lat", true) == 0 || strcmp(cmd, "/Latin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Latin] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /Latin [Texto]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerToPoint(20, i, x, y, z))
					    {
							if(Informacion[i][Latin] == 1)
							{
					    		format(rango, sizeof(rango), "[Latin] %s dice: %s", NombreEx(playerid), result);
					    		SendClientMessage(i, BLANCO, rango);
							}
							else
							{
					    		format(rango, sizeof(rango), "%s dice: [Lenguaje Desconocido]", NombreEx(playerid));
					    		SendClientMessage(i, BLANCO, rango);
							}
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no sabes Latin");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ense�ar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == LICE)
	        {
	            new x_opcion[128];
				x_opcion = strtok(cmdtext, idx);
				if(!strlen(x_opcion)) {
				    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
				    SendClientMessage(playerid, BLANCO, "Ingles, Italiano, Ruso, Chino, Japones, Suizo, Frances, Polaco, Latin");
					return 1;
				}
			    if(strcmp(x_opcion,"Ingles",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una leccion de Ingles",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has aprendido un idioma gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][Ingles] = 1;
					        Informacion[giveplayerid][Inteligencia] += 3;
							format(rango, sizeof(rango), "* %s le da una leccion de idiomas a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Italiano",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una leccion de italiano",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has aprendido un idioma gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][Italiano] = 1;
					        Informacion[giveplayerid][Inteligencia] += 3;
							format(rango, sizeof(rango), "* %s le da una leccion de idiomas a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Ruso",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una leccion de Ruso",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has aprendido un idioma gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][Ruso] = 1;
					        Informacion[giveplayerid][Inteligencia] += 3;
							format(rango, sizeof(rango), "* %s le da una leccion de idiomas a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Chino",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una leccion de Chino",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has aprendido un idioma gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][Chino] = 1;
					        Informacion[giveplayerid][Inteligencia] += 3;
							format(rango, sizeof(rango), "* %s le da una leccion de idiomas a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Japones",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una leccion de Japones",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has aprendido un idioma gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][Japones] = 1;
					        Informacion[giveplayerid][Inteligencia] += 3;
							format(rango, sizeof(rango), "* %s le da una leccion de idiomas a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Suizo",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una leccion de Suizo",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has aprendido un idioma gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][Suizo] = 1;
					        Informacion[giveplayerid][Inteligencia] += 3;
							format(rango, sizeof(rango), "* %s le da una leccion de idiomas a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Frances",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una leccion de Frances",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has aprendido un idioma gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][Frances] = 1;
					        Informacion[giveplayerid][Inteligencia] += 3;
							format(rango, sizeof(rango), "* %s le da una leccion de idiomas a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Polaco",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una leccion de Polaco",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has aprendido un idioma gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][Polaco] = 1;
					        Informacion[giveplayerid][Inteligencia] += 3;
							format(rango, sizeof(rango), "* %s le da una leccion de idiomas a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Latin",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /ense�ar [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una leccion de Latin",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has aprendido un idioma gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][Latin] = 1;
       						format(rango, sizeof(rango), "* %s le da una leccion de idiomas a %d", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
 	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "No eres un instructor");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/estudiar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            new x_opcion[128];
			x_opcion = strtok(cmdtext, idx);
			if(!strlen(x_opcion)) {
			    SendClientMessage(playerid, DORADO, "Utiliza: /estudiar [Idioma]");
			    SendClientMessage(playerid, BLANCO, "Ingles, Italiano, Ruso, Chino, Japones, Suizo, Frances, Polaco, Latin");
				return 1;
			}
		    if(strcmp(x_opcion,"Ingles",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 1;
				format(rango, sizeof(rango), "* Has saco el libro de ingles, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de ingles de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
		    if(strcmp(x_opcion,"Italiano",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 2;
				format(rango, sizeof(rango), "* Has saco el libro de Italiano, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de Italiano de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
		    if(strcmp(x_opcion,"Ruso",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 3;
				format(rango, sizeof(rango), "* Has saco el libro de Ruso, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de Ruso de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
		    if(strcmp(x_opcion,"Ruso",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 3;
				format(rango, sizeof(rango), "* Has saco el libro de Ruso, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de Ruso de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
		    if(strcmp(x_opcion,"Ruso",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 4;
				format(rango, sizeof(rango), "* Has saco el libro de Chino, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de Chino de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
		    if(strcmp(x_opcion,"Japones",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 5;
				format(rango, sizeof(rango), "* Has saco el libro de Japones, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de Japones de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
		    if(strcmp(x_opcion,"Suizo",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 6;
				format(rango, sizeof(rango), "* Has saco el libro de Suizo, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de Suizo de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
		    if(strcmp(x_opcion,"Frances",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 7;
				format(rango, sizeof(rango), "* Has saco el libro de Frances, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de Frances de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
		    if(strcmp(x_opcion,"Polaco",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 8;
				format(rango, sizeof(rango), "* Has saco el libro de Polaco, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de Polaco de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
		    if(strcmp(x_opcion,"Latin",true) == 0)
			{
				if(IdiomaEstudiado[playerid] >= 1)
				{
					SendClientMessage(playerid, GRIS, "Ya estas estudiando un idioma!");
					return 1;
				}
				IdiomaEstudiado[playerid] = 9;
				format(rango, sizeof(rango), "* Has saco el libro de Latin, empezaras a subir inteligencia cada 2 minutos");
				SendClientMessage(playerid, AZULCLARO, rango);
				format(rango, sizeof(rango), "* %s saca su librito de Latin de su bolso y lo estudia", NombreEx(playerid));
				RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("Estudiando",120000, false, "d", playerid);
				return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/darlibro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == LICE)
	        {
	            new x_opcion[128];
				x_opcion = strtok(cmdtext, idx);
				if(!strlen(x_opcion)) {
				    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Idioma] [Usuario]");
				    SendClientMessage(playerid, BLANCO, "Ingles, Italiano, Ruso, Chino, Japones, Suizo, Frances, Polaco, Latin");
					return 1;
				}
			    if(strcmp(x_opcion,"Ingles",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s un libro de Ingles",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido un libro de %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							Informacion[giveplayerid][IngLibro] = 1;
							format(rango, sizeof(rango), "* %s le da un libro de ingles a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Italiano",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s un libro de Italiano",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido un libro de %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							Informacion[giveplayerid][ItaLibro] = 1;
							format(rango, sizeof(rango), "* %s le da un libro de Italiano a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Ruso",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s un libro de Ruso",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido un libro de %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							Informacion[giveplayerid][RusLibro] = 1;
							format(rango, sizeof(rango), "* %s le da un libro de Ruso a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Chino",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s un libro de Chino",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido un libro de %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							Informacion[giveplayerid][ChiLibro] = 1;
							format(rango, sizeof(rango), "* %s le da un libro de Chino a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Japones",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s un libro de Japones",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido un libro de %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							Informacion[giveplayerid][JapLibro] = 1;
							format(rango, sizeof(rango), "* %s le da un libro de Japones a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Suizo",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s un libro de Suizo",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido un libro de %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							Informacion[giveplayerid][SuiLibro] = 1;
							format(rango, sizeof(rango), "* %s le da un libro de Suizo a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Frances",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s un libro de Frances",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido un libro de %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							Informacion[giveplayerid][FraLibro] = 1;
							format(rango, sizeof(rango), "* %s le da un libro de Frances a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Polaco",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s un libro de Polaco",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido un libro de %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							Informacion[giveplayerid][PolLibro] = 1;
							format(rango, sizeof(rango), "* %s le da un libro de Polaco a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Latin",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlibro [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s un libro de Latin",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido un Latin de %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
							Informacion[giveplayerid][LatLibro] = 1;
							format(rango, sizeof(rango), "* %s le da un libro de Latin a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, GRIS, "No eres un instructor");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/darlicencia", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == LICE)
	        {
	            new x_opcion[128];
				x_opcion = strtok(cmdtext, idx);
				if(!strlen(x_opcion)) {
				    SendClientMessage(playerid, DORADO, "Utiliza: /darlicencia [Opcion] [Usuario]");
				    SendClientMessage(playerid, BLANCO, "Opciones Disponibles: Conduccion, Vuelo, Bote, Armas");
					return 1;
				}
			    if(strcmp(x_opcion,"Conduccion",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlicencia [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una licencia de conduccion",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido una licencia de conducir gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][LCoche] = 1;
							format(rango, sizeof(rango), "* %s le da una licencia a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Vuelo",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlicencia [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una licencia de vuelo",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido una licencia de vuelo gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][LVuelo] = 1;
							format(rango, sizeof(rango), "* %s le da una licencia a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
							return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Bote",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlicencia [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una licencia de bote",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido una licencia de bote gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][LBote] = 1;
							format(rango, sizeof(rango), "* %s le da una licencia a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
						    return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
			    else if(strcmp(x_opcion,"Armas",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, DORADO, "Utiliza: /darlicencia [Opcion] [Usuario]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(rango, sizeof(rango), "* Le has dado a %s una licencia de armas",giveplayer);
					        SendClientMessage(playerid, AZULCLARO, rango);
					        format(rango, sizeof(rango), "* Felicidades, has obtenido una licencia de armas gracias a %s",NombreEx(playerid));
					        SendClientMessage(giveplayerid, AZULCLARO, rango);
					        Informacion[giveplayerid][LArmas] = 1;
							format(rango, sizeof(rango), "* %s le da una licencia a %s", NombreEx(playerid), giveplayer);
							RangoCercano(10.0, playerid, rango,VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
						    return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
					    return 1;
					}
				}
 	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "No eres un instructor");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/finalizarleccion", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == LICE)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /finalizarleccion [Usuario]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(rango, sizeof(rango), "* Has finalizado una leccion de conduccion con %s",giveplayer);
				        SendClientMessage(playerid, AZULCLARO, rango);
				        format(rango, sizeof(rango), "* El instructor de conduccion %s ha finalizado la leccion",NombreEx(playerid));
				        SendClientMessage(giveplayerid, AZULCLARO, rango);
				        EnLeccion[giveplayerid] = 0;
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Tu no eres un intructor");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/iniciarleccion", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == LICE)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, DORADO, "Utiliza: /iniciarleccion [Usuario]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(rango, sizeof(rango), "* Has iniciado una leccion de conduccion con %s",giveplayer);
				        SendClientMessage(playerid, AZULCLARO, rango);
				        format(rango, sizeof(rango), "* El instructor de conduccion %s ha iniciado la leccion",NombreEx(playerid));
				        SendClientMessage(giveplayerid, AZULCLARO, rango);
				        EnLeccion[giveplayerid] = 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, GRIS, "Tu no eres un intructor");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp("/asensor", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(Informacion[playerid][Faccion] == LSPD)
	    	{
	    	    if(PlayerToPoint(3, playerid, 258.2337,86.5617,1002.4453))
				{
					ShowPlayerDialog(playerid, Asensor, DIALOG_STYLE_MSGBOX, "- Asensor LSPD","�A d�nde desea ir oficial?","Garage","Azotea");
				}
				else
				{
					SendClientMessage(playerid, GRIS, "Debes estar en la puerta del elevador de LSPD");
					return 1;
				}
			}
			return 1;
		}
	}
	if(strcmp(cmd, "/idiomas", true) == 0)
	{
	    if(!PlayerToPoint(5,playerid, -2036.7465,-80.9591,1028.9183))
	    {
	        SendClientMessage(playerid, GRIS, "Necesitas estar en la universidad");
	        return 1;
	    }
		ShowPlayerDialog(playerid, Idiomas, DIALOG_STYLE_MSGBOX, "- Universidad","�Desea aprender algun idioma?","Si","No");
		return 1;
	}
	if(strcmp(cmd, "/licencias", true) == 0)
	{
	    if(!PlayerToPoint(5,playerid, -2033.2271,-117.3755,1035.1719))
	    {
	        SendClientMessage(playerid, GRIS, "Necesitas estar en la autoescuela");
	        return 1;
	    }
		ShowPlayerDialog(playerid, Licencias, DIALOG_STYLE_MSGBOX, "- Autoescuela","�Desea obtener licencia de conducir?","Si","No");
		return 1;
	}
	if(strcmp(cmd,"/comprobardni",true) == 0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, AMARILLO, "Utiliza: /checkearci [ID]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if(RangoCercanoS(5.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, GRIS, "No puedes checkearte a ti mismo"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(rango, sizeof(rango), "Resultados del checkeo de DNI del civil %s:", giveplayer);
				        SendClientMessage(playerid, 0x8D0000FF, rango);
				        if(Informacion[giveplayerid][DNI] == 0)
				        {
				            SendClientMessage(playerid, ROJO, "�Este civil no tiene DNI, es un indocumentado!");
							SendClientMessage(giveplayerid, ROJO, "�El oficial no encontro documentos, te ha descubierto!");
						}
						else
						{
				            SendClientMessage(playerid, VERDE, "Este civil tiene DNI, es legal");
							SendClientMessage(giveplayerid, VERDE, "El oficial encontro documentos, sabe que eres legal");
						}
			   			format(rango, sizeof(rango), "* El oficial %s checkea a %s para comprobar sus documentos civiles", NombreEx(playerid), giveplayer);
						RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cedula", true) == 0)
	{
	    if(Informacion[playerid][DNI] == 0)
	    {
		    SendClientMessage(playerid, GRIS, "Lo siento, no tienes cedula de identidad");
		    return 1;
		}
		format(rango, sizeof(rango), "%s dice: %d", NombreEx(playerid), Informacion[playerid][CI]);
		RangoCercano(10.0, playerid, rango,BLANCO,BLANCO,BLANCO,BLANCO,BLANCO);
		return 1;
	}
 	if(strcmp(cmd,"/documentos", true) == 0)
    {
        if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][DNI] == 0)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, no tienes documentos que ver");
			    return 1;
			}
			new sDNI[128];
			if(Informacion[playerid][Sexo] == 1) { sDNI = "Masculino"; }
			else if(Informacion[playerid][Sexo] == 2) { sDNI = "Femenino"; }
			new eDNI = Informacion[playerid][Edad];
			new cDNI = Informacion[playerid][CI];
			format(rango, sizeof(rango), "~g~Nombre: ~w~%s~n~~g~Sexo: ~w~%s~n~~g~Edad: ~w~%d~n~~g~CI: ~w~%d", NombreEx(playerid), sDNI, eDNI, cDNI);
	        TextDrawSetString(DNI_NAME[playerid], rango);
			TextDrawShowForPlayer(playerid, DNI_NAME[playerid]);
			TextDrawShowForPlayer(playerid, DNI_FONDO);
			format(rango, sizeof(rango), "* %s saca sus documentos y mira su cedula de identidad", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
   			SetTimerEx("OcultarDNI", 10000, false, "d", playerid);
			return 1;
		}
 	}
	if(strcmp(cmd, "/loteria", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!PlayerToPoint(5,playerid, 1481.8784,-1721.2673,13.5469))
			{
		         SendClientMessage(playerid, GRIS, "Debes estar en el puesto de loterias del ayuntamiento");
	            return 1;
	        }
		    if(Informacion[playerid][Loteria] > 0)
	        {
	            SendClientMessage(playerid, GRIS, "Ya tienes un ticket de loteria");
	            return 1;
	        }
	        if(GetPlayerMoney(playerid) < 50)
	        {
	            SendClientMessage(playerid, GRIS, "No tienes $50 para comprar la loteria");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, DORADO,"Utiliza: /loteria [Numero]");
				return 1;
			}
			new lottonr = strval(tmp);
			if(lottonr < 1 || lottonr > 100) { SendClientMessage(playerid, GRIS, "El valor minimo es 1, y el maximo 100"); return 1; }
			format(rango, sizeof(rango), "* Has comprado un ticket de loteria, el numero es %d.", lottonr);
			SendClientMessage(playerid, VERDE, rango);
			GivePlayerMoney(playerid, - 50);
			Informacion[playerid][Loteria] = lottonr;
	    }
	    return 1;
	}
	if(strcmp(cmd, "/ihuc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /ihuc [ID Coche]");
				return 1;
			}
			new testcar = strval(tmp);
			if (Informacion[playerid][Admin] >= 3)
			{
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, AMARILLO, "   Usted ha sido teletransportado");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, AMARILLO, "   Usted no esta autorizado a Utilizar el comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/castigar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new playa;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /castigar [Usuario] [Minutos]");
				return 1;
			}
			new tiempo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			tiempo = strval(tmp);
			if(Informacion[playerid][Admin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(rango, 256, "* Has castigado a %s por %d minutos", giveplayer, tiempo);
						SendClientMessage(playerid, GRIS, rango);
						format(rango, 256, "* %s te ha castigado por %d minutos", NombreEx(playa),tiempo);
						SendClientMessage(playa, GRIS, rango);
						format(rango, 256, "* %s ha castigado a %s por %d minutos", NombreEx(playerid), NombreEx(playa), tiempo);
						MensajeAdmin(0xB39A79FF, rango);
						SetPlayerInterior(playa, 6);
						SetPlayerPos(playa,264.6288,77.5742,1001.0391);
						Informacion[playa][Castigado] = 1;
						Informacion[playa][TiempoCastigado] = tiempo * 60;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Solo administradores pueden utilizar este comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/arrestar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new playa;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /arrestar [Usuario] [Minutos]");
				return 1;
			}
	        if(!PlayerToPoint(10, playerid, 267.7526,77.8474,1001.03910) && !PlayerToPoint(10, playa, 267.7526,77.8474,1001.0391))
			{
			    SendClientMessage(playerid, GRIS, "Debes estar en el area de celdas de la comisaria");
			    return 1;
			}
			new tiempo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			tiempo = strval(tmp);
			if(Informacion[playerid][Faccion] == 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						if(GetDistanceBetweenPlayers(playerid,playa) < 5)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(rango, 256, "* Has arrestado a %s por %d minutos", giveplayer, tiempo);
							SendClientMessage(playerid, GRIS, rango);
							format(rango, 256, "* %s te ha arrestado por %d minutos", NombreEx(playa),tiempo);
							SendClientMessage(playa, GRIS, rango);
							SetPlayerInterior(playa, 6);
							SetPlayerPos(playa,264.6288,77.5742,1001.0391);
							Informacion[playa][Castigado] = 1;
							Informacion[playa][TiempoCastigado] = tiempo * 60;
						}
						else
						{
							SendClientMessage(playerid, GRIS, "Debes estar cerca del sospechoso");
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Solo policias pueden utilizar este comando");
			}
		}
		return 1;
	}
	if(strcmp("/esposar", cmd, true) == 0)
	{
	    new jugador;
	    tmp = strtok(cmdtext, idx);
	    jugador = strval(tmp);
	    if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /esposar [Usuario]");
	    if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
	    {
	        if(Informacion[playerid][Faccion] == 1)
	        {
	            if(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(jugador))
	            {
	            	if(vehiculo > 19 && vehiculo < 69)
	                {
	                    if(Informacion[jugador][Esposado] == 0)
	                    {
				            new s[256], s2[256];
				            format(s2, sizeof(s2), "- %s saca sus esposas.", NombreEx(playerid));
				            RangoCercano(5.0, playerid, s2, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
				            format(s, sizeof(s), "- %s detiene a %s con sus esposas.", NombreEx(playerid), NombreEx(jugador));
				            RangoCercano(5.0, playerid, s, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
				            TogglePlayerControllable(jugador, 0);
				            Informacion[jugador][Esposado] = 1;
			            }
			            else
			            {
			                SendClientMessage(playerid, GRIS, "El jugador ya est� esposado.");
			            }
		            }
		            else
		            {
		                SendClientMessage(playerid, GRIS, "Debes estar en un coche patrulla o en un Ranger de PD.");
		            }
	            }
	            else
	            {
	                SendClientMessage(playerid, ROJO, "Debes estar en un auto para poder esposar!");
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid ,ROJO,"Este comando es para policia, y t� no eres un policia!");
	        }
	    }
	    else
	    {
	        SendClientMessage(playerid, GRIS, "El jugador no est� conectado!");
	    }
	    return 1;
	}
	if(strcmp("/desesposar", cmd, true) == 0)
	{
	    new jugador;
	    tmp = strtok(cmdtext, idx);
	    jugador = strval(tmp);
	    if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /desesposar [Usuario]");
	    if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
	    {
	        if(Informacion[playerid][Faccion] == 1)
	        {
	            if(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(jugador))
	            {
	            	if(vehiculo > 19 && vehiculo < 69)
	                {
	                    if(Informacion[jugador][Esposado] == 0)
	                    {
				            new s[256];
				            format(s, sizeof(s), "- %s le quita las esposas a %s.", NombreEx(playerid), NombreEx(jugador));
				            RangoCercano(5.0, playerid, s, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
				            TogglePlayerControllable(jugador, 1);
				            Informacion[jugador][Esposado] = 0;
			            }
			            else
			            {
			                SendClientMessage(playerid, GRIS, "El jugador ya est� esposado.");
			            }
		            }
		            else
		            {
		                SendClientMessage(playerid, GRIS, "Debes estar en un coche patrulla o en un Ranger de PD.");
		            }
	            }
	            else
	            {
	                SendClientMessage(playerid, ROJO, "Debes estar en un auto para poder esposar!");
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid ,ROJO,"Este comando es para policia, y t� no eres un policia!");
	        }
	    }
	    else
	    {
	        SendClientMessage(playerid, GRIS, "El jugador no est� conectado!");
	    }
	    return 1;
	}
	if(strcmp(cmd, "/desrentar", true) == 0)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        if(GetPlayerVehicleID(playerid) == Informacion[playerid][VRentado])
	        {
			    if(Informacion[playerid][VRentado] == GetPlayerVehicleID(playerid))
			    {
			        if(Informacion[playerid][HeRentado] == 1 && Informacion[playerid][HeRentado2] == 1)
			        {
						Informacion[playerid][VRentado] = 0;
						Rentado[GetPlayerVehicleID(playerid)] = 0;
					 	Informacion[playerid][HeRentado] = 0;
						Informacion[playerid][VRentado2] = 0;
					 	Informacion[playerid][HeRentado2] = 0;
						GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~r~Has desrentado el vehiculo", 4000, 3);
						RemovePlayerFromVehicle(playerid);

					}
					else
					{
					    SendClientMessage(playerid, ROJO, "Pero si no has rentado un vehiculo! �C�mo piensas desrentar?");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "Este auto no lo tienes rentado t�!");
			}
		}
		else
		{
		    SendClientMessage(playerid, ROJO, "Debes estar en el auto para desrentarlo.");
		}
	    return 1;
	}
	if(strcmp(cmd, "/lobservaciones", true) == 0)
	{
	    new jugador;
	    new rango1[256];
		tmp = strtok(cmdtext, idx);
		jugador = strval(tmp);
		if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /lobservaciones [Usuario]");
		if(Informacion[playerid][Faccion] == 1)
		{
			if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
			{
				if(RangoCercanoS(5.0, playerid, giveplayerid))
				{
					Informacion[jugador][Observaciones] = 0;
					Informacion[jugador][Estrellas] = 0;
					ActualizarEstrellas(jugador);
					format(rango, sizeof(rango), "{FF8D00}[LSPD] {FFFFFF}El policia %s ha limpiado su historial delictivo.", NombreEx(playerid));
					SendClientMessage(jugador, BLANCO, rango);
					format(rango1, sizeof(rango1), "{FF8D00}[LSPD] {FFFFFF}Has limpiado el historial delictivo de %d", NombreEx(jugador));
					SendClientMessage(playerid, BLANCO, rango1);
					return 1;
				}
				return 1;
			}
			return 1;
		}
	}
	if(strcmp(cmd, "/observar", true) == 0)
	{
	    new jugador;
	    new rango1[256];
	    new rango2[256];
		tmp = strtok(cmdtext, idx);
		jugador = strval(tmp);
		if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /observar [Usuario]");
		if(Informacion[playerid][Faccion] == 1)
		{
			if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
			{
				if(RangoCercanoS(5.0, playerid, giveplayerid))
				{
					Informacion[jugador][Observaciones] += 1;
					Informacion[jugador][Estrellas] += 1;
					ActualizarEstrellas(jugador);
					format(rango, sizeof(rango), "{FF8D00}[LSPD] {FFFFFF}El policia %s lo ha observado por cometer un delito.", NombreEx(playerid));
					SendClientMessage(jugador, BLANCO, rango);
					format(rango1, sizeof(rango1), "{FF8D00}[LSPD] {FFFFFF}Has observado al civil %s", NombreEx(jugador));
					SendClientMessage(playerid, BLANCO, rango1);
					format(rango2, sizeof(rango2), "* %s apunta en su libreta y se la entrega a %s", NombreEx(playerid), NombreEx(jugador));
					RangoCercano(12.0, playerid, rango2, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					return 1;
				}
				return 1;
			}
			return 1;
		}
	}
	if(strcmp(cmd, "/operar", true) == 0)
	{
		new jugador;
		new rango1[256];
		new rango2[256];
		tmp = strtok(cmdtext, idx);
		jugador = strval(tmp);
		if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /operar [Usuario]");
		if(!PlayerToPoint(3, playerid, 267.4516,1858.1227,8.7578))
		{
		    SendClientMessage(playerid, GRIS, "Debes estar en el laboratorio bioquimico de los santos");
			return 1;
		}
		if(Informacion[playerid][Faccion] == 2)
		{
			if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
			{
				if(RangoCercanoS(5.0, playerid, giveplayerid))
				{
					Informacion[jugador][Cancer] = 0;
					format(rango, sizeof(rango), "{FF8D00}[LSMD] {FFFFFF}El doctor %s ha limpiado tu sangre del cancer, estas curado!", NombreEx(playerid));
					SendClientMessage(jugador, BLANCO, rango);
					format(rango1, sizeof(rango1), "{FF8D00}[LSMD] {FFFFFF}Has limpiado la sangre cancerosa del civil %s", NombreEx(jugador));
					SendClientMessage(playerid, BLANCO, rango1);
					format(rango2, sizeof(rango2), "* %s Utiliza sus instrumentos medicos y opera a %s del cancer", NombreEx(playerid), NombreEx(jugador));
					RangoCercano(12.0, playerid, rango2, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					return 1;
				}
				return 1;
			}
			return 1;
		}
	}
	if(strcmp(cmd, "/analizar", true) == 0)
	{
		new jugador;
		new rango2[256], rango3[256], rango4[256], rango5[256],rango6[256];
		tmp = strtok(cmdtext, idx);
		jugador = strval(tmp);
		if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /analizar [Usuario]");
		if(!PlayerToPoint(3, playerid, 275.2493,1860.8098,8.7578))
		{
		    SendClientMessage(playerid, GRIS, "Debes estar en el laboratorio bioquimico de los santos");
			return 1;
		}
		if(Informacion[playerid][Faccion] == 2)
		{
			if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
			{
    			if(RangoCercanoS(5.0, playerid, giveplayerid))
				{
		  			if(Informacion[jugador][DNI] == 0)
		  			{
		  			    SendClientMessage(playerid, GRIS, "El jugador no tiene identificacion, es un indocumentado");
		  			    return 1;
					}
					SendClientMessage(playerid, NARANJA,"{FF8D00}* * * -= {FFFFFF}Laboratorios Bioquimicos de San Andreas {FF8D00}=- * *");
					format(rango, sizeof(rango), "{FF8D00}Nombre del Paciente: {FFFFFF}%s", NombreEx(giveplayerid));
					SendClientMessage(playerid, BLANCO, rango);
					format(rango2, sizeof(rango2), "{FF8D00}Edad: {FFFFFF}%d", Informacion[giveplayerid][Edad]);
					SendClientMessage(playerid, BLANCO, rango2);
					format(rango3, sizeof(rango3), "{FF8D00}CI: {FFFFFF}%d", Informacion[giveplayerid][CI]);
					SendClientMessage(playerid, BLANCO, rango3);
					SendClientMessage(playerid, NARANJA,"-------------------------------------------------------");
					format(rango4, sizeof(rango4), "{FF8D00}Graduacion de Cancer: {FFFFFF}%d", Informacion[giveplayerid][Cancer]);
					SendClientMessage(playerid, BLANCO, rango4);
					format(rango5, sizeof(rango5), "{FF8D00}Indice de Crack: {FFFFFF}%d", Informacion[giveplayerid][IndiceCrack]);
					SendClientMessage(playerid, BLANCO, rango5);
					format(rango6, sizeof(rango6), "* %s insyecta la jeringa en la piel de %s y quita un poco de sangre", NombreEx(playerid), NombreEx(jugador));
					RangoCercano(12.0, playerid, rango6, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					return 1;
				}
				return 1;
			}
			return 1;
		}
	}
 	if(strcmp(cmd, "/mservicio", true) == 0)
	{
		if(Informacion[playerid][Faccion] == 2)
		{
		    if(ServicioLSMD[playerid] == 0)
		    {
				format(rango, sizeof(rango), "{FF8D00}[LSMD] {FFFFFF}El medico %s esta de servicio, atendera sus emergencias sanitarias", NombreEx(playerid));
				SendClientMessageToAll(BLANCO, rango);
		        ServicioLSMD[playerid] = 1;
			}
			else
			{
				format(rango, sizeof(rango), "{FF8D00}[LSMD] {FFFFFF}El medico %s esta fuera de servicio, no atendera sus emergencias sanitarias", NombreEx(playerid));
				SendClientMessageToAll(BLANCO, rango);
		        ServicioLSMD[playerid] = 0;
				return 1;
			}
		}
		return 1;
	}
  	if(strcmp(cmd, "/qsangre", true) == 0)
	{
		new jugador, str[256], str2[256];
		tmp = strtok(cmdtext, idx);
		jugador = strval(tmp);
		if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /qsangre [Usuario]");
		if(strval(tmp) == playerid) return SendClientMessage(playerid, GRIS, "No puedes sacarte sangre a t� mismo!");
		if(!PlayerToPoint(3, playerid,351.0655,162.8393,1019.9912))
		{
		    SendClientMessage(playerid, GRIS, "Debes estar en el laboratorio bioquimico de los santos");
			return 1;
		}
		if(Informacion[playerid][Faccion] == 2)
		{
			if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
			{
				Informacion[jugador][Sangre] -= 10;
				Informacion[playerid][BSangre] += 10;
				format(str, sizeof(str), "[LSMD] El doctor %s te ha retirado 10 centimetros cubicos de sangre", NombreEx(playerid));
				SendClientMessage(jugador, AMARILLO, str);
				format(str2, sizeof(str2), "[LSMD] Le has sacado 10 centimetros cubicos de sangre al civil %s", NombreEx(jugador));
				SendClientMessage(playerid, AMARILLO, str2);
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "El jugador se encuentra desconectado");
			}
		}
		else
		{
		    SendClientMessage(playerid, ROJO, "No eres parte del centro medico de los santos");
		}
		return 1;
	}
	if(strcmp(cmd, "/resetearcoches", true) == 0 || strcmp(cmd, "/res", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Admin] < 3)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			    return 1;
			}
			new bool:unwanted[CANTIDAD];
			for(new player=0; player<MAX_PLAYERS; player++)
     		{
            	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new car = 1; car <= 700; car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
			}
			format(rango, sizeof(rango), "Vehiculos sin uso han sido restablecidos a su posicion original por %s", NombreEx(playerid));
			SendClientMessageToAll(CELESTE, rango);
			Informacion[playerid][Respawns] += 1;
		}
	}
	if(strcmp(cmd, "/curar", true) == 0)
	{
	    new jugador;
	    tmp = strtok(cmdtext, idx);
	    jugador = strval(tmp);
	    if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /curar [Usuario]");
	    if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
	    {
	        if(Informacion[playerid][Faccion] == 2)
	        {
	            if(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(jugador))
	            {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 && GetVehicleModel(GetPlayerVehicleID(jugador)) == 416)
	                {
						new s[128], s2[128], Float: vida;
			            GetPlayerHealth(jugador, vida);
			            if(vida < 80)
			            {
							if(Informacion[playerid][BSangre] >= 2)
							{
							    format(s2, sizeof(s2), "- %s saca su botiquin de primeros auxilios y hace asistencia", NombreEx(playerid));
					            RangoCercano(5.0, playerid, s2, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
					            format(s, sizeof(s), "- %s cura a %s dejandolo a optima salud", NombreEx(playerid), NombreEx(jugador));
					            RangoCercano(5.0, playerid, s, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
					            SetPlayerHealth(jugador, 100);
					            SendClientMessage(jugador, AMARILLO, "Le has dado 50 USD al medico por sus servicios");
					            SendClientMessage(playerid, AMARILLO, "El civil te ha dado 50 USD por tus servicios");
					            GivePlayerMoney(jugador, -50);
					            GivePlayerMoney(playerid, 50);
					            Informacion[jugador][Sangre] += 5;
								Informacion[playerid][BSangre] -= 2;
							}
			         	   else
			        	    {
							 	SendClientMessage(playerid, GRIS, "No tienes suficiente sangre para curarlo");
			        	    }
		          		}
		          		else
		           	 	{
		                	SendClientMessage(playerid, GRIS, "El jugador tiene la vida completa, no necesita curacion");
		            	}
   	         		}
   	    	 	}
   	     		else
   	     		{
   	         		SendClientMessage(playerid, GRIS, "Debes estar en una ambulancia");
   	     		}
   	 		}
   	 		else
   	 		{
   	 		   	 SendClientMessage(playerid, GRIS, "No eres Medico");
   		 	}
   	 		return 1;
		}
	}
	if(strcmp(cmd, "/transferir", true) == 0 || strcmp(cmd, "/enviar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Informacion[playerid][Nivel] < 2)
			{
				SendClientMessage(playerid, GRIS, "Necesitas tener nivel 2 para transferir dinero");
				return 1;
			}
			if(!EsUnBanco(playerid))
		    {
				SendClientMessage(playerid, GRIS, "Debes estar en el banco para Utilizar este comando");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /enviar [Usuario] [Valor]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /enviar [Usuario] [Valor]");
				return 1;
			}
			moneys = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					playermoney = Informacion[playerid][Banco] ;
					if (moneys > 0 && playermoney >= moneys)
					{
						Informacion[playerid][Banco] -= moneys;
						Informacion[giveplayerid][Banco] += moneys;
						format(rango, sizeof(rango), "Has enviado una suma de $%d de dinero al usuario %d [ID: %d]", moneys, giveplayer,giveplayerid);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, AMARILLO, rango);
						format(rango, sizeof(rango), "Has recibido una suma de $%d del usuario %s [ID: %d] ", moneys, NombreEx(playerid), playerid);
						SendClientMessage(giveplayerid, VERDE, rango);
						new year, month,day;
						getdate(year, month, day);
						format(rango, sizeof(rango), "Emisor: %s | Receptor: %s | %d/%d/%d | Dinero: %s |",NombreEx(playerid) ,giveplayer, day, month, year, moneys);
				    	LPagos(rango);
					    if(moneys >= 100000)
						{
						    format(rango, sizeof(rango), "[AntiHack] Aviso, el usuario %s envia $%d al usuario %s", NombreEx(playerid), moneys, giveplayer);
							MensajeAdmin(0xB39A79FF, rango);
						}
					}
					else
					{
						SendClientMessage(playerid, GRIS, "No tienes esa cantidad");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "El jugador esta desconectado");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/sacar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!EsUnBanco(playerid))
		    {
				SendClientMessage(playerid, GRIS, "Debes estar en el banco para Utilizar este comando");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /sacar [Valor]");
				format(rango, sizeof(rango), "Actualmente tienes $%d en tu cuenta bancaria", Informacion[playerid][Banco]);
				SendClientMessage(playerid, BLANCO, rango);
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /sacar [Valor]");
				format(rango, sizeof(rango), "Actualmente tienes $%d en tu cuenta bancaria", Informacion[playerid][Banco]);
				SendClientMessage(playerid, BLANCO, rango);
				return 1;
			}
			if (cashdeposit > Informacion[playerid][Banco] || cashdeposit < 1)
			{
				SendClientMessage(playerid, GRIS, "No tienes ese valor");
				return 1;
			}
			GivePlayerMoney(playerid, cashdeposit);
			Informacion[playerid][Banco]=Informacion[playerid][Banco]-cashdeposit;
			format(rango, sizeof(rango), "Has retirado $%d de tu cuenta bancaria, ahora tienes $%d en el banco", cashdeposit,Informacion[playerid][Banco]);
			SendClientMessage(playerid, AMARILLO, rango);
			format(rango, sizeof(rango), "* %s realiza un retiro de su cuenta bancaria", NombreEx(playerid));
			RangoCercano(12.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/depositar", true) == 0 || strcmp(cmd, "/guardar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!EsUnBanco(playerid))
		    {
				SendClientMessage(playerid, GRIS, "Debes estar en el banco para Utilizar este comando");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /guardar [Valor]");
				format(rango, sizeof(rango), "Tienes %d USD en tu cuenta bancaria", Informacion[playerid][Banco]);
				SendClientMessage(playerid, BLANCO, rango);
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /guardar [Valor]");
				format(rango, sizeof(rango), "Tienes %d USD en tu cuenta bancaria", Informacion[playerid][Banco]);
				SendClientMessage(playerid, BLANCO, rango);
				return 1;
			}
			if(cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, GRIS, "No tienes ese valor de dinero");
				return 1;
			}
	        if(cashdeposit >= 500000)
			{
			    format(rango, sizeof(rango), "[AntiHack] Aviso, el usuario %s ingresa $%d a su cuenta bancaria", NombreEx(playerid), cashdeposit);
				MensajeAdmin(0xB39A79FF, rango);
			}
			GivePlayerMoney(playerid, -cashdeposit);
			new curfunds = Informacion[playerid][Banco];
			Informacion[playerid][Banco]=cashdeposit+Informacion[playerid][Banco];
			SendClientMessage(playerid, AMARILLO, ": Banco Estatal de Los Santos :");
			format(rango, sizeof(rango), "Dinero en banco: $%d", curfunds);
			SendClientMessage(playerid, BLANCO, rango);
			format(rango, sizeof(rango), "Dinero ingresado: $%d",cashdeposit);
			SendClientMessage(playerid, BLANCO, rango);
			SendClientMessage(playerid, AMARILLO, "- - - - - - - - - - - - - -");
			format(rango, sizeof(rango), "Dinero actualizado: $%d", Informacion[playerid][Banco]);
			SendClientMessage(playerid, BLANCO, rango);
			
			format(rango, sizeof(rango), "* %s realiza un deposito bancario", NombreEx(playerid));
			RangoCercano(12.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
  		 	return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/hackear", true) == 0)
	{
		if(!EsUnBanco(playerid))
	    {
			SendClientMessage(playerid, GRIS, "Debes estar en el banco para Utilizar este comando");
			return 1;
		}
		if(Informacion[playerid][Inteligencia] < 59)
	    {
			SendClientMessage(playerid, GRIS, "Debes tener como minimo 60 de inteligencia");
			return 1;
		}
		if(Informacion[playerid][Codificadores] == 0)
	    {
			SendClientMessage(playerid, GRIS, "Necesitas un codificador para hacer esta accion");
			return 1;
		}
		EstaConteando[playerid] = 1;
        TextDrawShowForPlayer(playerid, Conteo3[playerid]);
		TextDrawSetString(Conteo3[playerid],"220");
        TextDrawShowForPlayer(playerid, Conteo0);
        TextDrawShowForPlayer(playerid, Conteo1);
        TextDrawShowForPlayer(playerid, Conteo2);
		SetTimerEx("RConteo", 1000, 0, "d", playerid);
		Informacion[playerid][Codificadores] -= 1;
		SendClientMessage(playerid, ROJO, "Has empezado a codificar la base de datos bancaria, espera 2 minutos para finalizar");
		SendClientMessage(playerid, BLANCO, "Si deseas abordar el hackeo Utiliza /abordarhackeo");
		TogglePlayerControllable(playerid, 0);
		return 1;
	}
	if(strcmp(cmd, "/abordarhackeo", true) == 0)
	{
		if(!PlayerToPoint(1,playerid, 1438.3528,-996.9083,1639.7843) || !PlayerToPoint(1,playerid, 1432.7076,-997.0886,1639.7843) || !PlayerToPoint(1,playerid, 1424.6422,-981.8258,1639.7843) || !PlayerToPoint(1,playerid, 1421.2076,-981.5569,1639.7843) || !PlayerToPoint(1, playerid, 1417.7760,-981.4537,1639.7843))
        {
            SendClientMessage(playerid, GRIS, "Usted no esta en el banco");
  	        return 1;
  		}
		EstaConteando[playerid] = 0;
		TextDrawHideForPlayer(playerid, Conteo0);
        TextDrawHideForPlayer(playerid, Conteo1);
        TextDrawHideForPlayer(playerid, Conteo2);
        TextDrawHideForPlayer(playerid, Conteo3[playerid]);
		EstaConteando[playerid] = 0;
		Conteo[playerid] = 220;
		SendClientMessage(playerid, VERDE, "Hackeo abordado, hulle del lugar antes que llege la policia");
		TogglePlayerControllable(playerid, 1);
		return 1;
	}
	if(strcmp(cmd, "/expulsar", true) == 0)
	{
		new jugador, str[256], str2[256];
		tmp = strtok(cmdtext, idx);
		jugador = strval(tmp);
		new facc = Informacion[playerid][Faccion];
		if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /expulsar [Usuario]");
		if(strval(tmp) == playerid) return SendClientMessage(playerid, GRIS, "No puedes expulsarte a t� mismo!");
		if(Informacion[playerid][Lider] == 1 && Informacion[playerid][Rango] == 6)
		{
			if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
			{
			    if(Informacion[jugador][Faccion] == facc)
			    {
					Informacion[jugador][Faccion] = 0;
					Informacion[jugador][Rango] = 0;
					format(str, sizeof(str), "Has sido expulsado de la facci�n %d, por el lider %s", facc, NombreEx(playerid));
					SendClientMessage(jugador, AMARILLO, str);
					format(str, sizeof(str), "Has expulsado a %s de t� facci�n.", NombreEx(jugador));
					SendClientMessage(playerid, AMARILLO, str2);
					DarSkin(jugador, 299);
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "Ese jugador no pertenece a t� facci�n!");
				}
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "El jugador se encuentra desconectado");
			}
		}
		else
		{
		    SendClientMessage(playerid, ROJO, "No eres un lider de facci�n.");
		}
		return 1;
	}
	if(strcmp(cmd, "/invitar", true) == 0)
	{
		new jugador, str[256], str2[256];
		tmp = strtok(cmdtext, idx);
		jugador = strval(tmp);
		if(!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /iniviar [Usuario]");
		if(strval(tmp) == playerid) return SendClientMessage(playerid, GRIS, "No puedes invitarte a ti mismo");
		if(Informacion[playerid][Lider] == 1)
		{
			if(IsPlayerConnected(playerid) && IsPlayerConnected(jugador))
			{
				new facc = Informacion[playerid][Faccion];
				Informacion[jugador][Faccion] = facc;
				Informacion[jugador][Rango] = 1;
				format(str, sizeof(str), "Has entrado a la facci�n %d, gracias a %s", facc, NombreEx(playerid));
				SendClientMessage(jugador, AMARILLO, str);
				format(str2, sizeof(str2), "Has invitado a %s a t� facci�n.", NombreEx(jugador));
				SendClientMessage(playerid, AMARILLO, str2);
				if(facc == 1) DarSkin(jugador, 71); 	  // LSPD
				else if(facc == 2) DarSkin(jugador, 276); // LSMD
				else if(facc == 3) DarSkin(jugador, 253); // TAXI
				else if(facc == 4) DarSkin(jugador, 171); // PRESIDENCIA
				else if(facc == 5) DarSkin(jugador, 188); // LSTV
				else if(facc == 6) DarSkin(jugador, 125); // Corleone
				else if(facc == 7) DarSkin(jugador, 50); // MECANICOS
				else if(facc == 8) DarSkin(jugador, 240); // FBI
				else if(facc == 9) DarSkin(jugador, 250); // Licencieros
				else if(facc == 10) DarSkin(jugador, 117); // Yakuza
				else if(facc == 11) DarSkin(jugador, 30); // Traficantes
				else if(facc == 12) DarSkin(jugador, 170); // Need For Speed
				else if(facc == 12) DarSkin(jugador, 277); // Bomberos
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "El jugador se encuentra desconectado");
			}
		}
		else
		{
		    SendClientMessage(playerid, ROJO, "No eres un lider de facci�n.");
		}
		return 1;
	}
	if(strcmp(cmd, "/traercoche", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /traercoche [ID Coche]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = strval(tmp);
			if(Informacion[playerid][Admin] >= 3)
			{
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz);
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /ir [Usuario]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if(Informacion[playerid][Admin] >= 1)
					{
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SendClientMessage(playerid, GRIS, "Te has teletransportado correctamente");
					}
					else
					{
						SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "El usuario esta desconectado");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/traer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "UtilizaGE: /traer [Usuario]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if(Informacion[playerid][Admin] >= 3)
					{
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SendClientMessage(playerid, AMARILLO, "Has traido al usuario hacia ti");
					}
					else
					{
						SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "El usuario esta desconectado");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/hacerlider", true) == 0)
	{
		if (Informacion[playerid][Admin] >= 1338)
		{
			new tmp1[256], tmp2[256], jugador, admin, rango1[256], rango2[256], nombrejugador[MAX_PLAYER_NAME], nombreadmin[MAX_PLAYER_NAME], faccion, archivo[256];
			tmp1 = strtok(cmdtext, idx);
			tmp2 = strtok(cmdtext, idx);
			if (!strlen(tmp1) || !strlen(tmp2)) return SendClientMessage(playerid, AMARILLO, "Utiliza: /hacerlider [ID] [Nivel].");
			if (strval(tmp2) < 0 || strval(tmp2) > 13) return SendClientMessage(playerid, GRIS, "Debes elegir un nivel de 0 a 13.");
			jugador = strval(tmp1);
			admin = playerid;
			GetPlayerName(jugador, nombrejugador, sizeof(nombrejugador));
			GetPlayerName(admin, nombreadmin, sizeof(nombreadmin));
			faccion = strval(tmp2);
			if (IsPlayerConnected(jugador))
			{
			    Informacion[jugador][Faccion] = faccion;
			    Informacion[jugador][Lider] = 1;
				format(rango1, sizeof(rango1), "A %s le has dado liderazgo de la facci�n: %d", nombrejugador, faccion);
				format(rango2, sizeof(rango2), "%s te ha dado el liderazgo de la facci�n: %d", nombreadmin, faccion);
				SendClientMessage(admin, BLANCO, rango1);
				SendClientMessage(jugador, BLANCO, rango2);
				PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
				PlayerPlaySound(jugador, 1057, 0.0, 0.0, 0.0);
				if(faccion == 0)
				{
					if(Informacion[playerid][Sexo] == 1)
					{
					    SetPlayerSkin(jugador, 299);
						Informacion[jugador][Skin] = 299;
						Informacion[jugador][Lider] = 0;
						Informacion[jugador][Rango] = 0;
						format(string, sizeof(string), "* Miembro del staff %s ha quitado el liderazgo a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
						ActualizarCuenta(jugador);
					}
					else if(Informacion[playerid][Sexo] == 2)
					{
					    SetPlayerSkin(jugador, 93);
					    Informacion[jugador][Skin] = 93;
						Informacion[jugador][Lider] = 0;
						Informacion[jugador][Rango] = 0;
						Informacion[jugador][Rango] = 0;
						format(string, sizeof(string), "* Miembro del staff %s ha quitado el liderazgo a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
						ActualizarCuenta(jugador);
					}
				}
				if(faccion == 1)
				{
					    SetPlayerSkin(jugador, 288);
						Informacion[jugador][Faccion] = 1;
					    Informacion[jugador][Skin] = 288;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						Informacion[jugador][Canal] = 1;
						ActualizarCuenta(jugador);
						Informacion[jugador][Rango] = 0;
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider LSPD a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 2)
				{
					    SetPlayerSkin(jugador, 228);
						Informacion[jugador][Faccion] = 2;
					    Informacion[jugador][Skin] = 228;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						Informacion[jugador][Canal] = 1;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider LSMD a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 3)
				{
					    SetPlayerSkin(jugador, 61);
						Informacion[jugador][Faccion] = 3;
					    Informacion[jugador][Skin] = 61;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						Informacion[jugador][Rango] = 8;
						Informacion[jugador][Canal] = 1;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider TAXIS a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 4)
				{
					    SetPlayerSkin(jugador, 147);
						Informacion[jugador][Faccion] = 4;
						Informacion[jugador][Skin] = 147;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						Informacion[jugador][Canal] = 1;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider GOBIERNO a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 5)
				{
					    SetPlayerSkin(jugador, 295);
						Informacion[jugador][Faccion] = 5;
					    Informacion[jugador][Skin] = 295;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider LSTV a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 6)
				{
					    SetPlayerSkin(jugador, 113);
						Informacion[jugador][Faccion] = 6;
						Informacion[jugador][Skin] = 113;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider CORLEONE a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 7)
				{
					    SetPlayerSkin(jugador, 268);
						Informacion[jugador][Faccion] = 7;
					    Informacion[jugador][Skin] = 268;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider MECANICOS a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 8)
				{
					    SetPlayerSkin(jugador, 165);
						Informacion[jugador][Faccion] = 8;
						Informacion[jugador][Skin] = 165;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						Informacion[jugador][Canal] = 1;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider FBI a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				if(faccion == 9)
				{
					    SetPlayerSkin(jugador, 186);
						Informacion[jugador][Faccion] = 9;
						Informacion[jugador][Skin] = 186;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider LICENCIEROS a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 10)
				{
					    SetPlayerSkin(jugador, 123);
						Informacion[jugador][Faccion] = 10;
						Informacion[jugador][Skin] = 123;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider YAKUZA a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 11)
				{
					    SetPlayerSkin(jugador, 29);
						Informacion[jugador][Faccion] = 11;
						Informacion[jugador][Skin] = 29;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider TRAFICANTES a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 12)
				{
					    SetPlayerSkin(jugador, 98);
						Informacion[jugador][Faccion] = 12;
						Informacion[jugador][Skin] = 98;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						Informacion[jugador][Canal] = 1;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider DBP a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				else if(faccion == 13)
				{
					    SetPlayerSkin(jugador, 279);
						Informacion[jugador][Faccion] = 13;
						Informacion[jugador][Skin] = 279;
						Informacion[jugador][Lider] = 1;
						Informacion[jugador][Rango] = 8;
						Informacion[jugador][Canal] = 1;
						ActualizarCuenta(jugador);
						format(string, sizeof(string), "* Miembro del staff %s ha cedido lider BOMBEROS a %s", nombreadmin, nombrejugador);
						MensajeAdmin(0xB39A79FF, string);
				}
				format(archivo, sizeof(archivo), "Usuarios/%s.ini", nombrejugador);
				if (dini_Exists(archivo))
				{
					dini_IntSet(archivo, "Faccion", faccion);
				}
			}
			else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra conectado.");
		}
		else return SendClientMessage(playerid, GRIS, "Necesitas ser administrador nivel 5 para Utilizar este comando.");
		return 1;
	}
	if(strcmp(cmd, "/mercado", true) == 0)
	{
		if(PlayerToPoint(5, playerid, 1485.7622,-1733.0503,6.7097))
	    {
			ShowPlayerDialog(playerid, Mercado, DIALOG_STYLE_LIST,"- Mercado Negro","[$10] - Pu�o Americano\n[$50] - Cuchillo\n[$100] - Pistola 9 mm\n[$150] - Mascara\n[$250] - Desert Eagle\n[$300] - Codificador\n[$350] - Kit de Cuerda y Venda","Comprar","Cancelar");
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/mostrardocumentos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][DNI] == 0)
	        {
				SendClientMessage(playerid, GRIS, "No tienes DNI! Nacionalizate primero!");
				return 1;
			}
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, DORADO, "Utiliza: /mostrardocumentos [ID]");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(RangoCercanoS(8.0, playerid, giveplayerid))
			        {
			            
			            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	        	        format(rango, sizeof(rango), "Le has mostrado a %s tus documentos.", giveplayer);
		           		SendClientMessage(playerid, CELESTE, rango);
		           		SendClientMessage(giveplayerid, AMARILLO, "{55C800}* * * * * * *-= {FFFFFF}Documentos {55C800}=- * * * * * * *");
		           		format(rango, sizeof(rango), "{55C800}Nombre: {FFFFFF}%s	-	{55C800}Edad: {FFFFFF}%d	-	{55C800}Origen:	{FFFFFF}Los Santos", NombreEx(playerid), Informacion[playerid][Edad]);
		           		SendClientMessage(giveplayerid, BLANCO, rango);
		           		format(rango, sizeof(rango), "{55C800}Telefono: {FFFFFF}%d	-	{55C800}CI: {FFFFFF}%d", Informacion[playerid][Telefono], Informacion[playerid][CI]);
		           		SendClientMessage(giveplayerid, BLANCO, rango);
			        	format(rango, sizeof(rango), "%s te mostro sus documentos", NombreEx(playerid));
			        	SendClientMessage(giveplayerid, CELESTE, rango);
			        	return 1;
					}
			    }
			}
	    }
	    return 1;
	}
	if(strcmp("/servicio", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(Informacion[playerid][Faccion] == 2)
	    	{
	    	    if(PlayerToPoint(3, playerid, 236.7723,75.5355,1005.0391))
				{
					if(EnServicio[playerid] == 0)
			        {
						format(rango, sizeof(rango), "- %s toma equipo de patrulla y se coloca su blindaje", NombreEx(playerid));
						RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
						SetPlayerAttachedObject(playerid, 0, 373, 1, 0.255219, -0.012552, -0.162815, 69.963966, 27.580476, 33.800472, 0.959405, 1.000000, 1.192921);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 250);
						GivePlayerWeapon(playerid, 1, 5);
						GivePlayerWeapon(playerid, 41, 5000);
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						EnServicio[playerid] = 1;
					}
					else if(EnServicio[playerid] == 1)
					{
						format(rango, sizeof(rango), "- %s deja su equipo de patrulla y se quita su blindaje", NombreEx(playerid));
						RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
						RemovePlayerAttachedObject(playerid, 0);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 50);
						GivePlayerWeapon(playerid, 1, 0);
						GivePlayerWeapon(playerid, 41, 0);
						SetPlayerArmour(playerid, 0);
						SetPlayerHealth(playerid, 100);
						EnServicio[playerid] = 0;
 					}
				}
				else
				{
					SendClientMessage(playerid, GRIS, "Necesitas estar en las oficinas del departamento de policia");
					return 1;
				}
			}
			return 1;
		}
	}
	if(strcmp(cmd, "/cbarra", true) == 0 || strcmp(cmd, "/crearbarra", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Faccion] == 1)
			{
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
				GetPlayerPos(playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle(playerid,ploca);
				CrearParada(plocx,plocy,plocz,ploca);
				
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No eres miembro del departamento de policia");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/qbarra", true) == 0 || strcmp(cmd, "/quitarbarra", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Faccion] == 1)
			{
				
				BorrarParadas(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No eres miembro del departamento de policia");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/qbarras", true) == 0 || strcmp(cmd, "/qbarras", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Admin] == 1)
			{
				BorrarTodasParadas();
				SendClientMessage(playerid, AMARILLO, "Quitaste todas las barras del servidor");
				return 1;
		}
		else
		{
			SendClientMessage(playerid, GRIS, "No eres administrador!");
			return 1;
		}
	}
	return 1;
	}
	if(strcmp(cmd, "/cbarricada", true) == 0 || strcmp(cmd, "/crearbarricada", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Faccion] == 1)
			{
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
				GetPlayerPos(playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle(playerid,ploca);
				CrearBarricada(plocx,plocy,plocz,ploca);
				
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No eres miembro del departamento de policia");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/qbarricada", true) == 0 || strcmp(cmd, "/quitarbarricada", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Faccion] == 1)
			{
				
				BorrarBarricada(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No eres miembro del departamento de policia");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/qbarricadas", true) == 0 || strcmp(cmd, "/qb", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Admin] == 1)
			{
				BorrarTodasBarricadas();
				SendClientMessage(playerid, AMARILLO, "Quitaste todas las barricadas del servidor");
				return 1;
		}
		else
		{
			SendClientMessage(playerid, GRIS, "No eres administrador!");
			return 1;
		}
	}
	return 1;
	}
	if(strcmp(cmd, "/ccono", true) == 0 || strcmp(cmd, "/colocarcono", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Faccion] == 1)
			{
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
				GetPlayerPos(playerid, plocx, plocy, plocz);
				GetPlayerFacingAngle(playerid,ploca);
				CreateCono(plocx,plocy,plocz,ploca);
				
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No eres miembro del departamento de policia");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/qcono", true) == 0 || strcmp(cmd, "/quitarcono", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Faccion] == 1)
			{
				
				DeleteClosestCono(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No eres miembro del departamento de policia");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/qconos", true) == 0 || strcmp(cmd, "/quitarconos", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Admin] == 1)
			{
				DeleteAllConos();
				SendClientMessage(playerid, AMARILLO, "Quitaste todos los conos del servidor");
				return 1;
		}
		else
		{
			SendClientMessage(playerid, GRIS, "No eres administrador!");
			return 1;
		}
	}
	return 1;
	}
	if(strcmp(cmdtext,"/crearspiker", true) == 0)
	{
		if(Informacion[playerid][Faccion] == 1)
		{
			new Float:pX,Float:pY,Float:pZ,Float:pAngulo;
	        GetPlayerPos(playerid,pX,pY,pZ);
	        GetPlayerFacingAngle(playerid,pAngulo);
	        CrearPR(pX,pY,pZ,pAngulo);
		    return 1;
		}
	}
	if(strcmp(cmdtext,"/borrarspiker", true) == 0)
	{
		if(Informacion[playerid][Faccion] == 1)
		{
		    BUPRC(playerid);
		    return 1;
		}
	}
	if(strcmp(cmdtext,"/borrartodos", true) == 0)
	{
		if(Informacion[playerid][Faccion] == 1)
		{
		    BTPR();
		    return 1;
		}
	}
	if(strcmp(cmd, "/menu", true) == 0)
	{
	    if(PlayerToPoint(5, playerid, 375.5476,-119.2827,1001.4995) || PlayerToPoint(5,playerid, 369.6111,-6.5479,1001.8589) || PlayerToPoint(5,playerid, 376.7210,-67.8952,1001.5151))
	    {
			ShowPlayerDialog(playerid, Menu, DIALOG_STYLE_LIST, "- Comidas", "[$10] - Helado com�n\n[$20] - Helado triple\n[$35] - Cono extra dulce\n[$70] - Milanesa com�n\n[$80] - Milanesa rellena con queso\n[$90] - Pizza com�n\n[$100] - Pizza rellena con carne\n[$150] - Patas de Pollo fritas\n[$200] - Asado con ensalada de tomate y lechuga\n[$250] - Cordero con ensalada de tomate y lechuga\n[$300] - Men� especial","Comprar", "Cancelar");
			return 1;
   		}
		return 1;
	}
	if(strcmp(cmd, "/bebidas", true) == 0)
	{
		if(PlayerToPoint(5,playerid, 499.8336,-20.3119,1000.6797) || PlayerToPoint(5,playerid, 499.7109,-75.9724,998.7578))
		{
			ShowPlayerDialog(playerid, Bebidas, DIALOG_STYLE_LIST, "- Bebidas", "[$10] - Vaso con agua\n[$50] - Cerveza com�n\n[$70] - Martini\n[$80] - Cerveza Suiza\n[$100] - Whiskey\n[$150] - Vodka\n[$160] - Tequila\n[$200] - Lady Killer", "Comprar","Cancelar");
			return 1;
		}
		return 1;
	}
 	if(strcmp(cmd,"/aref",true)==0 || strcmp(cmd,"/abortarrefuerzos",true)==0)
	{
		BackupClear(playerid, 0);
		return 1;
	}
	if(strcmp(cmd,"/refuerzos",true)==0 || strcmp(cmd,"/ref",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(Informacion[playerid][Faccion] == 1 || Informacion[playerid][Faccion] == 13)
			{
				if(Refuerzos[playerid] != 1)
				{
					
					Refuerzos[playerid] = 1;
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(Informacion[playerid][Faccion] == 1)
							{
								format(rango, sizeof(rango), "[LSPD] {FFFFFF}%s necesita refuerzos, su {FF0000}posicion {FFFFFF}ha sido marcada en el radar", NombreEx(playerid));
								SetPlayerMarkerForPlayer(i, playerid, 0xFF0000FF);
								MensajeLSPD(BLANCO, rango);
							}
							else if(Informacion[playerid][Faccion] == 13)
							{
								format(rango, sizeof(rango), "[LSDB] {FFFFFF}%s necesita asisistencia, su {FF0000}posicion {FFFFFF}ha sido marcada en el radar", NombreEx(playerid));
								SetPlayerMarkerForPlayer(i, playerid, 0x4666FFFF);
								MensajeBOMB(BLANCO, rango);

							}
						}
					}
					SendClientMessage(playerid, GRIS, "Escribe /aref para abortar los refuerzos.");
				}
				else
				{
					SendClientMessage(playerid, GRIS, "Ya llamaste por refuerzos, espera su respuesta..");
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "No eres un policia");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/00330033123", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /haceradmin [Usuario] [Nivel]");
				return 1;
			}
			new receptor;
			new nivel;
			receptor = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			nivel = strval(tmp);
			if(Informacion[playerid][Admin] >= 0)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {
						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
						Informacion[receptor][Admin] = nivel;
				        new tadmin[64];
				        if(Informacion[playerid][Admin] == 1339) { tadmin = "programador"; }
				        else if(Informacion[playerid][Admin] == 1338) { tadmin = "administrador lider"; }
						else { tadmin = "Due�o"; }
						format(rango, sizeof(rango), "Fuiste promovido a nivel admin numero %d por el %s %s", nivel,tadmin,NombreEx(playerid));
						SendClientMessage(receptor, AMARILLO, rango);
						format(rango, sizeof(rango), "Promoviste a %s a nivel admin por %d", giveplayer,nivel);
						SendClientMessage(playerid, AMARILLO, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/hacerpremium", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /hacerpremium [Usuario] [Nivel]");
				return 1;
			}
			new receptor;
			new nivel;
			receptor = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			nivel = strval(tmp);
			if(Informacion[playerid][Admin] >= 1338)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {
						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
						Informacion[receptor][Premium] = nivel;
				        new tadmin[64];
				        if(Informacion[playerid][Admin] == 1339) { tadmin = "Programador"; }
				        else if(Informacion[playerid][Admin] == 1338) { tadmin = "Administrador General"; }
						else { tadmin = "Due�o"; }
						format(rango, sizeof(rango), "Fuiste promovido a nivel premium numero %d por el %s %s", nivel,tadmin,NombreEx(playerid));
						SendClientMessage(receptor, AMARILLO, rango);
						format(rango, sizeof(rango), "Promoviste a %s a nivel premium por %d", giveplayer,nivel);
						SendClientMessage(playerid, AMARILLO, rango);
						format(rango, sizeof(rango), "Administrador %s promovio nivel premium a %s (Nivel: %d)", NombreEx(playerid), giveplayer,nivel);
						MensajeAdmin(0xB39A79FF, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/darrango", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /darrango [Usuario] [Rango]");
				return 1;
			}
			new receptor;
			new nivel;
			receptor = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			nivel = strval(tmp);
			if(Informacion[playerid][Lider] == 1)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {
						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
						Informacion[receptor][Rango] = nivel;
						format(rango, sizeof(rango), "Fuiste promovido a rango numero %d por el lider %s", nivel,NombreEx(playerid));
						SendClientMessage(receptor, AMARILLO, rango);
						format(rango, sizeof(rango), "Promoviste a %s a rango nivel %d", giveplayer,nivel);
						SendClientMessage(playerid, AMARILLO, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo lideres pueden Utilizar este comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/haceradmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /haceradmin [Usuario] [Nivel]");
				return 1;
			}
			new receptor;
			new nivel;
			receptor = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			nivel = strval(tmp);
			if(Informacion[playerid][Admin] >= 1338)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {
						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
						Informacion[receptor][Admin] = nivel;
				        new tadmin[64];
				        if(Informacion[playerid][Admin] == 1339) { tadmin = "programador"; }
				        else if(Informacion[playerid][Admin] == 1338) { tadmin = "administrador lider"; }
						else { tadmin = "Due�o"; }
						format(rango, sizeof(rango), "Fuiste promovido a nivel admin numero %d por el %s %s", nivel,tadmin,NombreEx(playerid));
						SendClientMessage(receptor, AMARILLO, rango);
						format(rango, sizeof(rango), "Promoviste a %s a nivel admin por %d", giveplayer,nivel);
						SendClientMessage(playerid, AMARILLO, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/banear", true) == 0)
	{
		if(NoBan[playerid] == 1) return SendClientMessage(playerid, GRIS, "Lo siento, debes esperar 30 segundos para volver a Utilizar el comando");
    	{
	     	if(IsPlayerConnected(playerid))
		    {
		    	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /banear [Usuario] [Razon]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(Informacion[giveplayerid][Admin] >= 1337 && Informacion[giveplayerid][Admin] >= 1338 && Informacion[giveplayerid][Admin] >= 1339)
				{
	   				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					format(rango, sizeof(rango), "Has sido baneado automaticamente por intentar banear miembro del staff poderoso", NombreEx(playerid));
					SendClientMessageToAll(FLUOR, rango);
					Ban(playerid);
					return 1;
				}
			    if(IsPlayerConnected(giveplayerid))
			    {
				        if(giveplayerid != INVALID_PLAYER_ID)
				        {
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, DORADO, "Utiliza: /banear [Usuario] [Razon]");
								return 1;
							}
					        new tadmin[64];
					        if(Informacion[playerid][Admin] == 1339) { tadmin = "programador"; }
					        else if(Informacion[playerid][Admin] == 1338) { tadmin = "administrador lider"; }
							else if(Informacion[playerid][Admin] == 4) { tadmin = "administrador avanzado"; }
							else if(Informacion[playerid][Admin] == 3) { tadmin = "moderador global"; }
							else if(Informacion[playerid][Admin] == 2) { tadmin = "moderador"; }
							else if(Informacion[playerid][Admin] == 1) { tadmin = "ayudante"; }
							else { tadmin = "Moderador Nivel 1"; }
							format(rango, sizeof(rango), "El %s %s ha baneado a %s, razones: %s", tadmin, NombreEx(playerid), giveplayer, (result));
							MensajeAdmin(0xB39A79FF, rango);
							Informacion[giveplayerid][Bloqueado] = 1;
							Informacion[playerid][Baneos] += 1;
							NoBan[playerid] = 1;
							Ban(giveplayerid);
							new year, month,day;
							getdate(year, month, day);
							format(rango, sizeof(rango), "Administrador: %s | Usuario: %s | %d/%d/%d | Razon: %s |",NombreEx(playerid) ,giveplayer, day, month, year, (result));
				    		LBans(rango);
							SetTimerEx("VolveraBanear",30000, false,"d",playerid);
							return 1;
						}
					}
				}
				else
				{
					format(rango, sizeof(rango), "El Usuario %s esta desconectado", giveplayerid);
					SendClientMessage(playerid, GRIS, rango);
				}
			}
			return 1;
	}
	if(strcmp(cmd, "/kickear", true) == 0)
	{
		if(NoKick[playerid] == 1) return SendClientMessage(playerid, GRIS, "Lo siento, debes esperar 30 segundos para volver a Utilizar el comando");
    	{
		    if(IsPlayerConnected(playerid))
		    {
		    	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, DORADO, "Utiliza: /kickear [Usuario] [Razon]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(Informacion[playerid][Admin] >= 1)
				{
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, DORADO, "Utiliza: /kickear [Usuario] [Razon]");
								return 1;
							}
					        new tadmin[64];
					        if(Informacion[playerid][Admin] == 1339) { tadmin = "Programador"; }
					        else if(Informacion[playerid][Admin] == 1338) { tadmin = "Administrador Lider"; }
							else if(Informacion[playerid][Admin] == 4) { tadmin = "Administrador Avanzado"; }
							else if(Informacion[playerid][Admin] == 3) { tadmin = "Moderador Global"; }
							else if(Informacion[playerid][Admin] == 2) { tadmin = "Moderador"; }
							else if(Informacion[playerid][Admin] == 1) { tadmin = "Ayudante"; }
							else { tadmin = "Moderador Nivel 1"; }
							format(rango, sizeof(rango), "El %s %s ha expulsado a %s, razones: %s", tadmin, NombreEx(playerid), giveplayer, (result));
							MensajeAdmin(0xB39A79FF, rango);
							Informacion[playerid][Kickeos] += 1;
							NoKick[playerid] = 1;
							Kick(giveplayerid);
							new year, month,day;
							getdate(year, month, day);
							format(rango, sizeof(rango), "Administrador: %s | Usuario: %s | %d/%d/%d | Razon: %s |",NombreEx(playerid) ,giveplayer, day, month, year, (result));
				    		LKick(rango);
							SetTimerEx("VolveraKickear",30000, false,"d",playerid);
							return 1;
						}
					}
				}
				else
				{
					format(rango, sizeof(rango), "El Usuario %s esta desconectado", giveplayerid);
					SendClientMessage(playerid, GRIS, rango);
				}
			}
			return 1;
	   }
    }
	if(strcmp(cmd, "/dinteligencia", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dinteligencia [Usuario] [Valor]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new valor;
			tmp = strtok(cmdtext, idx);
			valor = strvalEx(tmp);
			if(Informacion[playerid][Admin] >= 1)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
					    Informacion[receptor][Inteligencia] = valor;
						format(rango, sizeof(rango), "Ha establecido el valor de ingeligencia del usuario %s a %d", giveplayer, valor);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su valor de ingeligencia a %d", NombreEx(playerid), valor);
						SendClientMessage(receptor, GRIS, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cambiarmatricula", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Informacion[playerid][Faccion] == MECA)
	        {
				if(IsPlayerInAnyVehicle(playerid))
				{
				    new car = GetPlayerVehicleID(playerid);
				    if(car <= VV_DESDE && car >= TOTAL_VEH)
				    {
				        SendClientMessage(playerid, GRIS, "No puedes cambiarle la matricula a este vehiculo!");
				        return 1;
				    }
			        tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /cambiarmatricula [Matricula]");
						return 1;
					}
					new matricula = strval(tmp);
					if(matricula >= matriculainit && matricula <=(matricula+VV_DESDE))
					{
					    SendClientMessage(playerid, GRIS, "No puedes cambiarle la matricula a este vehiculo!");
				        return 1;
					}
					new DB:archivo = db_open("matriculas.db");
		            new DBResult:qresult;
		            new query[256];
		            format(query, sizeof(query), "SELECT matricula FROM matriculas");
		            qresult = db_query(archivo, query);
		            for(new i=0;i<db_num_rows(qresult);i++)
		            {
		                db_get_field(qresult, 0, rango, 256);
		                if(strval(rango) == matricula)
		                {
		                    SendClientMessage(playerid, GRIS, "Esa matricula ya existe");
		                    return 1;
		                }
		                else
		                {
		                    db_next_row(qresult);
		                }
		            }
		            db_free_result(qresult);
			        format(query, sizeof(query), "INSERT INTO matriculas (id, matricula, modelo) VALUES (%d, %d, '%s')", car, matricula, VehicleName[GetVehicleModel(car)-400]);
					qresult = db_query(archivo, query);
					db_free_result(qresult);
					db_close(archivo);
					CarMatricula[car] = matricula;
					format(rango, sizeof(rango), "La nueva matricula del vehiculo es %d", CarMatricula[car]);
					SendClientMessage(playerid, VERDE, rango);
				}
				else
				{
				    SendClientMessage(playerid, GRIS, "Debes estar en un vehiculo para Utilizar este comando");
				    return 1;
				}
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/dadrenalina", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dadrenalina [Usuario] [Valor]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new valor;
			tmp = strtok(cmdtext, idx);
			valor = strvalEx(tmp);
			if(Informacion[playerid][Admin] >= 1)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
					    Informacion[receptor][Adrenalina] = valor;
						format(rango, sizeof(rango), "Ha establecido el valor de adrenalina del usuario %s a %d", giveplayer, valor);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su valor de adrenalina a %d", NombreEx(playerid), valor);
						SendClientMessage(receptor, GRIS, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dganzuas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dganzuas [Usuario] [Valor]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new valor;
			tmp = strtok(cmdtext, idx);
			valor = strvalEx(tmp);
			if(Informacion[playerid][Admin] >= 1)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
					    Informacion[receptor][Ganzuas] = valor;
						format(rango, sizeof(rango), "Ha establecido el valor de Ganzuas del usuario %s a %d", giveplayer, valor);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su valor de Ganzuas a %d", NombreEx(playerid), valor);
						SendClientMessage(receptor, GRIS, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dcrack", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dcrack [Usuario] [Valor]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new valor;
			tmp = strtok(cmdtext, idx);
			valor = strvalEx(tmp);
			if(Informacion[playerid][Admin] >= 1)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
					    Informacion[receptor][Crack] = valor;
						format(rango, sizeof(rango), "Ha establecido el valor de crack del usuario %s a %d", giveplayer, valor);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su valor de crack a %d", NombreEx(playerid), valor);
						SendClientMessage(receptor, GRIS, rango);
					    format(rango, sizeof(rango), "* El administrador %s ha cambiado el valor crack %d a %s", NombreEx(playerid), valor, giveplayer);
						MensajeAdmin(0xB39A79FF, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dcodificador", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dcodificador [Usuario] [Valor]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new valor;
			tmp = strtok(cmdtext, idx);
			valor = strvalEx(tmp);
			if(Informacion[playerid][Admin] >= 1338)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
						Informacion[playerid][Codificadores] = valor;
						format(rango, sizeof(rango), "Ha establecido el valor de codificadores del usuario %s a %d", giveplayer, valor);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su valor de codificadores a %d", NombreEx(playerid), valor);
						SendClientMessage(receptor, GRIS, rango);
					    format(rango, sizeof(rango), "* El administrador %s ha cambiado el valor codificadores %d a %s", NombreEx(playerid), valor, giveplayer);
						MensajeAdmin(0xB39A79FF, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dcancer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dcancer [Usuario] [Valor]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new valor;
			tmp = strtok(cmdtext, idx);
			valor = strvalEx(tmp);
			if(Informacion[playerid][Admin] >= 1338)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
						Informacion[playerid][Cancer] = valor;
						format(rango, sizeof(rango), "Ha establecido el valor de cancer del usuario %s a %d", giveplayer, valor);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su valor de cancer a %d", NombreEx(playerid), valor);
						SendClientMessage(receptor, GRIS, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
    if (strcmp(cmd, "/spectar", true) == 0)
	{
		if(Informacion[playerid][Admin] >= 1)
		{
			new jugador, admin, Float:x, Float:y, Float:z, Float:angulo;
		    if (Espiando[playerid] == 0)
		    {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, DORADO, "Utiliza: /spectar [ID]");
				jugador = strval(tmp);
				admin = playerid;
				if (strval(tmp) == admin) return SendClientMessage(playerid, GRIS, "No puedes espiarte a ti mismo.");
				if (IsPlayerConnected(jugador))
				{
				    Espiando[playerid] = 1;
					PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
					TogglePlayerSpectating(admin, true);
					PlayerSpectatePlayer(admin, jugador, SPECTATE_MODE_NORMAL);
					GetPlayerPos(admin, Float:x, Float:y, Float:z);
					GetPlayerFacingAngle(admin, Float:angulo);
				}
				else return SendClientMessage(playerid, GRIS, "El jugador no se encuentra conectado.");
			}
			else if (Espiando[playerid] == 1)
			{
			    if (strlen(tmp)) return SendClientMessage(playerid, DORADO, "Vuelve a utilizar /spectar para dejar de spectar");
			    Espiando[admin] = 0;
			    TogglePlayerSpectating(admin, false);
			    SetPlayerPos(admin, Float:x, Float:y, Float:z);
				SetPlayerFacingAngle(admin, Float:angulo);
				SetCameraBehindPlayer(admin);
			    PlayerPlaySound(admin, 1057, 0.0, 0.0, 0.0);
			}
		}
		else return SendClientMessage(playerid, GRIS, "Solo miembros del staff pueden utilizar este comando");
		return 1;
	}
	if(strcmp(cmd, "/dnivel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dnivel [Usuario] [Valor]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new valor;
			tmp = strtok(cmdtext, idx);
			valor = strvalEx(tmp);
			if(Informacion[playerid][Admin] >= 1338)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
					    Informacion[receptor][Nivel] = valor;
						format(rango, sizeof(rango), "Ha establecido el valor de nivel del usuario %s a %d", giveplayer, valor);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su valor de nivel a %d", NombreEx(playerid), valor);
						SendClientMessage(receptor, GRIS, rango);
					    format(rango, sizeof(rango), "* El administrador %s ha dado nivel %d a %s", NombreEx(playerid), valor, giveplayer);
						MensajeAdmin(0xB39A79FF, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dmateriales", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /dmateriales [Usuario] [Valor]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new valor;
			tmp = strtok(cmdtext, idx);
			valor = strvalEx(tmp);
			if(Informacion[playerid][Admin] >= 1)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
					    Informacion[receptor][Materiales] = valor;
						format(rango, sizeof(rango), "Ha establecido el valor de materiales del usuario %s a %d", giveplayer, valor);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su valor de materiales a %d", NombreEx(playerid), valor);
						SendClientMessage(receptor, GRIS, rango);
					    format(rango, sizeof(rango), "* El administrador %s ha dado materiales %d a %s", NombreEx(playerid), valor, giveplayer);
						MensajeAdmin(0xB39A79FF, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /cskin [Usuario] [ID Skin]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new idskin;
			tmp = strtok(cmdtext, idx);
			idskin = strvalEx(tmp);
			if(idskin > 299 || idskin < 1)
			{
				SendClientMessage(playerid, GRIS, "Los id`s no pueden superar los 299 ni ser minimos a 1");
				return 1;
			}
			if(Informacion[playerid][Admin] >= 1)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
						SetPlayerSkin(receptor, idskin);
					    Informacion[receptor][Skin] = idskin;
						format(rango, sizeof(rango), "Ha establecido el skin del usuario %s a %d", giveplayer, idskin);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su skin a %d", NombreEx(playerid), idskin);
						SendClientMessage(receptor, GRIS, rango);
						Informacion[playerid][SkinsCambiados] += 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cmundovirtual", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /cmundovirtual [Usuario] [ID Mundo Virtual]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new idvirtual;
			tmp = strtok(cmdtext, idx);
			idvirtual = strvalEx(tmp);
			if(idvirtual > 400 || idvirtual < 0)
			{
				SendClientMessage(playerid, GRIS, "Los id`s no pueden superar los 400 hasta 0");
				return 1;
			}
			if(Informacion[playerid][Admin] >= 1)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
						SetPlayerVirtualWorld(receptor, idvirtual);
					    format(rango, sizeof(rango), "Ha establecido el mundo virtual del usuario %s a %d", giveplayer, idvirtual);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su mundo virtual a %d", NombreEx(playerid), idvirtual);
						SendClientMessage(receptor, GRIS, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cinterior", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /cinterior [Usuario] [ID Interior]");
				return 1;
			}
			new receptor;
			receptor = ReturnUser(tmp);
			new idinterior;
			tmp = strtok(cmdtext, idx);
			idinterior = strvalEx(tmp);
			if(idinterior > 80 || idinterior < 0)
			{
				SendClientMessage(playerid, GRIS, "Los id`s no pueden superar los 80 ni ser minimos a 1");
				return 1;
			}
			if(Informacion[playerid][Admin] >= 1)
			{
			    if(IsPlayerConnected(receptor))
			    {
			        if(receptor != INVALID_PLAYER_ID)
			        {

						GetPlayerName(receptor, giveplayer, sizeof(giveplayer));
						
						SetPlayerInterior(receptor, idinterior);
					    format(rango, sizeof(rango), "Ha establecido el interior del usuario %s a %d", giveplayer, idinterior);
				    	SendClientMessage(playerid, GRIS, rango);
					    format(rango, sizeof(rango), "El miembro del staff %s ha establecido su interior a %d", NombreEx(playerid), idinterior);
						SendClientMessage(receptor, GRIS, rango);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Lo siento, solo miembros del staff pueden Utilizar el comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/chatadmin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /chatadmin [Texto]");
				return 1;
			}
			if(Informacion[playerid][Admin] == 1)
			{
				format(rango, sizeof(rango), "{FFB18C}[ADMIN] Ayudante %s dice: {FFFFFF}%s", NombreEx(playerid), result);
				MensajeAdmin(BLANCO, rango);
			}
			else if(Informacion[playerid][Admin] == 2)
			{
				format(rango, sizeof(rango), "{FFB18C}[ADMIN] Moderador %s dice: {FFFFFF}%s", NombreEx(playerid), result);
				MensajeAdmin(BLANCO, rango);
			}
			else if(Informacion[playerid][Admin] == 3)
			{
				format(rango, sizeof(rango), "{FFB18C}[ADMIN] Moderador Global %s dice: {FFFFFF}%s", NombreEx(playerid), result);
				MensajeAdmin(BLANCO, rango);
			}
			else if(Informacion[playerid][Admin] == 4)
			{
				format(rango, sizeof(rango), "{FFB18C}[ADMIN] Administrador %s dice: {FFFFFF}%s", NombreEx(playerid), result);
				MensajeAdmin(BLANCO, rango);
			}
			else if(Informacion[playerid][Admin] == 1337)
			{
				format(rango, sizeof(rango), "{FFB18C}[ADMIN] Administrador Lider %s dice: {FFFFFF}%s", NombreEx(playerid), result);
				MensajeAdmin(BLANCO, rango);
			}
			else if(Informacion[playerid][Admin] == 1338)
			{
				format(rango, sizeof(rango), "{FFB18C}[ADMIN] Administrador General %s dice: {FFFFFF}%s", NombreEx(playerid), result);
				MensajeAdmin(BLANCO, rango);
			}
			else if(Informacion[playerid][Admin] == 1339)
			{
				format(rango, sizeof(rango), "{FFB18C}[ADMIN] Programador %s dice: {FFFFFF}%s", NombreEx(playerid), result);
				MensajeAdmin(BLANCO, rango);
			}
			printf("[CHATADMIN] %s: %s", NombreEx(playerid), result);
		}
		return 1;
	}
	if (strcmp(cmd, "/admins", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, AMARILLO, "	- Administradores Conectados -");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(Informacion[i][Admin] >= 1 && Informacion[i][Admin] < 1340)
				    {
				        new tadmin[64];
				        if(Informacion[i][Admin] == 1339) { tadmin = "Programador"; }
				        else if(Informacion[i][Admin] == 1338) { tadmin = "Administrador Lider"; }
				        else if(Informacion[i][Admin] == 1337) { tadmin = "Administrador Lider"; }
						else if(Informacion[i][Admin] == 4) { tadmin = "Administrador Avanzado"; }
						else if(Informacion[i][Admin] == 3) { tadmin = "Moderador Global"; }
						else if(Informacion[i][Admin] == 2) { tadmin = "Moderador"; }
						else if(Informacion[i][Admin] == 1) { tadmin = "Ayudante"; }
						else { tadmin = "Moderador Nivel 1"; }
						if(ServicioAdmin[i] == 0)
						{
						}
						else
						{
							new sendername[MAX_PLAYER_NAME];
							GetPlayerName(i, sendername, sizeof(sendername));
						    format(rango, 256, "[Disponible] %s: %s", tadmin, sendername);
							SendClientMessage(playerid, BLANCO, rango);
						}
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/megafono", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /Megafono [Texto]");
				return 1;
			}
			if(Informacion[playerid][Faccion] == 1)
			{
			    new rangolspd[64];
				if(Informacion[playerid][Rango] == 1) { rangolspd = "Cadete"; }
				else if(Informacion[playerid][Rango] == 2) { rangolspd = "Guardia civil"; }
				else if(Informacion[playerid][Rango] == 3) { rangolspd = "Oficial"; }
				else if(Informacion[playerid][Rango] == 4) { rangolspd = "Secretario"; }
				else if(Informacion[playerid][Rango] == 5) { rangolspd = "Coronel"; }
				else if(Informacion[playerid][Rango] == 6) { rangolspd = "Teniente"; }
				else if(Informacion[playerid][Rango] == 7) { rangolspd = "Sub-Jefe"; }
       			else if(Informacion[playerid][Rango] == 8) { rangolspd = "Comisario"; }
				format(rango, sizeof(rango), "[MEGAFONO] %s %s dice: {FFFFFF}%s", rangolspd, NombreEx(playerid), result);
				RangoCercano(60.0, playerid, rango, AMARILLO,AMARILLO,AMARILLO,AMARILLO,AMARILLO);
				printf("[MEGAFONO] %s", rango);
			}
			else if(Informacion[playerid][Faccion] == 2)
			{
			    new rangolspd[64];
				if(Informacion[playerid][Rango] == 1) { rangolspd = "Asistente"; }
				else if(Informacion[playerid][Rango] == 2) { rangolspd = "Medico Basico"; }
				else if(Informacion[playerid][Rango] == 3) { rangolspd = "Medico Avanzado"; }
				else if(Informacion[playerid][Rango] == 4) { rangolspd = "Medico Profesional"; }
				else if(Informacion[playerid][Rango] == 5) { rangolspd = "Secretario"; }
				else if(Informacion[playerid][Rango] == 6) { rangolspd = "Secretario Tecnico"; }
				else if(Informacion[playerid][Rango] == 7) { rangolspd = "Sub-Director"; }
       			else if(Informacion[playerid][Rango] == 8) { rangolspd = "Director"; }
				format(rango, sizeof(rango), "[MEGAFONO] %s %s dice: {FFFFFF}%s", rangolspd, NombreEx(playerid), result);
				RangoCercano(60.0, playerid, rango, AMARILLO,AMARILLO,AMARILLO,AMARILLO,AMARILLO);
				printf("[MEGAFONO] %s", rango);
			}
			else if(Informacion[playerid][Faccion] == 4)
			{
			    new rangolspd[64];
				if(Informacion[playerid][Rango] == 1) { rangolspd = "Chofer"; }
				else if(Informacion[playerid][Rango] == 2) { rangolspd = "Guardaespaldas"; }
				else if(Informacion[playerid][Rango] == 3) { rangolspd = "Politico"; }
				else if(Informacion[playerid][Rango] == 4) { rangolspd = "Senador"; }
				else if(Informacion[playerid][Rango] == 5) { rangolspd = "Asesor Cultural"; }
				else if(Informacion[playerid][Rango] == 6) { rangolspd = "Asesor Financiero"; }
				else if(Informacion[playerid][Rango] == 7) { rangolspd = "Vice-Presidente"; }
       			else if(Informacion[playerid][Rango] == 8) { rangolspd = "Presidente"; }
				format(rango, sizeof(rango), "[MEGAFONO] %s %s dice: {FFFFFF}%s", rangolspd, NombreEx(playerid), result);
				RangoCercano(60.0, playerid, rango, AMARILLO,AMARILLO,AMARILLO,AMARILLO,AMARILLO);
				printf("[MEGAFONO] %s", rango);
			}
			else if(Informacion[playerid][Faccion] == 13)
			{
			    new rangolspd[64];
				if(Informacion[playerid][Rango] == 1) { rangolspd = "Asistente"; }
				else if(Informacion[playerid][Rango] == 2) { rangolspd = "Bombero de Urgencias"; }
				else if(Informacion[playerid][Rango] == 3) { rangolspd = "Bombero Especial"; }
				else if(Informacion[playerid][Rango] == 4) { rangolspd = "Representante"; }
				else if(Informacion[playerid][Rango] == 5) { rangolspd = "Asesor"; }
				else if(Informacion[playerid][Rango] == 6) { rangolspd = "Secretario"; }
				else if(Informacion[playerid][Rango] == 7) { rangolspd = "Sub-Director"; }
       			else if(Informacion[playerid][Rango] == 8) { rangolspd = "Director"; }
				format(rango, sizeof(rango), "[MEGAFONO] %s %s dice: {FFFFFF}%s", rangolspd, NombreEx(playerid), result);
				RangoCercano(60.0, playerid, rango, AMARILLO,AMARILLO,AMARILLO,AMARILLO,AMARILLO);
				printf("[MEGAFONO] %s", rango);
			}
			else
			{
			    SendClientMessage(playerid, GRIS, "No eres miembro de LSPD, LSMD, Presidencia o Bomberos");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aservicio", true) == 0)
	{
        new stext[64];
        new stext2[64];
	    if(IsPlayerConnected(playerid))
	    {
		    if(Informacion[playerid][Admin] >= 1 && Informacion[playerid][Admin] < 1340)
		    {
				if(ServicioAdmin[playerid] == 0)
				{
					if(Informacion[playerid][Sexo] == 1)
					{
				        if(Informacion[playerid][Admin] == 1339) { stext = "Programador"; }
				        else if(Informacion[playerid][Admin] == 1338) { stext = "Administrador General"; }
						else if(Informacion[playerid][Admin] == 1337) { stext = "Administrador Lider"; }
						else if(Informacion[playerid][Admin] == 4) { stext = "Administrador Avanzado"; }
						else if(Informacion[playerid][Admin] == 3) { stext = "Moderador Global"; }
						else if(Informacion[playerid][Admin] == 2) { stext = "Moderador"; }
						else if(Informacion[playerid][Admin] == 1) { stext = "Ayudante"; }
						else { stext = "Moderador Nivel 1"; }
						
					    format(rango, 256, "* El %s %s esta de servicio para ofreserles soporte tecnico", stext, NombreEx(playerid));
						SendClientMessageToAll(VERDE, rango);
						SetPlayerColor(playerid, FLUOR);
						Informacion[playerid][Servicios] += 1;
						SetPlayerSkin(playerid, 217);
						ServicioAdmin[playerid] = 1;
					}
					else if(Informacion[playerid][Sexo] == 2)
					{
				        if(Informacion[playerid][Admin] == 1339) { stext2 = "Programadora"; }
				        else if(Informacion[playerid][Admin] == 1338) { stext2 = "Administradora General"; }
						else if(Informacion[playerid][Admin] == 1337) { stext2 = "Administradora Lider"; }
						else if(Informacion[playerid][Admin] == 4) { stext2 = "Administradora"; }
						else if(Informacion[playerid][Admin] == 3) { stext2 = "Moderadora Global"; }
						else if(Informacion[playerid][Admin] == 2) { stext2 = "Moderadora"; }
						else if(Informacion[playerid][Admin] == 1) { stext2 = "Ayudante"; }
						else { stext = "Moderador Nivel 1"; }
						format(rango, 256, "* La %s %s esta de servicio para ofreserles soporte tecnico", stext2, NombreEx(playerid));
						SendClientMessageToAll(VERDE, rango);
						SetPlayerColor(playerid, FLUOR);
						Informacion[playerid][Servicios] += 1;
						SetPlayerSkin(playerid, 211);
						ServicioAdmin[playerid] = 1;
						return 1;
					}
				}
				else
				{
					if(Informacion[playerid][Sexo] == 1)
					{
				        if(Informacion[playerid][Admin] == 1339) { stext = "Programador"; }
				        else if(Informacion[playerid][Admin] == 1338) { stext = "Administrador General"; }
						else if(Informacion[playerid][Admin] == 1337) { stext = "Administrador Lider"; }
						else if(Informacion[playerid][Admin] == 4) { stext = "Administrador Avanzado"; }
						else if(Informacion[playerid][Admin] == 3) { stext = "Moderador Global"; }
						else if(Informacion[playerid][Admin] == 2) { stext = "Moderador"; }
						else if(Informacion[playerid][Admin] == 1) { stext = "Ayudante"; }
						else { stext = "Moderador Nivel 1"; }
     				    format(rango, 256, "* El %s %s esta de fuera servicio para ofreserles soporte tecnico", stext, NombreEx(playerid));
						SendClientMessageToAll(ROJO, rango);
						SetPlayerColor(playerid, SINCOLOR);
						SetPlayerSkin(playerid, Informacion[playerid][Skin]);
						ServicioAdmin[playerid] = 0;
					}
					else if(Informacion[playerid][Sexo] == 2)
					{
				        if(Informacion[playerid][Admin] == 1339) { stext2 = "Programadora"; }
				        else if(Informacion[playerid][Admin] == 1338) { stext2 = "Administradora General"; }
						else if(Informacion[playerid][Admin] == 1337) { stext2 = "Administradora Lider"; }
						else if(Informacion[playerid][Admin] == 4) { stext2 = "Administradora"; }
						else if(Informacion[playerid][Admin] == 3) { stext2 = "Moderadora Global"; }
						else if(Informacion[playerid][Admin] == 2) { stext2 = "Moderadora"; }
						else if(Informacion[playerid][Admin] == 1) { stext2 = "Ayudante"; }
						else { stext2 = "Moderador Nivel 1"; }
					    format(rango, 256, "* La %s %s esta fuera de servicio para ofreserles soporte tecnico", stext2, NombreEx(playerid));
						SendClientMessageToAll(ROJO, rango);
						SetPlayerColor(playerid, SINCOLOR);
						SetPlayerSkin(playerid, Informacion[playerid][Skin]);
						ServicioAdmin[playerid] = 0;
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mensajeprivado", true) == 0 || strcmp(cmd, "/mp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /mensajeprivado [ID] [Texto]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, DORADO, "Utiliza: /mensajeprivado [ID] [Texto]");
						return 1;
					}
                    for(new A = 0; A <MAX_PLAYERS;A++)
					{
						format(rango, sizeof(rango), "{006F81}[MP] {FFFFFF}(%d) %s dice: %s", playerid, NombreEx(playerid), (result));
						SendClientMessage(giveplayerid, BLANCO, rango);
						format(rango, sizeof(rango), "{006F81}[MP] {FFFFFF}(%d) %s dice: %s", giveplayerid, giveplayer, (result));
						SendClientMessage(playerid,  BLANCO, rango);
						return 1;
					}
				}
			}
			else
			{
				format(rango, sizeof(rango), "Jugador desconectado");
				SendClientMessage(playerid, GRIS, rango);
			}
 		 }
		return 1;
	}
	if(strcmp(cmd, "/susurrar", true) == 0 || strcmp(cmd, "/s", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /g [Texto]");
				return 1;
			}
			if(Mascara[playerid] == 1)
			{
				format(rango, sizeof(rango), "Desconocido susurra: %s", result);
			}
			else
			{
				format(rango, sizeof(rango), "%s susurra: %s", NombreEx(playerid), result);
			}
			RangoCercano(30.0, playerid, rango, 0xFF1485FF,0xFF1485FF,0xFF1485FF,0xFF1485FF,0xFF1485FF);
			printf("[SUSSURO] %s", rango);
		}
		return 1;
	}
	if(strcmp(cmd, "/gritar", true) == 0 || strcmp(cmd, "/g", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /g [Texto]");
				return 1;
			}
			if(Mascara[playerid] == 1)
			{
				format(rango, sizeof(rango), "Desconocido grita: %s!!", result);
			}
			else
			{
				format(rango, sizeof(rango), "%s grita: %s", NombreEx(playerid), result);
			}
			RangoCercano(30.0, playerid, rango, BLANCO,BLANCO,BLANCO,BLANCO,BLANCO);
			printf("[GRITO] %s", rango);
		}
		return 1;
	}
	if(strcmp(cmd, "/booc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (Informacion[playerid][Admin] >= 1 && (!oocbloqueado))
			{
				oocbloqueado = 1;
				SendClientMessageToAll(AMARILLO, "Canal OOC /o desativado");
			}
			else if (Informacion[playerid][Admin] >= 1 && (oocbloqueado))
			{
				oocbloqueado = 0;
				SendClientMessageToAll(AMARILLO, "Canal OOC /o activado");
			}
			else
			{
				SendClientMessage(playerid, GRIS, "Solo miembros del staff pueden Utilizar este comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ooc", true) == 0 || strcmp(cmd, "/o", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if((oocbloqueado) && Informacion[playerid][Admin] < 1)
			{
				SendClientMessage(playerid, GRIS, "Canal global OOC esta desactivado");
				return 1;
			}
			
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /o: [Texto OOC]");
				SendClientMessage(playerid, BLANCO, "Recuerda que este canal es solo para dudas");
				return 1;
			}
			if(Informacion[playerid][Admin] == 0)
			{
				format(rango, sizeof(rango),"{FF977E}[GOOC] Usuario %s dice: {FFFFFF}%s",NombreEx(playerid), result);
				SendClientMessageToAll(0xFF977EFF,rango);
				printf("[GOOC] %s",rango);
			}
			if(Informacion[playerid][Admin] == 1)
			{
				format(rango, sizeof(rango),"{FF977E}[GOOC] Ayudante %s dice: {FFFFFF}%s",NombreEx(playerid), result);
				SendClientMessageToAll(0xFF977EFF,rango);
				printf("[GOOC] %s",rango);
			}
			if(Informacion[playerid][Admin] == 2)
			{
				format(rango, sizeof(rango),"{FF977E}[GOOC] Moderador %s dice: {FFFFFF}%s",NombreEx(playerid), result);
				SendClientMessageToAll(0xFF977EFF,rango);
				printf("[GOOC] %s",rango);
			}
			if(Informacion[playerid][Admin] == 3)
			{
				format(rango, sizeof(rango),"{FF977E}[GOOC] Moderador global %s dice: {FFFFFF}%s",NombreEx(playerid), result);
				SendClientMessageToAll(0xFF977EFF,rango);
				printf("[GOOC] %s",rango);
			}
			if(Informacion[playerid][Admin] == 4)
			{
				format(rango, sizeof(rango),"{FF977E}[GOOC] Administrador %s dice: {FFFFFF}%s",NombreEx(playerid), result);
				SendClientMessageToAll(0xFF977EFF,rango);
				printf("[GOOC] %s",rango);
			}
			if(Informacion[playerid][Admin] == 1337)
			{
				format(rango, sizeof(rango),"{FF977E}[GOOC] Administrador Avanzado %s dice: {FFFFFF}%s",NombreEx(playerid), result);
				SendClientMessageToAll(0xFF977EFF,rango);
				printf("[GOOC] %s",rango);
			}
			if(Informacion[playerid][Admin] == 1338)
			{
				format(rango, sizeof(rango),"{FF977E}[GOOC] Administrador General %s dice: {FFFFFF}%s",NombreEx(playerid), result);
				SendClientMessageToAll(0xFF977EFF,rango);
				printf("[GOOC] %s",rango);
			}
			if(Informacion[playerid][Admin] == 1339)
			{
				format(rango, sizeof(rango),"{FF977E}[GOOC] Programador %s dice: {FFFFFF}%s",NombreEx(playerid), result);
				SendClientMessageToAll(0xFF977EFF,rango);
				printf("[GOOC] %s",rango);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/b", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /b [Texto OOC]");
				return 1;
			}
			format(rango, sizeof(rango), "{3B840A}(OOC) %s dice: {FFFFFF}(( %s ))", NombreEx(playerid), result);
			RangoCercano(20.0, playerid, rango, BLANCO,BLANCO,BLANCO,BLANCO,BLANCO);
			printf("[OOC] %s", rango);
		}
		return 1;
	}
	if(strcmp(cmd, "/pagar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /pagar [ID] [Valor]");
				return 1;
			}
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /pagar [ID] [Valor]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys > 1000 && Informacion[playerid][Nivel] < 3)
			{
				SendClientMessage(playerid, GRIS, "No puedes superar los $1000 hasta no tener nivel 3");
				return 1;
			}
			if(moneys < 1 || moneys > 10000)
			{
			    SendClientMessage(playerid, GRIS, "Error, el valor minimo es 1 y el valor maximo es 10000");
			    return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(RangoCercanoS(5.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, GRIS, "Error, no puedes auto rolear un pago");
					        return 1;
					    }
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						
						playermoney = GetPlayerMoney(playerid);
						if(moneys > 0 && playermoney >= moneys)
						{
    					   PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							format(rango, sizeof(rango), "Has pagado a %s $%d", giveplayer, moneys);
							SendClientMessage(playerid, AMARILLO, rango);
							GivePlayerMoney(playerid, -moneys);
							GivePlayerMoney(giveplayerid, moneys);
							format(rango, sizeof(rango), "Has recibido $%d del usuario %s", moneys, NombreEx(playerid));
							SendClientMessage(giveplayerid, AMARILLO, rango);
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
							new year, month,day;
							getdate(year, month, day);
							format(rango, sizeof(rango), "Emisor: %s | Receptor: %s | %d/%d/%d | Dinero: %s |",NombreEx(playerid) ,giveplayer, day, month, year, moneys);
				    		LPagos(rango);
						}
						else
						{
							SendClientMessage(playerid, GRIS, "   Importe de la transacci�n no valido.");
						}
					}
					else
					{
						SendClientMessage(playerid, GRIS, "   Estas demasiado lejos.");
					}
				}
			}
			else
			{
				format(rango, sizeof(rango), "Jugador desconectado!");
				SendClientMessage(playerid, GRIS, rango);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/me", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /me [Accion]");
				return 1;
			}
			format(rango, sizeof(rango), "* %s %s", NombreEx(playerid), result);
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			printf("%s", rango);
		}
		return 1;
	}
	if(strcmp(cmd, "/do", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /do [Accion]");
				return 1;
			}
			format(rango, sizeof(rango), "* %s [%d]", result, playerid);
			RangoCercano(30.0, playerid, rango, AMARILLO,AMARILLO,AMARILLO,AMARILLO,AMARILLO);
			printf("%s", rango);
		}
		return 1;
	}
	if(strcmp(cmd, "/intentar", true) == 0)
	{
		new rango1[256];
		if(IsPlayerConnected(playerid))
	    {
			
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, DORADO, "Utiliza: /intentar [Accion]");
				return 1;
			}
			new randa = random(2)+1;
		    if(randa == 1) format(rango, sizeof(rango), "* %s intenta %s y lo logra", NombreEx(playerid), result);
			else format(rango1, sizeof(rango), "* %s intenta %s, pero a fallado", NombreEx(playerid), result);
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			printf("%s", rango);
		}
		return 1;
	}
	return SendClientMessage(playerid, GRIS, "El comando que esta intentando Utilizar no es correcto, Utiliza /ayuda para guiarte");
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new rango[256];
    new vehiculo = GetPlayerVehicleID(playerid);
  	if(PRESSED(KEY_FIRE))
    {
        if(Informacion[playerid][Faccion] == BOMB)
		{
			CheckFire(playerid);
			return 1;
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
	    for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if(EstaConCamara[playerid] == 1)
			{
				SetCameraBehindPlayer(playerid);
			    EstaConCamara[playerid] = 0;
			    return 1;
			}
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
				if(Informacion[playerid][Casa] == i || HouseInfo[i][hLock] == 0)
				{
					SetPlayerInterior(playerid,HouseInfo[i][hInt]);
					SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
					SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
					GameTextForPlayer(playerid, "~w~Bienvenido a Casa", 5000, 1);
					Informacion[playerid][Interior] = HouseInfo[i][hInt];
					HouseEntered[playerid] = i;
				}
				else
				{
					GameTextForPlayer(playerid, "~r~Cerrado", 5000, 1);
				}
			}
		}
		for(new i = 0; i < sizeof(BizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
			{
				if(Informacion[playerid][Negocio] == i || GetPlayerMoney(playerid) >= BizzInfo[i][bEntranceCost])
				{
					if(Informacion[playerid][Negocio] != i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							GameTextForPlayer(playerid, "~r~Cerrado", 5000, 1);
							return 1;
						}
						if(GetPlayerMoney(playerid) < BizzInfo[i][bEntranceCost])
						{
						    GameTextForPlayer(playerid, "~r~No tienes suficiente dinero", 5000, 1);
							return 1;
						}
						GivePlayerMoney(playerid,-BizzInfo[i][bEntranceCost]);
						format(rango, sizeof(rango), "~r~-$%d~n~~w~Usa /salir~n~para salir", BizzInfo[i][bEntranceCost]);
						BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
						ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
						BizzInfo[i][bProducts]--;
						OnPropUpdate();
						GameTextForPlayer(playerid, rango, 5000, 3);
					}
					SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
					SetPlayerVirtualWorld(playerid, BizzInfo[i][bVirtualWorld]);
					SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
					Informacion[playerid][Interior] = BizzInfo[i][bInterior];
					Informacion[playerid][MundoVirtual] = BizzInfo[i][bVirtualWorld];
					new dood[MAX_PLAYER_NAME];
					GetPlayerName(playerid, dood, sizeof(dood));
					format(rango, sizeof(rango), "%s pago $%d para entrar al negocio %d", dood, BizzInfo[i][bEntranceCost], i);
					printf("%s", rango);
				}
				else
				{
					GameTextForPlayer(playerid, "~r~No tienes dinero", 5000, 1);
				}
			}
		}
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
			{
				if(Informacion[playerid][Negocio] == i || GetPlayerMoney(playerid) >= SBizzInfo[i][sbEntranceCost])
				{
					if(Informacion[playerid][Negocio] != i)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
							GameTextForPlayer(playerid, "~r~Cerrado", 5000, 1);
							return 1;
						}
						GivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
						gSpentCash[playerid] = GetPlayerMoney(playerid);
						GivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
						SBizzInfo[i][sbProducts]--;
						SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
						ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(rango, sizeof(rango), "%s pago $%d para entrar al negocio %d", dood, SBizzInfo[i][sbEntranceCost], i);
						printf("%s", rango);
						OnPropUpdate();
					}
				}
				else
				{
					GameTextForPlayer(playerid, "~r~No tienes dinero", 5000, 1);
				}
			}
		}

		for(new i = 0; i <  sizeof(HouseInfo); i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
			    if(HouseEntered[playerid] == i)
			    {
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
					Informacion[playerid][Interior] = 0;
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid,0);
					HouseEntered[playerid] = 255;
					if(HouseInfo[i][hHel] == 1)
					{
						new Float:tempheal;
						GetPlayerHealth(playerid,tempheal);
						if(tempheal < 100.0)
						{
							SetPlayerHealth(playerid,100.0);
						}
					}
					return 1;
				}
			}
		}
		for(new i = 0; i <  sizeof(BizzInfo); i++)
		{
			if (PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]) && (GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld]))
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				Informacion[playerid][Interior] = 0;
				SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
			}
		}
	}
	if(newkeys == KEY_SUBMISSION)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        if(PrendiendoM[playerid] == 0)
	        {
	     		GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
		        if(engine == VEHICLE_PARAMS_OFF)
		        {
		            format(rango, sizeof(rango), "* %s inserta la llave, la gira e intenta encender el motor del vehiculo.", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("MotorOn",3000, 0, "d", playerid);
		        	PrendiendoM[playerid] = 1;
		        }
	        }
	        if(engine == VEHICLE_PARAMS_ON)
	        {
	            format(rango, sizeof(rango), "* %s retira la llave del vehiculo y apaga el motor. ", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	        	SetVehicleParamsEx(vehiculo, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective);
				DestroyObject(glob6590[playerid]);
				DestroyObject(glob6D60[playerid]);
				DestroyObject(glob7530[playerid]);
				DestroyObject(glob7D00[playerid]);
				globD2F0[playerid][3] = 0;
			 }
	        else if(engine == VEHICLE_PARAMS_UNSET)
	        {
	            format(rango, sizeof(rango), "* %s inserta la llave, la gira y intenta encender el motor del vehiculo.", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	        	SetTimerEx("MotorOn",3000, 0, "d", playerid);
	        }
		}
		return 1;
	}
	if(newkeys == KEY_CROUCH)
	{
	    pmodelovehiculo[playerid] = GetVehicleModel(pidvehiculo[playerid]);
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(Informacion[playerid][Faccion] == LSPD)
			{
				if(IsPlayerInRangeOfPoint(playerid, 30, 1547.0392,-1628.0483,13.3828))
			    {
					MoveObject(GLSPD, 1547.53088379,-1636.20544434,16.29679298, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s hace sonar el claxon y abre la entrada del garage", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGLSPD",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == LSMD)
			{
				if(IsPlayerInRangeOfPoint(playerid, 30, 1140.8390,-1294.1318,13.5789))
			    {
					MoveObject(GLSMD, 1151.57812500,-1292.49853516,15.35996437, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s hace sonar el claxon y abre la entrada del garage", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGLSMD",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == TAXI)
			{
				if(IsPlayerInRangeOfPoint(playerid, 30, 1811.7795,-1889.8457,13.4141))
			    {
					MoveObject(GTAXI, 1811.55664062,-1890.03515625,9.23062325, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s hace sonar el claxon y abre la entrada del garage", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGTAXI",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == LEON)
			{
				if(IsPlayerInRangeOfPoint(playerid, 30, 1245.0332,-766.5474,92.1519))
			    {
					MoveObject(GLEON, 1245.53125000,-767.15820312,87.42285156, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s hace sonar el claxon y abre la entrada del garage", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGLEON",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == YAKU)
			{
				if(IsPlayerInRangeOfPoint(playerid, 30, 321.8201,-1188.4755,76.3538))
			    {
					MoveObject(GYAKU, 321.48535156,-1188.23828125,69.01891327, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s hace sonar el claxon y abre la entrada del garage", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGYAKU",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == BOMB)
			{
				if(IsPlayerInRangeOfPoint(playerid, 30, 1283.96740723,-1652.19982910,16.46085548))
			    {
					MoveObject(GBOMB, 1283.94677734,-1642.28100586,16.46085548, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s hace sonar el claxon y abre la entrada del garage", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGBOMB",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == LSTV)
			{
				if(IsPlayerInRangeOfPoint(playerid, 30, 778.0123,-1329.4872,13.5469))
			    {
					MoveObject(GLSTV, 778.07519531,-1330.68164062,9.24721527, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s hace sonar el claxon y abre la entrada del garage", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGLSTV",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == MECA || Informacion[playerid][Asociado] == 1)
			{
				if(IsPlayerInRangeOfPoint(playerid, 30, 2424.1807,-2088.5610,13.5469))
			    {
					MoveObject(GMECA, 2424.49365234,-2078.55468750,15.32026672, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s hace sonar el claxon y abre la entrada del garage", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGMECA",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == AVION)
			{
				if(IsPlayerInRangeOfPoint(playerid, 30, 1961.5072,-2189.7322,13.5469))
			    {
					MoveObject(GAERO1, 1953.55078125,-2189.59643555,13.59685898, 3);
					MoveObject(GAERO2, 1969.26623535,-2189.95263672,13.59687424, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto el garage del aeropuerto , se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s hace sonar el claxon y abre la entrada del garage", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGAERO",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == LSPD)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2, 246.3927,72.4562,1003.6406))
			    {
					MoveObject(GPLSPD1, 244.09387207,72.42253876,1003.76940918, 3);
					MoveObject(GPLSPD2, 248.69767761,72.51971436,1003.76940918, 3);
					SendClientMessage(playerid, AMARILLO, "Has abierto la puerta del departamento , se cierra automaticamente en 7 segundos");
					format(rango, sizeof(rango), "* %s pasa su cartet por la identificadora y abre la puerta", NombreEx(playerid));
		            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
					SetTimerEx("TGPLSPD",7000, 0, "d", playerid);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == FBI)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2, 1405.7219,-1505.3215,13.3696))
			    {
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2502.3108,2383.3223,4.0174);
					return 1;
				}
			}
			if(Informacion[playerid][Faccion] == FBI)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2, 2500.9536,2376.0530,4.0240))
			    {
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar,1400.9447,-1503.6588,13.3878);
					return 1;
				}
			}
		}
		return 1;
	}
	if(newkeys == KEY_FIRE)
	{
		if(Informacion[playerid][Faccion] == LSPD)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, 1547.0392,-1628.0483,13.3828))
		    {
				MoveObject(GLSPD, 1547.53088379,-1636.20544434,16.29679298, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s preciona el boton y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGLSPD",7000, 0, "d", playerid);
				return 1;
			}
		}
		if(Informacion[playerid][Faccion] == BOMB)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, 1283.96740723,-1652.19982910,16.46085548))
		    {
				MoveObject(GBOMB, 1283.94677734,-1642.28100586,16.46085548, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s preciona el boton y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGBOMB",7000, 0, "d", playerid);
				return 1;
			}
		}
		if(Informacion[playerid][Faccion] == LSMD)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, 1140.8390,-1294.1318,13.5789))
		    {
				MoveObject(GLSMD, 1151.57812500,-1292.49853516,15.35996437, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s preciona el boton y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGLSMD",7000, 0, "d", playerid);
				return 1;
			}
		}
		if(Informacion[playerid][Faccion] == TAXI)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, 1811.7795,-1889.8457,13.4141))
		    {
				MoveObject(GTAXI, 1811.55664062,-1890.03515625,9.23062325, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s preciona el boton y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGTAXI",7000, 0, "d", playerid);
				return 1;
			}
		}
		if(Informacion[playerid][Faccion] == LEON)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, 1245.0332,-766.5474,92.1519))
		    {
				MoveObject(GLEON, 1245.53125000,-767.15820312,87.42285156, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s preciona el boton y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGLEON",7000, 0, "d", playerid);
				return 1;
			}
		}
		if(Informacion[playerid][Faccion] == YAKU)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, 321.8201,-1188.4755,76.3538))
		    {
				MoveObject(GYAKU, 321.48535156,-1188.23828125,69.01891327, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s preciona el boton y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGYAKU",7000, 0, "d", playerid);
				return 1;
			}
		}
		if(Informacion[playerid][Faccion] == LSTV)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, 778.0123,-1329.4872,13.5469))
		    {
				MoveObject(GLSTV, 778.07519531,-1330.68164062,9.24721527, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s preciona el boton y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGLSTV",7000, 0, "d", playerid);
				return 1;
			}
		}
		if(Informacion[playerid][Faccion] == MECA || Informacion[playerid][Asociado] == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, 2424.1807,-2088.5610,13.5469))
		    {
				MoveObject(GMECA, 2424.49365234,-2078.55468750,15.32026672, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto el garage de tu facci�n, se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s preciona el boton y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGMECA",7000, 0, "d", playerid);
				return 1;
			}
		}
		if(Informacion[playerid][LVuelo] == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, 1961.5072,-2189.7322,13.5469))
		    {
				MoveObject(GAERO1, 1953.55078125,-2189.59643555,13.59685898, 3);
				MoveObject(GAERO2, 1969.26623535,-2189.95263672,13.59687424, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto el garage del aereopuerto , se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s preciona el boton y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGAERO",7000, 0, "d", playerid);
				return 1;
			}
		}
		if(Informacion[playerid][Faccion] == LSPD)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2, 246.3927,72.4562,1003.6406))
		    {
				MoveObject(GPLSPD1, 244.09387207,72.42253876,1003.76940918, 3);
				MoveObject(GPLSPD2, 248.69767761,72.51971436,1003.76940918, 3);
				SendClientMessage(playerid, AMARILLO, "Has abierto la puerta del departamento , se cierra automaticamente en 7 segundos");
				format(rango, sizeof(rango), "* %s pasa su cartet por la identificadora y abre la puerta", NombreEx(playerid));
	            RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetTimerEx("TGPLSPD",7000, 0, "d", playerid);
				return 1;
			}
		}
		return 1;
	}
	if(newkeys == KEY_SPRINT)
    {
    	if(IsPlayerConnected(playerid))
		{
				if(ProcesoRegistracion[playerid] == 1)
		        {
			    	if(ProcesandoRegistro[playerid] == 1)
       				{
       				    TogglePlayerControllable(playerid, 0);
					    TextDrawSetString(R_SEXO[playerid], "~g~Sexo: ~w~<Femenino>");
					    TextDrawShowForPlayer(playerid,R_SEXO[playerid]);
					    ProcesandoRegistro[playerid] = 2;
					    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					    SetPlayerSkin(playerid, 93);
					    Informacion[playerid][Skin] = 93;
					    return 1;
					}
					else if(ProcesandoRegistro[playerid] == 2)
			        {
					    TextDrawSetString(R_SEXO[playerid], "~g~Sexo: ~w~<Masculino>");
					    TextDrawShowForPlayer(playerid,R_SEXO[playerid]);
					    ProcesandoRegistro[playerid] = 1;
					    SetPlayerSkin(playerid, 26);
					    PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
					    Informacion[playerid][Skin] = 93;
					}
				}
				if(ProcesoRegistracion[playerid] == 2)
		        {
						Informacion[playerid][Edad] += 1;
		            	format(rango, sizeof(rango), "~g~Edad: ~w~<%d>", Informacion[playerid][Edad]);
					    TextDrawSetString(R_EDAD[playerid], rango);
					    TextDrawShowForPlayer(playerid,R_EDAD[playerid]);
				}
				if(ProcesoRegistracion[playerid] == 3)
		    	{
		    	        if(ProcesandoRegistro[playerid] == 10)
			        	{
							{
							    TextDrawSetString(R_ORIGEN[playerid], "~g~Origen: ~w~<America Latina>");
							    TextDrawShowForPlayer(playerid,R_ORIGEN[playerid]);
							    ProcesandoRegistro[playerid] = 11;
							    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		   						Informacion[playerid][Origen] = 1;
							    SetPlayerSkin(playerid, 26);
								Informacion[playerid][Skin] = 26;
							}
					    }
						else if(ProcesandoRegistro[playerid] == 11)
			        	{
							{
							    TextDrawSetString(R_ORIGEN[playerid], "~g~Origen: ~w~<America Anglosajona>");
							    TextDrawShowForPlayer(playerid,R_ORIGEN[playerid]);
							    ProcesandoRegistro[playerid] = 12;
							    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		   						Informacion[playerid][Origen] = 2;
							}
					    }
						else if(ProcesandoRegistro[playerid] == 12)
			        	{
							{
							    TextDrawSetString(R_ORIGEN[playerid], "~g~Origen: ~w~<Europa>");
							    TextDrawShowForPlayer(playerid,R_ORIGEN[playerid]);
							    ProcesandoRegistro[playerid] = 13;
							    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		   						Informacion[playerid][Origen] = 3;
							}
					    }
						else if(ProcesandoRegistro[playerid] == 13)
			        	{
							{
							    TextDrawSetString(R_ORIGEN[playerid], "~g~Origen: ~w~<Asia>");
							    TextDrawShowForPlayer(playerid,R_ORIGEN[playerid]);
							    ProcesandoRegistro[playerid] = 10;
		   						Informacion[playerid][Origen] = 4;
					    }
					}
				}
			}
		}
	if(newkeys == KEY_CROUCH)
	{
    	if(IsPlayerConnected(playerid))
		{
				if(ProcesoRegistracion[playerid] == 2)
		        {
						Informacion[playerid][Edad] -= 1;
		            	format(rango, sizeof(rango), "~g~Edad: ~w~<%d>", Informacion[playerid][Edad]);
					    TextDrawSetString(R_EDAD[playerid], rango);
					    TextDrawShowForPlayer(playerid,R_EDAD[playerid]);
				}
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
		// -= Entradas =-
		if(IsPlayerInRangeOfPoint(playerid, 3, 1263.3521,-1676.1047,13.5469))
	    {
	        SetPlayerPos(playerid, 238.7139,139.5321,1003.0234); // - Bomberos
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1213.4414,-1670.0020,27.3676))
	    {
	        SetPlayerPos(playerid, 288.7538,167.7373,1007.1719); // - Bomberos
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1352.4213,-1758.7109,13.5078))
	    {
	        SetPlayerPos(playerid, -25.9507,-187.6105,1003.5469); // - 24/7 [1]
			SetPlayerInterior(playerid, 17);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1833.1284,-1842.5874,13.5781))
	    {
	        SetPlayerPos(playerid, 6.1464,-30.7665,1003.5494); // - 24/7 [2]
			SetPlayerInterior(playerid, 10);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1315.5564,-898.5164,39.5781))
	    {
	        SetPlayerPos(playerid, -30.9129,-91.4246,1003.5469); // - 24/7 [3]
			SetPlayerInterior(playerid, 18);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1298.4131,-798.9086,84.1406))
	    {
	        SetPlayerPos(playerid, 1298.8813,-796.4567,1084.0078); // - Familia Corleone [Principal]
			SetPlayerInterior(playerid, 5);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1258.2306,-785.4032,92.0302))
	    {
	        SetPlayerPos(playerid, 1261.3333,-785.3632,1091.9063); // - Familia Corleone [Azotea]
			SetPlayerInterior(playerid, 5);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1554.9537,-1675.6584,16.1953))
	    {
	        SetPlayerPos(playerid, 246.7079,66.2239,1003.6406); // - LSPD [Principal]
			SetPlayerInterior(playerid, 6);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1564.8254,-1666.3079,28.3956))
	    {
	        SetPlayerPos(playerid, 258.1533,86.5789,1002.4453); // - LSPD [Azotea]
			SetPlayerInterior(playerid, 6);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1568.6674,-1690.6655,5.8906))
	    {
	        SetPlayerPos(playerid, 258.1533,86.5789,1002.4453); // - LSPD [Garage]
			SetPlayerInterior(playerid, 6);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1481.0988,-1771.4312,18.7958))
	    {
	        SetPlayerPos(playerid, 389.6705,173.1553,1008.3828); // - Ayuntamiento [Principal]
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1436.8595,-1790.3291,35.8175))
	    {
	        SetPlayerPos(playerid, 371.0816,160.9684,1025.7891); // - Ayuntamiento [Azotea]
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1419.6393,-1553.6603,13.5616))
	    {
	        SetPlayerPos(playerid, 357.9872,216.7553,1008.3828); // - FBI [Principal]
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2488.1157,2397.3484,4.2109))
	    {
	        SetPlayerPos(playerid, 367.7486,193.4661,1008.3828); // - FBI [Garage]
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1836.3481,-1682.4355,13.3517))
	    {
	        SetPlayerPos(playerid, 493.4309,-24.3261,1000.6797); // - Discoteca
			SetPlayerInterior(playerid, 17);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2309.9385,-1643.6752,14.8270))
	    {
	        SetPlayerPos(playerid, 501.9595,-68.0340,998.7578); // - The Green Bottles
			SetPlayerInterior(playerid, 11);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 648.4557,-1356.7407,13.5670))
	    {
			if(DobleInterior[playerid] == 0)
			{
			    SetPlayerPos(playerid, 246.3645,108.1332,1003.2188); // - LSTV [Principal]
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 3, 733.3624,-1348.0914,13.5105))
	    {
			if(DobleInterior[playerid] == 0)
			{
				SetPlayerPos(playerid, 218.5256,126.1456,999.6924); // - LSTV [Garage]
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 3, 953.9430,-1336.3042,13.5389))
	    {
	        SetPlayerPos(playerid, -100.4243,-24.5154,1000.7188); // - Tienda Porno
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 928.4583,-1353.0142,13.3438))
	    {
	        SetPlayerPos(playerid, 365.0107,-10.9408,1001.8516); // - Cluckin Bell
			SetPlayerInterior(playerid, 9);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 810.9510,-1616.2068,13.5469))
	    {
	        SetPlayerPos(playerid, 363.3454,-74.9236,1001.5078); // - Burger Shot
			SetPlayerInterior(playerid, 10);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2104.3845,-1806.4637,13.5547))
	    {
	        SetPlayerPos(playerid, 372.2942,-133.1127,1001.4922); // - Pizza Stack
			SetPlayerInterior(playerid, 5);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1368.0337,-1279.7286,13.5469))
	    {
	        SetPlayerPos(playerid, 285.4373,-41.0108,1001.5156); // - Ammu-Nation
			SetPlayerInterior(playerid, 1);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2229.2268,-1721.9786,13.5680))
	    {
	        SetPlayerPos(playerid, 772.1720,-4.7048,1000.7286); // - Gantom Gim
			SetPlayerInterior(playerid, 5);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1022.4944,-1121.7538,23.8718))
	    {
	        SetPlayerPos(playerid, 2018.5682,1017.8448,996.8750); // - Casino
			SetPlayerInterior(playerid, 10);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1028.5026,-1104.3176,23.8281))
	    {
	        SetPlayerPos(playerid, 1489.3328,-1721.7786,8.2106); // - Mercado Negro
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1497.1619,-1584.3033,13.8838))
	    {
	        SetPlayerPos(playerid, 1415.1652,-988.9828,1639.7843+1); // - Banco
			SetPlayerInterior(playerid, 1);
		    TogglePlayerControllable(playerid, CONGELADO);
			SetTimerEx("CargandoMap", 1500, false, "idd", playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3, 1772.9438,-1655.1816,14.4278))
	    {
	        SetPlayerPos(playerid, -2027.4482,-104.3967,1035.1719); // - Licencieros
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, -2030.0032,-118.9545,1035.1719))
	    {
	        SetPlayerPos(playerid, -1994.2268,-63.2064,1028.9183); // - Licencieros 2
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2612.2029,-1397.5227,35.0267))
	    {
	        SetPlayerPos(playerid, 2577.2373,-1289.8438,1044.1250); // - Crack Place
			SetPlayerInterior(playerid, 2);
			Pickup1 = CreatePickup(1239, 23, 2529.0439,-1285.0314,1048.2891, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, -2030.0032,-118.9545,1035.1719))
	    {
	        SetPlayerPos(playerid, -1994.2268,-63.2064,1028.9183); // - Licencieros 2
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1172.6755,-1323.4456,15.4022))
	    {
	        SetPlayerPos(playerid, 367.0448,162.1540,1019.9844); // - Hospital
			SetPlayerInterior(playerid, 3);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3, 364.6920,186.1605,1019.9844))
	    {
	        SetPlayerPos(playerid, 309.9743,1855.3894,7.7266); // - Laboratorio
        	SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1144.3009,-1320.8773,13.5951))
	    {
	        SetPlayerPos(playerid, 264.8723,1857.8157,8.7578); // - Garage ft Laboratorio
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1161.7417,-1329.5791,31.4940))
	    {
	        SetPlayerPos(playerid, 268.7224,1864.7826,8.6094); // - Azotea ft Laboratorio
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 300.2188,-1154.4270,81.3907))
	    {
	        SetPlayerPos(playerid, 2317.6460,-1026.1372,1050.2178); // - Yakuza
			SetPlayerInterior(playerid, 9);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1759.1277,-1894.0408,13.5558))
	    {
	        SetPlayerPos(playerid, 2523.3921,-1285.8868,1054.6406); // - Taxi 1
			SetPlayerInterior(playerid, 2);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2537.5044,-1297.3079,1054.6406))
	    {
	        SetPlayerPos(playerid, 2542.8289,-1300.3031,1062.7042); // - Taxi 2
			SetPlayerInterior(playerid, 2);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1797.9889,-1578.7135,14.0900))
	    {
			DobleInterior[playerid] = 1;
		    SetPlayerPos(playerid, 246.3338,107.9727,1003.2188); // - Departamento de Propiedades
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 1);
		}
		// -= Salidas =-
		if(IsPlayerInRangeOfPoint(playerid, 3, 238.7139,139.5321,1003.0234))
	    {
	        SetPlayerPos(playerid, 1263.3521,-1676.1047,13.5469); // - Bomberos
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 288.7538,167.7373,1007.1719))
	    {
	        SetPlayerPos(playerid, 1213.4414,-1670.0020,27.3676); // - Bomberos
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1415.1652,-988.9828,1639.7843))
	    {
	        SetPlayerPos(playerid, 1497.1619,-1584.3033,13.8838); // - Banco
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1489.3328,-1721.7786,8.2106))
	    {
	        SetPlayerPos(playerid, 1028.5026,-1104.3176,23.8281); // - Mercado Negro
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2018.5682,1017.8448,996.8750))
	    {
	        SetPlayerPos(playerid, 1022.4944,-1121.7538,23.8718); // - Casino
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, -25.9507,-187.6105,1003.5469))
	    {
	        SetPlayerPos(playerid, 1352.4213,-1758.7109,13.5078); // - 24/7 [1]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 6.1464,-30.7665,1003.5494))
	    {
	        SetPlayerPos(playerid, 1833.1284,-1842.5874,13.5781); // - 24/7 [2]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, -30.9129,-91.4246,1003.5469))
	    {
	        SetPlayerPos(playerid, 1315.5564,-898.5164,39.5781); // - 24/7 [3]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1298.8813,-796.4567,1084.0078))
	    {
	        SetPlayerPos(playerid, 1298.4131,-798.9086,84.1406); // - Familia Corleone [Principal]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 1261.3333,-785.3632,1091.9063))
	    {
	        SetPlayerPos(playerid, 1258.2306,-785.4032,92.0302); // - Familia Corleone [Azotea]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 246.7079,66.2239,1003.6406))
	    {
	        SetPlayerPos(playerid, 1554.9537,-1675.6584,16.1953); // - LSPD [Principal]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 389.6705,173.1553,1008.3828))
	    {
	        SetPlayerPos(playerid, 1481.0988,-1771.4312,18.7958); // - Ayuntamiento [Principal]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 371.0816,160.9684,1025.7891))
	    {
	        SetPlayerPos(playerid, 1436.8595,-1790.3291,35.8175); // - Ayuntamiento [Azotea]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 357.9872,216.7553,1008.3828))
	    {
	        SetPlayerPos(playerid, 1419.6393,-1553.6603,13.5616); // - FBI [Principal]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 367.7486,193.4661,1008.3828))
	    {
	        SetPlayerPos(playerid, 2488.1157,2397.3484,4.2109); // - FBI [Garage]
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 493.4309,-24.3261,1000.6797))
	    {
	        SetPlayerPos(playerid, 1836.3481,-1682.4355,13.3517); // - Discoteca
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 501.9595,-68.0340,998.7578))
	    {
	        SetPlayerPos(playerid, 2309.9385,-1643.6752,14.8270); // - The Green Bottles
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 246.3645,108.1332,1003.2188))
	    {
			if(DobleInterior[playerid] == 0)
			{
				DobleInterior[playerid] = 0;
			    SetPlayerPos(playerid, 648.4557,-1356.7407,13.5670); // - LSTV [Principal]
				SetPlayerInterior(playerid, 0);
				return 1;
			}
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 218.5256,126.1456,999.6924))
	    {
	        SetPlayerPos(playerid, 733.3624,-1348.0914,13.5105); // - LSTV [Garage]
			SetPlayerInterior(playerid, 0);
			DobleInterior[playerid] = 0;
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, -100.4243,-24.5154,1000.7188))
	    {
	        SetPlayerPos(playerid, 953.9430,-1336.3042,13.5389); // - Tienda Porno
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 365.0107,-10.9408,1001.8516))
	    {
	        SetPlayerPos(playerid, 928.4583,-1353.0142,13.3438); // - Cluckin Bell
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 363.3454,-74.9236,1001.5078))
	    {
	        SetPlayerPos(playerid, 810.9510,-1616.2068,13.5469); // - Burger Shot
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 372.2942,-133.1127,1001.4922))
	    {
	        SetPlayerPos(playerid, 2104.3845,-1806.4637,13.5547); // - Pizza Stack
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 285.4373,-41.0108,1001.5156))
	    {
	        SetPlayerPos(playerid, 1368.0337,-1279.7286,13.5469); // - Ammu-Nation
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 772.1720,-4.7048,1000.7286))
	    {
	        SetPlayerPos(playerid, 2229.2268,-1721.9786,13.5680); // - Gantom Gim
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, -2027.4482,-104.3967,1035.1719))
	    {
	        SetPlayerPos(playerid, 1772.9438,-1655.1816,14.4278); // - Licencieros
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, -1994.2268,-63.2064,1028.9183))
	    {
	        SetPlayerPos(playerid, -2030.0032,-118.9545,1035.1719); // - Licencieros 2
			SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 367.0448,162.1540,1019.9844))
	    {
	        SetPlayerPos(playerid, 1172.6755,-1323.4456,15.4022); // - Hospital
			SetPlayerInterior(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 3, 309.9743,1855.3894,7.7266))
	    {
	        SetPlayerPos(playerid, 364.6920,186.1605,1019.9844); // - Laboratorio
        	SetPlayerInterior(playerid, 3);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 264.8723,1857.8157,8.7578))
	    {
	        SetPlayerPos(playerid, 1144.3009,-1320.8773,13.5951); // - Garage ft Laboratorio
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 268.7224,1864.7826,8.6094))
	    {
	        SetPlayerPos(playerid, 1161.7417,-1329.5791,31.4940); // - Azotea ft Laboratorio
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2317.6460,-1026.1372,1050.2178))
	    {
	        SetPlayerPos(playerid, 300.2188,-1154.4270,81.3907); // - Yakuza
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2523.3921,-1285.8868,1054.6406))
	    {
	        SetPlayerPos(playerid, 1759.1277,-1894.0408,13.5558); // - Taxi 1 
			SetPlayerInterior(playerid, 0);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 2542.8289,-1300.3031,1062.7042))
	    {
	        SetPlayerPos(playerid, 2537.5044,-1297.3079,1054.6406); // - Taxi 2
			SetPlayerInterior(playerid, 2);
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3, 246.3338,107.9727,1003.2188))
	    {
			if(DobleInterior[playerid] == 1)
			{
				DobleInterior[playerid] = 0;
			    SetPlayerPos(playerid, 1797.9889,-1578.7135,14.0900); // - Departamento de Propiedades
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 3, 2577.2373,-1289.8438,1044.1250))
	    {
			if(InicioYFinialCrack[playerid] == 1)
			{
			    SendClientMessage(playerid, GRIS, "Al salir del local has dejado de fabricar");
			    InicioYFinialCrack[playerid] = 0;
				ProcesoFabricacion[playerid] = 0;
				return 1;
			}
		    SetPlayerPos(playerid, 2612.2029,-1397.5227,35.0267); // - Crack Place
			SetPlayerInterior(playerid, 0);
	    }
	}
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
    	if(IsPlayerConnected(playerid))
		{

			if(ProcesoRegistracion[playerid] == 1)
		    {
			    	if(ProcesandoRegistro[playerid] == 1)
			        {
				        Informacion[playerid][Sexo] = 1;
					    TextDrawSetString(R_SEXO[playerid], "~g~Sexo: ~w~<Masculino>");
					    ProcesoRegistracion[playerid] = 2;
					    Informacion[playerid][Edad] = 10;
					    return 0;
				    }
	            	else if(ProcesandoRegistro[playerid] == 2)
	                {
		                Informacion[playerid][Sexo] = 2;
					    TextDrawSetString(R_SEXO[playerid], "~g~Sexo: ~w~<Femenino>");
					    ProcesoRegistracion[playerid] = 2;
					    Informacion[playerid][Edad] = 10;
					    ProcesoRegistracion[playerid] = 2;
					    ProcesandoRegistro[playerid] = 3;
					    return 0;
				    }
			}
			else if(ProcesoRegistracion[playerid] == 2)
			{
				format(rango, sizeof(rango), "~g~Edad: ~w~<%d>",Informacion[playerid][Edad]);
				TextDrawSetString(R_EDAD[playerid], rango);
				ProcesoRegistracion[playerid] = 3;
				ProcesandoRegistro[playerid] = 10;
				return 0;
			}
			else if(ProcesoRegistracion[playerid] == 3)
			{
					LimpiarChat(playerid, 10);
				    TextDrawHideForPlayer(playerid, R_Fondo);
				    TextDrawHideForPlayer(playerid, R_Logo);
				    TextDrawHideForPlayer(playerid, R_SEXO[playerid]);
				    TextDrawHideForPlayer(playerid, R_EDAD[playerid]);
				    TextDrawHideForPlayer(playerid, R_ORIGEN[playerid]);
				    TextDrawHideForPlayer(playerid, R_STAR);
					SendClientMessage(playerid, AMARILLO, "Sus datos fueron guardados satisfactoriamente, espere 5 segundos mientras almacenamos su cuenta en nuestra base de datos as� procederemos a mostrarte el tutorial.");
					Informacion[playerid][Registrado] = 1;
					ProcesoRegistracion[playerid] = 0;
			    	ProcesandoRegistro[playerid] = 0;
			    	SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid,1560.4172,-1342.1643,283.0024);
					SetPlayerCameraPos(playerid, 1577.3784,-1349.6071,355.6653);
					SetPlayerCameraLookAt(playerid, 1521.8372,-1489.0099,74.2890);
					ShowPlayerDialog(playerid, Terminos, DIALOG_STYLE_MSGBOX, "- Terminos y Condiciones","Reglas y Pautas principales:\n\n1| No realizar Deathmath\n2| No realizar Metagaming\n3| No realizar powergaming\n4| No realizar Bunny Hops\n6| No realizar Car Jacking\n7| respetar a los administradores\n8| Respetar a los usuarios\n9| No orientar al uso de pornografia\n10| No descriminar tanto sexual como racialmente\n11| No insultarse OOC, ni menos hacer negocios","Acepto","No Acepto");
					return 1;
				}
        	}
		}
   	return 1;
}

public OnVehicleDeath(vehicleid)
{
	Rentado[vehicleid] = 0;
	Rentable[vehicleid] = 1;
	new Float:xpos,Float:ypos,Float:zpos;
    GetVehiclePos(vehicleid, xpos, ypos , zpos);
	O_FIRE_1 = CreateObject(18690, xpos + 2.0, ypos, zpos - 2.0, 0, 0, 0, 300.0);
    O_FIRE_2 = CreateObject(18690, xpos + 4.1, ypos+ 1.3, zpos - 2.0, 0, 0, 0, 300.0);
    O_FIRE_3 = CreateObject(18690, xpos + 6.4, ypos + 4.0, zpos - 2.0, 0, 0, 0, 300.0);
    O_FIRE_4 = CreateObject(18690, xpos + 2.8, ypos - 6.0, zpos - 2.0, 0, 0, 0, 300.0);
    O_FIRE_5 = CreateObject(18690, xpos + 9.0, ypos- 1.2, zpos - 2.0, 0, 0, 0, 300.0);
    O_FIRE_6 = CreateObject(18690, xpos + 12.0, ypos- 1.2, zpos - 2.0, 0, 0, 0, 300.0);
    O_FIRE_7 = CreateObject(18690, xpos - 6.0, ypos- 1.2, zpos - 3.0, 0, 0, 0, 300.0);
    O_FIRE_8 = CreateObject(18690, xpos + 4.0, ypos- 1.2, zpos - 2.0, 0, 0, 0, 300.0);
    O_FIRE_9 = CreateObject(18690, xpos + 26.0, ypos- 8.2, zpos - 2.0, 0, 0, 0, 300.0);
    O_FIRE_10 = CreateObject(18690, xpos, ypos- 1.2, zpos - 2.0, 0, 0, 0, 300.0);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(Informacion[i][Faccion] == BOMB)
		{
		    SetPlayerMapIcon(i, FIRE_POS_MARKER ,xpos, ypos , zpos, 41, 0, MAPICON_GLOBAL);
		    MensajeBOMB(ROJOFUERTE, "{AA3333}[ALERTA] Se ha detectado un incendio, la posicion ha sido marcada en el GPS");
			return 1;
		}
		if(Informacion[i][VRentado] == vehicleid)
		{
			Informacion[i][VRentado] = 0;
			Informacion[i][HeRentado] = 0;
			Informacion[i][VRentado2] = 0;
			Informacion[i][HeRentado2] = 0;
			SendClientMessage(i, ROJO, "SERVER: Tu coche ha explotado y se ha auto-desrentado para evitar bug.");
			return 1;
		}
	}
	return 1;
}

public OnPlayerConnect(playerid)
{
	CargarDatos(playerid);
 	TutTime[playerid] = 0;
	SetPlayerColor(playerid, SINCOLOR);
	TransportValue[playerid] = 0;
	TransportMoney[playerid] = 0;
	TransportTime[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = 999;
	EstaConCamara[playerid] = 0;
	Espiando[playerid] = 0;
	if(Informacion[playerid][Faccion] == LICE)
	{
	    Profesores += 1;
	}
	Linea[playerid] = 255;
	PlayerTazeTime[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	EstaAtado[playerid] = 0;
 	EstaVendado[playerid] = 0;
    IdiomaEstudiado[playerid] = 0;
	ViendoTele[playerid] = 0;
	TicketOffer[playerid] = 0;
	TicketMoney[playerid] = 0;
	OfertaCoche[playerid] = 999;
	PrecioCoche[playerid] = 0;
	IDcCoche[playerid] = 9999;
	Mascara[playerid] = 0;
 	Venda[playerid] = 0;
 	Cuerda[playerid] = 0;
	ServicioAdmin[playerid] = 0;
	NoKick[playerid] = 0;
	NoBan[playerid] = 0;
	Refuerzos[playerid] = 0;
	EnServicio[playerid] = 0;
	Informacion[playerid][VRentado] = 0;
	Informacion[playerid][HeRentado] = 0;
	Informacion[playerid][VRentado2] = 0;
	Informacion[playerid][HeRentado2] = 0;
	BotIdentificado[playerid] = 0;
	Hospitalizado[playerid] = 0;
	Conteo[playerid] = 220;
	EstaConteando[playerid] = 0;
	ServicioLSMD[playerid] = 0;
	Informacion[playerid][Esposado] = 0;
	Arrestado[playerid] = 0;
	EnLeccion[playerid] = 0;
	Reproduciendo[playerid] = 0;
    NumeroAzar[playerid] = 0;
	ProcesoFabricacion[playerid] = 0;
	EstaDrogado[playerid] = 0;
	EstaDrogadoConAdrenalina[playerid] = 0;
	globD2F0[playerid][0] = 0;
	globD2F0[playerid][1] = 0;
	globD2F0[playerid][2] = 0;
	globD2F0[playerid][3] = 0;
	globD2F0[playerid][4] = 0;
	globD2F0[playerid][5] = 0;
	globD2F0[playerid][6] = 0;
	ConexionEntrante[playerid] = 1;
	EstaConTraje[playerid] = 0;
	RepairOffer[playerid] = 999;
	RepairPrice[playerid] = 0;
	Autorizado[playerid] = 0;
	EstaProtegido[playerid] = 0;
	PlayerBomba[playerid] = 0;
    DobleInterior[playerid] = 0;
	SpawnChange[playerid] = 1;
	DarPintura[playerid] = 0;
	GanzuaOferta[playerid] = 999;
	GanzuaPrecio[playerid] = 0;
	GanzuaCantidad[playerid] = 0;
	PlayerLocalizado[playerid] = 9999;
	PlayerLocalizando[playerid] = 0;
	GuardOffer[playerid] = 999;
	GuardPrice[playerid] = 0;
	TalkingLive[playerid] = 255;
	LiveOffer[playerid] = 999;
	ConsumingMoney[playerid] = 0;

	new rango[256];
	format(rango, sizeof(rango), "- El usuario %s ha ingresado al servidor, ID: %d", NombreEx(playerid), playerid);
    MensajeAdmin(GRIS, rango);
	if (IsPlayerNPC(playerid))
	{
		Informacion[playerid][Faccion] = 223;
		SpawnPlayer(playerid);
		return 1;
	}
	if(Informacion[playerid][Bloqueado] == 1)
	{
	    SendClientMessage(playerid, ROJO, "Lo siento, usted esta baneado del servidor, para desbanearte visita nuestra web");
	    SendClientMessage(playerid, BLANCO, "http://127.0.0.1/, habla con un moderador, administrador o programador del servidor");
		Informacion[playerid][Bloqueado] = 1;
		Ban(playerid);
		return 1;
	}
	TextDrawAlignment(Tutorial[1][playerid],2);
	Tutorial[0][playerid] = TextDrawCreate(321.000000,66.000000,"Binco de LS");
	Tutorial[1][playerid] = TextDrawCreate(316.000000,99.000000,"En el binco podras cambiar tus ropas iniciales");
	Tutorial[2][playerid] = TextDrawCreate(316.000000,114.000000,"Podras cambiar tus ropas usando /ropas");
	Tutorial[3][playerid] = TextDrawCreate(321.000000,131.000000,"Recuerda que tambien la vestimensta tiene su precio");
	TextDrawAlignment(Tutorial[0][playerid],2);
	TextDrawAlignment(Tutorial[1][playerid],2);
	TextDrawAlignment(Tutorial[2][playerid],2);
	TextDrawAlignment(Tutorial[3][playerid],2);
	TextDrawBackgroundColor(Tutorial[0][playerid],0x000000ff);
	TextDrawBackgroundColor(Tutorial[1][playerid],0x000000ff);
	TextDrawBackgroundColor(Tutorial[2][playerid],0x000000ff);
	TextDrawBackgroundColor(Tutorial[3][playerid],0x000000ff);
	TextDrawFont(Tutorial[0][playerid],0);
	TextDrawLetterSize(Tutorial[0][playerid],0.899999,2.499999);
	TextDrawFont(Tutorial[1][playerid],2);
	TextDrawLetterSize(Tutorial[1][playerid],0.299999,1.600000);
	TextDrawFont(Tutorial[2][playerid],2);
	TextDrawLetterSize(Tutorial[2][playerid],0.299999,1.700000);
	TextDrawFont(Tutorial[3][playerid],2);
	TextDrawLetterSize(Tutorial[3][playerid],0.299999,1.700000);
	TextDrawColor(Tutorial[0][playerid],0xffffffff);
	TextDrawColor(Tutorial[1][playerid],0xffffffff);
	TextDrawColor(Tutorial[2][playerid],0xffffffff);
	TextDrawColor(Tutorial[3][playerid],0xffffffff);
	TextDrawSetOutline(Tutorial[0][playerid],1);
	TextDrawSetOutline(Tutorial[1][playerid],1);
	TextDrawSetOutline(Tutorial[2][playerid],1);
	TextDrawSetOutline(Tutorial[3][playerid],1);
	TextDrawSetProportional(Tutorial[0][playerid],1);
	TextDrawSetProportional(Tutorial[1][playerid],1);
	TextDrawSetProportional(Tutorial[2][playerid],1);
	TextDrawSetProportional(Tutorial[3][playerid],1);
	TextDrawSetShadow(Tutorial[0][playerid],1);
	TextDrawSetShadow(Tutorial[1][playerid],1);
	TextDrawSetShadow(Tutorial[2][playerid],1);
	TextDrawSetShadow(Tutorial[3][playerid],1);

	txtTimeDisp = TextDrawCreate(605.0,25.0,"00:00");
	TextDrawUseBox(txtTimeDisp, 0);
	TextDrawFont(txtTimeDisp, 3);
	TextDrawSetShadow(txtTimeDisp,0);
    TextDrawSetOutline(txtTimeDisp,2);
    TextDrawBackgroundColor(txtTimeDisp,0x000000FF);
    TextDrawColor(txtTimeDisp,0xFFFFFFFF);
    TextDrawAlignment(txtTimeDisp,3);
	TextDrawLetterSize(txtTimeDisp,0.5,1.5);

	CF_FONDO = TextDrawCreate(628.000000,130.000000,"a");
	CF_TITULO = TextDrawCreate(464.000000,131.000000,"~y~ -= ~w~Propiedades ~y~=-");
	CF_TEXTO[playerid] = TextDrawCreate(438.000000,162.000000,"~g~Propietario: ~w~Osama_BinLaden ~n~~g~Nivel: ~W~100 ~n~~g~Clase: ~w~Alta ~g~~n~Kits: ~w~Desactivado");
	TextDrawUseBox(CF_FONDO,1);
	TextDrawBoxColor(CF_FONDO,0x00000066);
	TextDrawTextSize(CF_FONDO,430.000000,0.000000);
	TextDrawAlignment(CF_FONDO,0);
	TextDrawAlignment(CF_TITULO,0);
	TextDrawAlignment(CF_TEXTO[playerid],0);
	TextDrawBackgroundColor(CF_FONDO,0x000000ff);
	TextDrawBackgroundColor(CF_TITULO,0x000000ff);
	TextDrawBackgroundColor(CF_TEXTO[playerid],0x000000ff);
	TextDrawFont(CF_FONDO,3);
	TextDrawLetterSize(CF_FONDO,-0.000000,9.999984);
	TextDrawFont(CF_TITULO,2);
	TextDrawLetterSize(CF_TITULO,0.299999,1.400000);
	TextDrawFont(CF_TEXTO[playerid],2);
	TextDrawLetterSize(CF_TEXTO[playerid],0.199999,1.200001);
	TextDrawColor(CF_FONDO,0xffffffff);
	TextDrawColor(CF_TITULO,0xffffffff);
	TextDrawColor(CF_TEXTO[playerid],0xffffffff);
	TextDrawSetOutline(CF_FONDO,1);
	TextDrawSetOutline(CF_TITULO,1);
	TextDrawSetOutline(CF_TEXTO[playerid],1);
	TextDrawSetProportional(CF_FONDO,1);
	TextDrawSetProportional(CF_TITULO,1);
	TextDrawSetProportional(CF_TEXTO[playerid],1);
	TextDrawSetShadow(CF_FONDO,1);
	TextDrawSetShadow(CF_TITULO,1);
	TextDrawSetShadow(CF_TEXTO[playerid],1);

	CO_FONDO = TextDrawCreate(628.000000,130.000000,"a");
	CO_TITULO = TextDrawCreate(464.000000,131.000000,"~y~ -= ~w~Propiedades ~y~=-");
	CO_TEXTO[playerid] = TextDrawCreate(438.000000,162.000000,"~w~Esta Casa ~g~esta en venta~n~~w~contacta con un vendedor");
	TextDrawUseBox(CO_FONDO,1);
	TextDrawBoxColor(CO_FONDO,0x00000066);
	TextDrawTextSize(CO_FONDO,430.000000,0.000000);
	TextDrawAlignment(CO_FONDO,0);
	TextDrawAlignment(CO_TITULO,0);
	TextDrawAlignment(CO_TEXTO[playerid],0);
	TextDrawBackgroundColor(CO_FONDO,0x000000ff);
	TextDrawBackgroundColor(CO_TITULO,0x000000ff);
	TextDrawBackgroundColor(CO_TEXTO[playerid],0x000000ff);
	TextDrawFont(CO_FONDO,3);
	TextDrawLetterSize(CO_FONDO,-0.000000,8.699991);
	TextDrawFont(CO_TITULO,2);
	TextDrawLetterSize(CO_TITULO,0.299999,1.400000);
	TextDrawFont(CO_TEXTO[playerid],2);
	TextDrawLetterSize(CO_TEXTO[playerid],0.199999,1.200001);
	TextDrawColor(CO_FONDO,0xffffffff);
	TextDrawColor(CO_TITULO,0xffffffff);
	TextDrawColor(CO_TEXTO[playerid],0xffffffff);
	TextDrawSetOutline(CO_FONDO,1);
	TextDrawSetOutline(CO_TITULO,1);
	TextDrawSetOutline(CO_TEXTO[playerid],1);
	TextDrawSetProportional(CO_FONDO,1);
	TextDrawSetProportional(CO_TITULO,1);
	TextDrawSetProportional(CO_TEXTO[playerid],1);
	TextDrawSetShadow(CO_FONDO,1);
	TextDrawSetShadow(CO_TITULO,1);
	TextDrawSetShadow(CO_TEXTO[playerid],1);

	EAdrenalina = TextDrawCreate(641.000000,-1.000000,"a");
	TextDrawUseBox(EAdrenalina,1);
	TextDrawBoxColor(EAdrenalina,0xffffff33);
	TextDrawTextSize(EAdrenalina,-30.000000,23.000000);
	TextDrawAlignment(EAdrenalina,0);
	TextDrawBackgroundColor(EAdrenalina,0x000000ff);
	TextDrawFont(EAdrenalina,3);
	TextDrawLetterSize(EAdrenalina,-0.000000,50.699981);
	TextDrawColor(EAdrenalina,0xffffffff);
	TextDrawSetOutline(EAdrenalina,1);
	TextDrawSetProportional(EAdrenalina,1);
	TextDrawSetShadow(EAdrenalina,1);

	DrogaRosa = TextDrawCreate(642.000000,1.000000,"a");
	TextDrawUseBox(DrogaRosa,1);
	TextDrawBoxColor(DrogaRosa,0xff00ff33);
	TextDrawTextSize(DrogaRosa,0.000000,0.000000);
	TextDrawAlignment(DrogaRosa,0);
	TextDrawBackgroundColor(DrogaRosa,0x000000ff);
	TextDrawFont(DrogaRosa,3);
	TextDrawLetterSize(DrogaRosa,1.000000,52.799980);
	TextDrawColor(DrogaRosa,0xffffffff);
	TextDrawSetOutline(DrogaRosa,1);
	TextDrawSetProportional(DrogaRosa,1);
	TextDrawSetShadow(DrogaRosa,1);

	DrogaRoja = TextDrawCreate(642.000000,1.000000,"a");
	TextDrawUseBox(DrogaRoja,1);
	TextDrawBoxColor(DrogaRoja,0xff000066);
	TextDrawTextSize(DrogaRoja,0.000000,0.000000);
	TextDrawAlignment(DrogaRoja,0);
	TextDrawBackgroundColor(DrogaRoja,0x000000ff);
	TextDrawFont(DrogaRoja,3);
	TextDrawLetterSize(DrogaRoja,1.000000,52.799980);
	TextDrawColor(DrogaRoja,0xffffffff);
	TextDrawSetOutline(DrogaRoja,1);
	TextDrawSetProportional(DrogaRoja,1);
	TextDrawSetShadow(DrogaRoja,1);

	DrogaVerde = TextDrawCreate(642.000000,1.000000,"a");
	TextDrawUseBox(DrogaVerde,1);
	TextDrawBoxColor(DrogaVerde,0x00ff0033);
	TextDrawTextSize(DrogaVerde,0.000000,0.000000);
	TextDrawAlignment(DrogaVerde,0);
	TextDrawBackgroundColor(DrogaVerde,0x000000ff);
	TextDrawFont(DrogaVerde,3);
	TextDrawLetterSize(DrogaVerde,1.000000,52.799980);
	TextDrawColor(DrogaVerde,0xffffffff);
	TextDrawSetOutline(DrogaVerde,1);
	TextDrawSetProportional(DrogaVerde,1);
	TextDrawSetShadow(DrogaVerde,1);

    DrogaAzul = TextDrawCreate(642.000000,1.000000,"a");
	TextDrawUseBox(DrogaAzul,1);
	TextDrawBoxColor(DrogaAzul,0x0000ff33);
	TextDrawTextSize(DrogaAzul,0.000000,0.000000);
	TextDrawAlignment(DrogaAzul,0);
	TextDrawBackgroundColor(DrogaAzul,0x000000ff);
	TextDrawFont(DrogaAzul,3);
	TextDrawLetterSize(DrogaAzul,1.000000,52.799980);
	TextDrawColor(DrogaAzul,0xffffffff);
	TextDrawSetOutline(DrogaAzul,1);
	TextDrawSetProportional(DrogaAzul,1);
	TextDrawSetShadow(DrogaAzul,1);

	DrogaAmarilla = TextDrawCreate(642.000000,1.000000,"a");
	TextDrawUseBox(DrogaAmarilla,1);
	TextDrawBoxColor(DrogaAmarilla,0xffff0033);
	TextDrawTextSize(DrogaAmarilla,0.000000,0.000000);
	TextDrawAlignment(DrogaAmarilla,0);
	TextDrawBackgroundColor(DrogaAmarilla,0x000000ff);
	TextDrawFont(DrogaAmarilla,3);
	TextDrawLetterSize(DrogaAmarilla,1.000000,52.799980);
	TextDrawColor(DrogaAmarilla,0xffffffff);
	TextDrawSetOutline(DrogaAmarilla,1);
	TextDrawSetProportional(DrogaAmarilla,1);
	TextDrawSetShadow(DrogaAmarilla,1);

    DrogaCeleste = TextDrawCreate(642.000000,1.000000,"a");
	TextDrawUseBox(DrogaCeleste,1);
	TextDrawBoxColor(DrogaCeleste,0x00ffff33);
	TextDrawTextSize(DrogaCeleste,0.000000,0.000000);
	TextDrawAlignment(DrogaCeleste,0);
	TextDrawBackgroundColor(DrogaCeleste,0x000000ff);
	TextDrawFont(DrogaCeleste,3);
	TextDrawLetterSize(DrogaCeleste,1.000000,52.799980);
	TextDrawColor(DrogaCeleste,0xffffffff);
	TextDrawSetOutline(DrogaCeleste,1);
	TextDrawSetProportional(DrogaCeleste,1);
	TextDrawSetShadow(DrogaCeleste,1);

	E_FONDO = TextDrawCreate(370.000000,352.000000,"a");
	E_NOMBRE[playerid] = TextDrawCreate(177.000000,356.000000,"~g~Usuario: ~w~German_Lockard");
	E_TEXTO1[playerid] = TextDrawCreate(176.000000,381.000000,"~g~Hambre: ~w~100 ~n~~g~Higiene: ~w~100 ~n~~g~Comodidad: ~w~100 ~n~~g~Cansancio: ~w~100 ~n~~g~Diversion: ~w~100");
	E_TEXTO2[playerid] = TextDrawCreate(260.000000,381.000000,"~g~Inteligencia: ~w~100 ~n~~g~Estado Fisico: ~w~100~n~~g~Hidratacion: ~w~100~n~~g~Amigos: ~w~100~n~~g~Apariencia: ~w~100");
	E_AVISO[playerid] = TextDrawCreate(173.000000,429.000000,"~g~+100 ~w~Inteligencia");
	TextDrawUseBox(E_FONDO,1);
	TextDrawBoxColor(E_FONDO,0x00000033);
	TextDrawTextSize(E_FONDO,166.000000,1.000000);
	TextDrawAlignment(E_FONDO,0);
	TextDrawAlignment(E_NOMBRE[playerid],0);
	TextDrawAlignment(E_TEXTO1[playerid],0);
	TextDrawAlignment(E_TEXTO2[playerid],0);
	TextDrawAlignment(E_AVISO[playerid],0);
	TextDrawBackgroundColor(E_FONDO,0x000000ff);
	TextDrawBackgroundColor(E_NOMBRE[playerid],0x000000ff);
	TextDrawBackgroundColor(E_TEXTO1[playerid],0x000000ff);
	TextDrawBackgroundColor(E_TEXTO2[playerid],0x000000ff);
	TextDrawBackgroundColor(E_AVISO[playerid],0x000000ff);
	TextDrawFont(E_FONDO,2);
	TextDrawLetterSize(E_FONDO,-0.000000,9.899999);
	TextDrawFont(E_NOMBRE[playerid],2);
	TextDrawLetterSize(E_NOMBRE[playerid],0.199999,1.000000);
	TextDrawFont(E_TEXTO1[playerid],2);
	TextDrawLetterSize(E_TEXTO1[playerid],0.199999,1.000000);
	TextDrawFont(E_TEXTO2[playerid],2);
	TextDrawLetterSize(E_TEXTO2[playerid],0.199999,1.000000);
	TextDrawFont(E_AVISO[playerid],1);
	TextDrawLetterSize(E_AVISO[playerid],0.299999,1.200000);
	TextDrawColor(E_FONDO,0xffffffff);
	TextDrawColor(E_NOMBRE[playerid],0xffffffff);
	TextDrawColor(E_TEXTO1[playerid],0xffffffff);
	TextDrawColor(E_TEXTO2[playerid],0xffffffff);
	TextDrawColor(E_AVISO[playerid],0xffffffff);
	TextDrawSetOutline(E_FONDO,1);
	TextDrawSetOutline(E_NOMBRE[playerid],1);
	TextDrawSetOutline(E_TEXTO1[playerid],1);
	TextDrawSetOutline(E_TEXTO2[playerid],1);
	TextDrawSetOutline(E_AVISO[playerid],1);
	TextDrawSetProportional(E_FONDO,1);
	TextDrawSetProportional(E_NOMBRE[playerid],1);
	TextDrawSetProportional(E_TEXTO1[playerid],1);
	TextDrawSetProportional(E_TEXTO2[playerid],1);
	TextDrawSetProportional(E_AVISO[playerid],1);
	TextDrawSetShadow(E_FONDO,1);
	TextDrawSetShadow(E_NOMBRE[playerid],1);
	TextDrawSetShadow(E_TEXTO1[playerid],1);
	TextDrawSetShadow(E_TEXTO2[playerid],1);
	TextDrawSetShadow(E_AVISO[playerid],1);
	
	M_FONDO = TextDrawCreate(452.000000,310.000000,"asdf");
	M_IDE = TextDrawCreate(249.000000,310.000000,"~y~ -= ~w~San Andreas ~y~=-");
	M_TEXTO[playerid] = TextDrawCreate(237.000000,342.000000,"999-999-9");
	TextDrawUseBox(M_FONDO,1);
	TextDrawBoxColor(M_FONDO,0x00000066);
	TextDrawTextSize(M_FONDO,199.000000,0.000000);
	TextDrawAlignment(M_FONDO,0);
	TextDrawAlignment(M_IDE,0);
	TextDrawAlignment(M_TEXTO[playerid],0);
	TextDrawBackgroundColor(M_FONDO,0x000000ff);
	TextDrawBackgroundColor(M_IDE,0x000000ff);
	TextDrawBackgroundColor(M_TEXTO[playerid],0x000000ff);
	TextDrawFont(M_FONDO,3);
	TextDrawLetterSize(M_FONDO,-0.000000,9.899991);
	TextDrawFont(M_IDE,0);
	TextDrawLetterSize(M_IDE,0.499999,1.700000);
	TextDrawFont(M_TEXTO[playerid],3);
	TextDrawLetterSize(M_TEXTO[playerid],1.000000,2.800002);
	TextDrawColor(M_FONDO,0xffffffff);
	TextDrawColor(M_IDE,0xffffffff);
	TextDrawColor(M_TEXTO[playerid],0xffffffff);
	TextDrawSetOutline(M_FONDO,1);
	TextDrawSetOutline(M_IDE,1);
	TextDrawSetOutline(M_TEXTO[playerid],1);
	TextDrawSetProportional(M_FONDO,1);
	TextDrawSetProportional(M_IDE,1);
	TextDrawSetProportional(M_TEXTO[playerid],1);
	TextDrawSetShadow(M_FONDO,1);
	TextDrawSetShadow(M_IDE,1);
	TextDrawSetShadow(M_TEXTO[playerid],1);
	
 	Conteo0 = TextDrawCreate(635.000000,158.000000,"a");
	Conteo1 = TextDrawCreate(478.000000,157.000000,"~y~-= ~w~CodeSystem v1.0 ~y~=-");
	Conteo2 = TextDrawCreate(506.000000,178.000000,"Codificando...");
	Conteo3[playerid] = TextDrawCreate(523.000000,196.000000,"220");
	TextDrawUseBox(Conteo0,1);
	TextDrawBoxColor(Conteo0,0x00000066);
	TextDrawTextSize(Conteo0,464.000000,90.000000);
	TextDrawAlignment(Conteo0,0);
	TextDrawAlignment(Conteo1,0);
	TextDrawAlignment(Conteo2,0);
	TextDrawAlignment(Conteo3[playerid],0);
	TextDrawBackgroundColor(Conteo0,0x000000ff);
	TextDrawBackgroundColor(Conteo1,0x000000ff);
	TextDrawBackgroundColor(Conteo2,0x000000ff);
	TextDrawBackgroundColor(Conteo3[playerid],0x000000ff);
	TextDrawFont(Conteo0,3);
	TextDrawLetterSize(Conteo0,-0.000000,8.999996);
	TextDrawFont(Conteo1,2);
	TextDrawLetterSize(Conteo1,0.299999,1.300000);
	TextDrawFont(Conteo2,2);
	TextDrawLetterSize(Conteo2,0.299999,1.300000);
	TextDrawFont(Conteo3[playerid],1);
	TextDrawLetterSize(Conteo3[playerid],0.699999,2.699999);
	TextDrawColor(Conteo0,0xffffffff);
	TextDrawColor(Conteo1,0xffffffff);
	TextDrawColor(Conteo2,0xff0000ff);
	TextDrawColor(Conteo3[playerid],0xffffffff);
	TextDrawSetOutline(Conteo0,1);
	TextDrawSetOutline(Conteo1,1);
	TextDrawSetOutline(Conteo2,1);
	TextDrawSetOutline(Conteo3[playerid],1);
	TextDrawSetProportional(Conteo0,1);
	TextDrawSetProportional(Conteo1,1);
	TextDrawSetProportional(Conteo2,1);
	TextDrawSetProportional(Conteo3[playerid],1);
	TextDrawSetShadow(Conteo0,1);
	TextDrawSetShadow(Conteo1,1);
	TextDrawSetShadow(Conteo2,1);
	TextDrawSetShadow(Conteo3[playerid],1);

    Nivel1[playerid] = TextDrawCreate(591.000000,100.000000,"~y~]");
	TextDrawAlignment(Nivel1[playerid],0);
	TextDrawBackgroundColor(Nivel1[playerid],0x000000ff);
	TextDrawFont(Nivel1[playerid],0);
	TextDrawLetterSize(Nivel1[playerid],0.499999,1.900000);
	TextDrawColor(Nivel1[playerid],0xffffffff);
	TextDrawSetOutline(Nivel1[playerid],1);
	TextDrawSetProportional(Nivel1[playerid],1);
	TextDrawSetShadow(Nivel1[playerid],1);

	R_Fondo = TextDrawCreate(528.000000,354.000000,"a");
	R_Logo = TextDrawCreate(289.000000,353.000000,"Vidas Paralelas RP");
	R_SEXO[playerid] = TextDrawCreate(224.000000,381.000000,"~g~Sexo: ~w~<Sin Asignar>");
	R_EDAD[playerid] = TextDrawCreate(224.000000,398.000000,"~g~Edad: ~w~<Sin Asignar>");
	R_ORIGEN[playerid] = TextDrawCreate(224.000000,414.000000,"~g~Origen: ~w~<Sin Asignar>");
	R_STAR = TextDrawCreate(498.000000,352.000000,"~y~]");
	TextDrawUseBox(R_Fondo,1);
	TextDrawBoxColor(R_Fondo,0x00000099);
	TextDrawTextSize(R_Fondo,211.000000,-1.000000);
	TextDrawAlignment(R_Fondo,0);
	TextDrawAlignment(R_Logo,0);
	TextDrawAlignment(R_SEXO[playerid],0);
	TextDrawAlignment(R_EDAD[playerid],0);
	TextDrawAlignment(R_ORIGEN[playerid],0);
	TextDrawAlignment(R_STAR,0);
	TextDrawBackgroundColor(R_Fondo,0x000000ff);
	TextDrawBackgroundColor(R_Logo,0x000000ff);
	TextDrawBackgroundColor(R_SEXO[playerid],0x000000ff);
	TextDrawBackgroundColor(R_EDAD[playerid],0x000000ff);
	TextDrawBackgroundColor(R_ORIGEN[playerid],0x000000ff);
	TextDrawBackgroundColor(R_STAR,0x000000ff);
	TextDrawFont(R_Fondo,3);
	TextDrawLetterSize(R_Fondo,-0.000000,9.699991);
	TextDrawFont(R_Logo,0);
	TextDrawLetterSize(R_Logo,0.699999,1.800000);
	TextDrawFont(R_SEXO[playerid],2);
	TextDrawLetterSize(R_SEXO[playerid],0.299999,1.400000);
	TextDrawFont(R_EDAD[playerid],2);
	TextDrawLetterSize(R_EDAD[playerid],0.299999,1.400000);
	TextDrawFont(R_ORIGEN[playerid],2);
	TextDrawLetterSize(R_ORIGEN[playerid],0.299999,1.400000);
	TextDrawFont(R_STAR,0);
	TextDrawLetterSize(R_STAR,0.799999,2.699999);
	TextDrawColor(R_Fondo,0xffffffff);
	TextDrawColor(R_Logo,0xffffffff);
	TextDrawColor(R_SEXO[playerid],0xffffffff);
	TextDrawColor(R_EDAD[playerid],0xffffffff);
	TextDrawColor(R_ORIGEN[playerid],0xffffffff);
	TextDrawColor(R_STAR,0xffffffff);
	TextDrawSetOutline(R_Fondo,1);
	TextDrawSetOutline(R_Logo,1);
	TextDrawSetOutline(R_SEXO[playerid],1);
	TextDrawSetOutline(R_EDAD[playerid],1);
	TextDrawSetOutline(R_ORIGEN[playerid],1);
	TextDrawSetOutline(R_STAR,1);
	TextDrawSetProportional(R_Fondo,1);
	TextDrawSetProportional(R_Logo,1);
	TextDrawSetProportional(R_SEXO[playerid],1);
	TextDrawSetProportional(R_EDAD[playerid],1);
	TextDrawSetProportional(R_ORIGEN[playerid],1);
	TextDrawSetProportional(R_STAR,1);
	TextDrawSetShadow(R_Fondo,1);
	TextDrawSetShadow(R_Logo,1);
	TextDrawSetShadow(R_SEXO[playerid],1);
	TextDrawSetShadow(R_EDAD[playerid],1);
	TextDrawSetShadow(R_ORIGEN[playerid],1);
	TextDrawSetShadow(R_STAR,1);

	DNI_FONDO = TextDrawCreate(7.000000,154.000000,"a");
	DNI_NAME[playerid] = TextDrawCreate(8.000000,179.000000,"Nombre: Indefinido");
	TextDrawUseBox(DNI_FONDO,1);
	TextDrawBoxColor(DNI_FONDO,0x00000099);
	TextDrawTextSize(DNI_FONDO,218.000000,0.000000);
	TextDrawAlignment(DNI_FONDO,0);
	TextDrawAlignment(DNI_NAME[playerid],0);
	TextDrawBackgroundColor(DNI_FONDO,0x000000ff);
	TextDrawBackgroundColor(DNI_NAME[playerid],0x000000ff);
	TextDrawFont(DNI_FONDO,3);
	TextDrawLetterSize(DNI_FONDO,-0.000000,9.699991);
	TextDrawFont(DNI_NAME[playerid],2);
	TextDrawLetterSize(DNI_NAME[playerid],0.299999,1.200000);
	TextDrawColor(DNI_FONDO,0xffffffff);
	TextDrawColor(DNI_NAME[playerid],0xffffffff);
	TextDrawSetOutline(DNI_FONDO,1);
	TextDrawSetOutline(DNI_NAME[playerid],1);
	TextDrawSetProportional(DNI_FONDO,1);
	TextDrawSetProportional(DNI_NAME[playerid],1);
	TextDrawSetShadow(DNI_FONDO,1);
	TextDrawSetShadow(DNI_NAME[playerid],1);

	Logo1 = TextDrawCreate(8.000000,414.000000,"Vidas Paralelas RolePlay");
	Logo2 = TextDrawCreate(21.000000,431.000000,"http://127.0.0.1/");
	TextDrawAlignment(Logo1,0);
	TextDrawAlignment(Logo2,0);
	TextDrawBackgroundColor(Logo1,0x000000ff);
	TextDrawBackgroundColor(Logo2,0x000000ff);
	TextDrawFont(Logo1,0);
	TextDrawLetterSize(Logo1,0.499999,1.800000);
	TextDrawFont(Logo2,2);
	TextDrawLetterSize(Logo2,0.299999,1.400000);
	TextDrawColor(Logo1,0xffffffff);
	TextDrawColor(Logo2,0xffffffff);
	TextDrawSetOutline(Logo1,1);
	TextDrawSetOutline(Logo2,1);
	TextDrawSetProportional(Logo1,1);
	TextDrawSetProportional(Logo2,1);
	TextDrawSetShadow(Logo1,1);
	TextDrawSetShadow(Logo2,1);
	return 0;
}

public ActualizarSpawns(playerid)
{
	ActualizarEstrellas(playerid);
    SetPlayerColor(playerid, SINCOLOR);
    SetPlayerSkin(playerid,Informacion[playerid][Skin]);
    SetPlayerScore(playerid, Informacion[playerid][Nivel]);
    CargarLuchas(playerid);
   	TextDrawShowForPlayer(playerid, Logo1);
	TextDrawShowForPlayer(playerid, Logo2);
	GivePlayerMoney(playerid,Informacion[playerid][Dinero]);
	if(IsPlayerConnected(playerid))
	{
		if(Informacion[playerid][Castigado] == 1)
		{
		   SetPlayerPos(playerid, 264.1873,77.5404,1001.0391);
		   SetPlayerInterior(playerid, 6);
		   return 1;
		}
		if(Arrestado[playerid] == 1)
		{
		   SetPlayerPos(playerid, 265.3649,78.3137,1001.0391);
		   SetPlayerInterior(playerid, 6);
		   return 1;
		}
		if(Hospitalizado[playerid] == 1 && Informacion[playerid][Faccion] == 0)
		{
		    SetPlayerSkin(playerid, Informacion[playerid][Skin]);
		    SetPlayerPos(playerid, 1183.4843,-1323.4426,13.5768);
			SetPlayerFacingAngle(playerid, 271.1403);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			GivePlayerMoney(playerid, -50);
			SendClientMessage(playerid, ROJIZO, "[LSMD] Estabas muy herido, tubimos que darte mucha asistencia medica, te cobramos $50, perdiste mucha memoria");
			Hospitalizado[playerid] = 0;
			return 1;
		}
		if(Informacion[playerid][Faccion] == 0 || Informacion[playerid][Rango] == 0 && Informacion[playerid][Tuto] == 1)
		{
			if(Informacion[playerid][UPGuardada] == 1)
			{
			    LimpiarChat(playerid, 20);
			    SendClientMessage(playerid, VERDE, "** Has aparecido en la �ltima posici�n en la que te quedaste! **");
			    new archivo[256], usuario[MAX_PLAYER_NAME];
		     	GetPlayerName(playerid, usuario, MAX_PLAYER_NAME);
		     	format(archivo, 256, "Jugadores/%s.ini", usuario);
				SetPlayerInterior(playerid, dini_Int(archivo, "Interior"));
				SetPlayerPos(playerid, dini_Int(archivo, "UltimaPosX"), dini_Int(archivo, "UltimaPosY"), dini_Int(archivo, "UltimaPosZ"));
	    		Informacion[playerid][UPGuardada] = 0;
			}
		}
		if(Informacion[playerid][Faccion] == LSPD)
		{
			SetPlayerPos(playerid, 228.3567,80.4817,1005.0391);
			SetPlayerInterior(playerid, 6);
			GivePlayerWeapon(playerid, 3, 1);
			GivePlayerWeapon(playerid, 24, 250);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == LSMD)
		{
			SetPlayerPos(playerid, 271.8399,1857.1620,8.7578);
			SetPlayerInterior(playerid, 0);
			Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == TAXI)
		{
			SetPlayerPos(playerid, 2536.7854,-1304.4696,1062.6542);
			SetPlayerInterior(playerid, 2);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == PRES)
		{
			SetPlayerPos(playerid, 347.6212,162.1572,1025.7891);
			SetPlayerInterior(playerid, 3);
			GivePlayerWeapon(playerid, 3, 1);
			GivePlayerWeapon(playerid, 24, 250);
			GivePlayerWeapon(playerid, 31, 450);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == FBI)
		{
			SetPlayerPos(playerid, 358.6082,206.8312,1008.3828);
			SetPlayerInterior(playerid, 3);
			GivePlayerWeapon(playerid, 3, 1);
			GivePlayerWeapon(playerid, 24, 250);
			GivePlayerWeapon(playerid, 31, 450);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == LSTV)
		{
			SetPlayerPos(playerid, 246.3762,124.2056,1003.2188);
			SetPlayerInterior(playerid, 10);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == MECA)
		{
			SetPlayerPos(playerid, 2487.3618,-2113.9067,13.7219);
			SetPlayerInterior(playerid, 0);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == LEON)
		{
			SetPlayerPos(playerid, 1254.4220,-793.0696,1084.2344);
			SetPlayerInterior(playerid, 5);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == LICE)
		{
			SetPlayerPos(playerid, -2036.5278,-63.9546,1028.9183);
			SetPlayerInterior(playerid, 3);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == YAKU)
		{
			SetPlayerPos(playerid, 2327.6211,-1013.4546,1050.2109);
			SetPlayerInterior(playerid, 9);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == TRAF)
		{
			SetPlayerPos(playerid, 2525.4353,-1294.2698,1048.2891);
			SetPlayerInterior(playerid, 2);
		    Equipo[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == NFS)
		{
			SetPlayerPos(playerid, 246.6433,122.7799,1003.2188);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 1);
			DobleInterior[playerid] = 1;
		}
		else if(Informacion[playerid][Faccion] == BOMB)
		{
			SetPlayerPos(playerid, 230.8973,161.5640,1003.0234);
			SetPlayerInterior(playerid, 3);
			GivePlayerWeapon(playerid, 42, 999999);
			return 1;
		}
		new house = Informacion[playerid][Casa];
		if(house != 255)
		{
			if(SpawnChange[playerid])
		    {
				SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[house][hWorld]);
				SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]); // Warp the player
				Informacion[playerid][Casa] = house;
				HouseEntered[playerid] = house;
				Informacion[playerid][Interior] = HouseInfo[house][hInt];
				SetPlayerHealth(playerid, 50.0);
				return 1;
			}
		}
	 	if(Informacion[playerid][Tuto] == 0)
		{
		   TogglePlayerControllable(playerid, 0);
		   SetPlayerInterior(playerid, 0);
		   SendClientMessage(playerid, DORADO, "Bienvenido a D4RKN3SS, le haremos una prueba de rol para calificar su estilo y conocimiento.");
		   ShowPlayerDialog(playerid, TRol, DIALOG_STYLE_LIST, "- �Qu� es DeathMatch?","1| Matar o Herir a un usuario sin alguna raz�n\n2| Insultar a alguien por canales OOC\n3| Saltar varias veces seguidas para viajar mas r�pido","Seleccionar","");
		   Informacion[playerid][ProcesoRol] = 0;
		   SetPlayerPos(playerid, 1399.9878,-1667.6550,18.5469);
		   SetPlayerCameraPos(playerid, 1296.6385,-1783.4386,141.7542);
		   SetPlayerCameraLookAt(playerid, 1471.3119,-1676.8418,25.6450);
		   return 1;
		}
	}
	return 1;
}

public OnPlayerSpawn(playerid)
{
   	CargarDatos(playerid);
   	ActualizarSpawns(playerid);
   	return 0;
}
    
public OnPlayerRequestClass(playerid, classid)
{
    LimpiarChat(playerid, 10);
	EstaConectado[playerid] = 0;
	new nombre[MAX_PLAYER_NAME], archivo[256];
	GetPlayerName(playerid, nombre, sizeof(nombre));
	format(archivo, sizeof(archivo), "/Usuarios/%s.ini", nombre);
	if(!dini_Exists(archivo))
	{
	    ShowPlayerDialog(playerid, Registro, DIALOG_STYLE_INPUT, "- Registro","{FFFFFF}Bienvenido\nSu cuenta no existe en nuestra base de datos, ingrese una contrase�a para crearla.","Crear","Salir");
	}
	else
	{
	    ShowPlayerDialog(playerid, Logueo, DIALOG_STYLE_INPUT, "- Ingreso","{FFFFFF}Bienvenido\nNuestra base de datos reconoci� su cuenta, ingrese su contrase�a para acceder","Acceder","Salir");
 	}
	SetPlayerPos(playerid, 1057.1942,-811.7018,91.0100);
	SetPlayerCameraPos(playerid, 1018.4935,-813.9752,121.3610);
	SetPlayerCameraLookAt(playerid, 1218.8821,-974.4238,121.3610);
	return 1;
}

public OnPlayerText(playerid, text[])
{
	new tmp[64];
	new rango[256];
	if(Linea[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		format(rango, sizeof(rango), "[TELEFONO] %s dice: %s", NombreEx(playerid), text);
		RangoCercano(20.0, playerid, rango,BLANCO,BLANCO,BLANCO,BLANCO,BLANCO);
		if(Linea[playerid] == 223)
		{
			format(rango, sizeof(rango), "{CE6062}[DENUNCIA] %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			MensajeLSPD(BLANCO, rango);
			format(rango, sizeof(rango), "El tel�fono del denunciante es: %d", Informacion[playerid][Telefono]);
			MensajeLSPD(BLANCO, rango);
			SendClientMessage(playerid, BLANCO, "{FF8D00}[222] Operadora dice: {FFFFFF}Gracias, su informacion ha sido enviada a nuestra central");
			SendClientMessage(playerid, GRIS, "La linea se ha cortado");
			Linea[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(Informacion[i][Faccion] == LSPD)
				{
					new Float:xpos,Float:ypos,Float:zpos;
					GetPlayerPos(playerid, xpos,ypos,zpos);
				   	SetPlayerMapIcon(i, FIRE_POS_MARKER ,xpos, ypos , zpos, 41, 0, MAPICON_GLOBAL);
			   	    MensajeLSPD(ROJOFUERTE, "{AA3333}[ALERTA] La posicion de la denuncia ha sido marcada en el radar");
					return 0;
				}
			}
		}
		if(Linea[playerid] == 224)
		{
			format(rango, sizeof(rango), "{CE6062}[MENSAJE] %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			MensajeLSMD(BLANCO, rango);
			SendClientMessage(playerid, BLANCO, "{FF8D00}[222] Operadora dice: {FFFFFF}Gracias, su informacion ha sido enviada a nuestra central");
			SendClientMessage(playerid, GRIS, "La linea se ha cortado");
			Linea[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(Informacion[i][Faccion] == LSMD)
				{
					new Float:xpos,Float:ypos,Float:zpos;
					GetPlayerPos(playerid, xpos,ypos,zpos);
			   		SetPlayerMapIcon(i, FIRE_POS_MARKER ,xpos, ypos , zpos, 41, 0, MAPICON_GLOBAL);
			   	    MensajeLSMD(ROJOFUERTE, "{AA3333}[ALERTA] La posicion de la perosna en problemas ha sido marcada");
					return 0;
				}
			}
		}
		if(Linea[playerid] == 225)
		{
			format(rango, sizeof(rango), "{CE6062}[MENSAJE] %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			MensajeBOMB(BLANCO, rango);
			SendClientMessage(playerid, BLANCO, "{FF8D00}[222] Operadora dice: {FFFFFF}Gracias, su informacion ha sido enviada a nuestra central");
			SendClientMessage(playerid, GRIS, "La linea se ha cortado");
			Linea[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(Informacion[i][Faccion] == BOMB)
				{
					new Float:xpos,Float:ypos,Float:zpos;
					GetPlayerPos(playerid, xpos,ypos,zpos);
				   	SetPlayerMapIcon(i, FIRE_POS_MARKER ,xpos, ypos , zpos, 41, 0, MAPICON_GLOBAL);
			   	    MensajeBOMB(ROJOFUERTE, "{AA3333}[ALERTA] Se ha detectado un incendio, la posicion ha sido marcada en el GPS");
					return 0;
				}
			}
		}
		if(Linea[playerid] == 226)
		{
			format(rango, sizeof(rango), "{CE6062}[MENSAJE] %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			MensajeLSTV(BLANCO, rango);
			SendClientMessage(playerid, BLANCO, "{FF8D00}[333] Operadora dice: {FFFFFF}Gracias por dejar su mensaje, que tenga un buen dia.");
			SendClientMessage(playerid, GRIS, "La linea se ha cortado");
			Linea[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			return 0;
		}
		if(Linea[playerid] == 227)
		{
			format(rango, sizeof(rango), "{CE6062}[MENSAJE] %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			MensajeTAXI(BLANCO, rango);
			format(rango, sizeof(rango), "{CE6062}[TELEFONO] %d", Informacion[playerid][Telefono]);
			MensajeTAXI(BLANCO, rango);
			SendClientMessage(playerid, BLANCO, "{FF8D00}[222] Operadora dice: {FFFFFF}Gracias, su informacion ha sido enviada a nuestra central");
			SendClientMessage(playerid, GRIS, "La linea se ha cortado");
			Linea[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(Informacion[i][Faccion] == TAXI)
				{
					new Float:xpos,Float:ypos,Float:zpos;
					GetPlayerPos(playerid, xpos,ypos,zpos);
				   	SetPlayerMapIcon(i, FIRE_POS_MARKER ,xpos, ypos , zpos, 41, 0, MAPICON_GLOBAL);
			   	    MensajeTAXI(ROJOFUERTE, "{AA3333}[ALERTA] La posicion del cliente ha sido calculada segun el identificador");
					return 0;
				}
			}
		}
		if(Linea[playerid] == 228)
		{
			format(rango, sizeof(rango), "{CE6062}[MENSAJE] %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			MensajeMECA(BLANCO, rango);
			format(rango, sizeof(rango), "{CE6062}[TELEFONO] %d", Informacion[playerid][Telefono]);
			MensajeMECA(BLANCO, rango);
			SendClientMessage(playerid, BLANCO, "{FF8D00}[222] Operadora dice: {FFFFFF}Gracias, su informacion ha sido enviada a nuestra central");
			SendClientMessage(playerid, GRIS, "La linea se ha cortado");
			Linea[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(Informacion[i][Faccion] == MECA)
				{
					new Float:xpos,Float:ypos,Float:zpos;
					GetPlayerPos(playerid, xpos,ypos,zpos);
				   	SetPlayerMapIcon(i, FIRE_POS_MARKER ,xpos, ypos , zpos, 41, 0, MAPICON_GLOBAL);
			   	    MensajeMECA(ROJOFUERTE, "{AA3333}[ALERTA] La posicion del cliente ha sido calculada segun el identificador");
					return 0;
				}
			}
		}
		if(Linea[playerid] == 229)
		{
			format(rango, sizeof(rango), "{CE6062}[MENSAJE] %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			MensajeNFS(BLANCO, rango);
			format(rango, sizeof(rango), "{CE6062}[TELEFONO] %d", Informacion[playerid][Telefono]);
			MensajeNFS(BLANCO, rango);
			SendClientMessage(playerid, BLANCO, "{FF8D00}[222] Operadora dice: {FFFFFF}Gracias, su informacion ha sido enviada a nuestra central");
			SendClientMessage(playerid, GRIS, "La linea se ha cortado");
			Linea[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(Informacion[i][Faccion] == NFS)
				{
					new Float:xpos,Float:ypos,Float:zpos;
					GetPlayerPos(playerid, xpos,ypos,zpos);
				   	SetPlayerMapIcon(i, FIRE_POS_MARKER ,xpos, ypos , zpos, 41, 0, MAPICON_GLOBAL);
			   	    MensajeNFS(ROJOFUERTE, "{AA3333}[ALERTA] La posicion del cliente ha sido calculada segun el identificador");
					return 0;
				}
			}
		}
		if(Linea[playerid] == 230)
		{
			format(rango, sizeof(rango), "{CE6062}[MENSAJE] %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			MensajeFBI(BLANCO, rango);
			format(rango, sizeof(rango), "{CE6062}[TELEFONO] %d", Informacion[playerid][Telefono]);
			MensajeFBI(BLANCO, rango);
			SendClientMessage(playerid, BLANCO, "{FF8D00}[222] Operadora dice: {FFFFFF}Gracias, su informacion ha sido enviada a nuestra central");
			SendClientMessage(playerid, GRIS, "La linea se ha cortado");
			Linea[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(Informacion[i][Faccion] == FBI)
				{
					new Float:xpos,Float:ypos,Float:zpos;
					GetPlayerPos(playerid, xpos,ypos,zpos);
				   	SetPlayerMapIcon(i, FIRE_POS_MARKER ,xpos, ypos , zpos, 41, 0, MAPICON_GLOBAL);
			   	    MensajeFBI(ROJOFUERTE, "{AA3333}[ALERTA] La posicion del cliente ha sido calculada segun el identificador");
					return 0;
				}
			}
		}
		if(IsPlayerConnected(Linea[playerid]))
		{
		    if(Linea[Linea[playerid]] == playerid)
		    {
				SendClientMessage(Linea[playerid], BLANCO,rango);
			}
		}
		return 0;
	}
	if(TalkingLive[playerid] != 255)
	{
		if(Informacion[playerid][Faccion] == LSTV)
		{
		    format(rango, sizeof(rango), "{BFFF00}[Conexion] Comunicador %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			SendClientMessageToAll(BLANCO, rango);
		}
		else
		{
		    format(rango, sizeof(rango), "{BFFF00}[Conexion] Entrevistado %s dice: {FFFFFF}%s", NombreEx(playerid), text);
			SendClientMessageToAll(BLANCO, rango);
		}
		return 0;
	}
	if(EstudioTelevision(playerid))
	{
	    if(TelevisorON == 1)
	    {
	        for(new i=0;i<MAX_PLAYERS;i++)
	        {
	            if(ViendoTele[i] == 1)
	            {
					format(rango, sizeof(rango), "** [TELEVISOR] %s dice: %s", NombreEx(playerid), text);
					SendClientMessage(i, BLANCO, rango);
				}
	        }
	    }
	}
	if (realchat)
	{
      	new rango123[170];
      	new rango4[256];
		new rango3[256];
		new strlenrango = strlen(text);
		if(strlenrango > 85)
		{
   			strmid(rango4, text, 0, 85, 256);
   			strmid(rango3, text, 85, strlen(text), 256);
   			format(rango123, sizeof(rango123), "%s dice: %s", NombreEx(playerid), rango4);
			RangoCercano(20.0, playerid, rango123,BLANCO,BLANCO,BLANCO,BLANCO,BLANCO);
    		format(rango123, sizeof(rango123), "%s", rango3);
    		RangoCercano(20.0, playerid, rango123,BLANCO,BLANCO,BLANCO,BLANCO,BLANCO);
		}
		else
		{
   			format(rango123, sizeof(rango123), "%s dice: %s", NombreEx(playerid), text);
			RangoCercano(20.0, playerid, rango123,BLANCO,BLANCO,BLANCO,BLANCO,BLANCO);
		}
		return 0;
	}
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == Registro)
	{
       new nombrejugador[MAX_PLAYER_NAME], archivo[256],rango[200];
       if (!strlen(inputtext)) return ShowPlayerDialog(playerid, Registro, DIALOG_STYLE_INPUT, "- Registro", "{980000}�ERROR!\n{FFFFFF}Ingrese una contrase�a en el campo requerido en la parte inferior del cuadro.", "Continuar", "Salir");
       if (!response) return Kick(playerid);
       GetPlayerName(playerid, nombrejugador, sizeof(nombrejugador));
       format(archivo, sizeof(archivo), "/Usuarios/%s.ini", nombrejugador);
       dini_Create(archivo);
       dini_Set(archivo, "Usuario", nombrejugador);
       dini_Set(archivo, "Contrase�a", inputtext);
       CrearCuenta(playerid);
       format(rango,sizeof(rango),"Ingrese nuevamente su contrase�a y oprima el bot�n CONFIRMAR para continuar.");
       ShowPlayerDialog(playerid, Logueo, DIALOG_STYLE_INPUT, "- Ingreso", rango, "Confirmar", "Salir");
	}
	if(dialogid == Logueo)
	{
	   new nombrejugador[MAX_PLAYER_NAME], archivo[256], comprobante[256];
       if (!strlen(inputtext)) return ShowPlayerDialog(playerid, Logueo, DIALOG_STYLE_INPUT, "- Ingreso", "{980000}ERROR!\n{FFFFFF}Ingrese nuevamente la contrase�a", "Aceptar", "Salir");
       if (!response) return Kick(playerid);
       GetPlayerName(playerid, nombrejugador, sizeof(nombrejugador));
       format(archivo, sizeof(archivo), "/Usuarios/%s.ini", nombrejugador);
       format(comprobante, sizeof(comprobante), "%s", dini_Get(archivo, "Contrase�a"));
       if (!strcmp (inputtext, comprobante))
       {
           EstaConectado[playerid] = 1;
           SpawnPlayer(playerid);
       }
       else
	   {
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, Logueo, DIALOG_STYLE_INPUT, "- Ingreso", "{980000}ERROR!\n{FFFFFF}Ingrese nuevamente la contrase�a", "Aceptar", "Salir");
			if(!response) return Kick(playerid);
			GetPlayerName(playerid, nombrejugador, sizeof(nombrejugador));
			format(archivo, sizeof(archivo), "/Usuarios/%s.ini", nombrejugador);
			format(comprobante, sizeof(comprobante), "%s", dini_Get(archivo, "Contrase�a"));	}
			return 1;
	}
	if(dialogid == Camaras)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
				SendClientMessage(playerid, BLANCO, "* Preciona ENTER para salir de la camara");
				SetPlayerCameraPos(playerid, 2228.8708,-2460.6111,60.5063);
	            SetPlayerCameraLookAt(playerid, 2094.6445,-2498.6277,30.1633);
				EstaConCamara[playerid] = 1;
		    }
			if(listitem == 1)
			{
				SendClientMessage(playerid, BLANCO, "* Preciona ENTER para salir de la camara");
			    SetPlayerCameraPos(playerid, 2040.2559,-2627.1409,18.6190);
	            SetPlayerCameraLookAt(playerid, 1988.2200,-2610.2905,18.6190);
				EstaConCamara[playerid] = 1;
		   	}
			if(listitem == 2)
			{
				SendClientMessage(playerid, BLANCO, "* Preciona ENTER para salir de la camara");
				SetPlayerCameraPos(playerid, 2016.2659,-2222.4114,23.2321);
	            SetPlayerCameraLookAt(playerid, 1997.7487,-2200.6267,15.4685);
				EstaConCamara[playerid] = 1;
		    }
			if(listitem == 3)
			{
				SendClientMessage(playerid, BLANCO, "* Preciona ENTER para salir de la camara");
			    SetPlayerCameraPos(playerid, 1735.6320,-2324.9602,16.5437);
	            SetPlayerCameraLookAt(playerid, 1722.3824,-2317.9570,14.4190);
				EstaConCamara[playerid] = 1;
	       	}
			if(listitem == 4)
			{
				SendClientMessage(playerid, BLANCO, "* Preciona ENTER para salir de la camara");
			    SetPlayerCameraPos(playerid, 1412.6411,-2639.8384,22.5324);
	            SetPlayerCameraLookAt(playerid, 1362.6129,-2614.6438,38.7359);
				EstaConCamara[playerid] = 1;
			}
		}
	}
	if(dialogid == TRol)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
			    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				ShowPlayerDialog(playerid, TRol2, DIALOG_STYLE_LIST, "- �Qu� es RevengeKill?","1| Insultar a alguien usando canales OOC\n2| Repetir muchas veces seguida la misma palabra\n3| Matar a alguien que te halla matado por venganza","Seleccionar","");
				Informacion[playerid][ProcesoRol] += 1;
			}
			if(listitem == 1)
			{
			    SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol2, DIALOG_STYLE_LIST, "- �Qu� es RevengeKill?","1| Insultar a alguien usando canales OOC\n2| Repetir muchas veces seguida la misma palabra\n3| Matar a alguien que te halla matado por venganza","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
			}
			if(listitem == 2)
			{
			    SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol2, DIALOG_STYLE_LIST, "- �Qu� es RevengeKill?","1| Insultar a alguien usando canales OOC\n2| Repetir muchas veces seguida la misma palabra\n3| Matar a alguien que te halla matado por venganza","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
			}
			if(listitem == 3)
			{
			    SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol2, DIALOG_STYLE_LIST, "- �Qu� es RevengeKill?","1| Insultar a alguien usando canales OOC\n2| Repetir muchas veces seguida la misma palabra\n3| Matar a alguien que te halla matado por venganza","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
			}
		}
	}
	if(dialogid == TRol2)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol3, DIALOG_STYLE_LIST, "- �Qu� arriesgas haciendo SPAM?","1| Recibes un Kick\n2| Recibes un Castigo\n3| Recibes un Baneo","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
			}
			if(listitem == 1)
	        {
	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol3, DIALOG_STYLE_LIST, "- �Qu� arriesgas haciendo SPAM?","1| Recibes un Kick\n2| Recibes un Castigo\n3| Recibes un Baneo","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
			}
			if(listitem == 2)
	        {
	       	    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				ShowPlayerDialog(playerid, TRol3, DIALOG_STYLE_LIST, "- �Qu� arriesgas haciendo SPAM?","1| Recibes un Kick\n2| Recibes un Castigo\n3| Recibes un Baneo","Seleccionar","");
				Informacion[playerid][ProcesoRol] += 1;
			}
		}
	}
	if(dialogid == TRol3)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol4, DIALOG_STYLE_LIST, "- �Cu�les son los comandos utilizados para rolear?","1| /me - /do - /intentar\n2| /admins - /reportar - /bug\n3| /invitar - /desinvitar - /darstring","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
			}
			if(listitem == 1)
	        {
	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol4, DIALOG_STYLE_LIST, "- �Cu�les son los comandos utilizados para rolear?","1| /me - /do - /intentar\n2| /admins - /reportar - /bug\n3| /invitar - /desinvitar - /darstring","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
			}
			if(listitem == 2)
	        {
        	    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				ShowPlayerDialog(playerid, TRol4, DIALOG_STYLE_LIST, "- �Cu�les son los comandos utilizados para rolear?","1| /me - /do - /intentar\n2| /admins - /reportar - /bug\n3| /invitar - /desinvitar - /darstring","Seleccionar","");
				Informacion[playerid][ProcesoRol] += 1;
			}
		}
	}
	if(dialogid == TRol4)
	{
	    if(response)
	    {
			if(listitem == 0)
	        {
        	    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				ShowPlayerDialog(playerid, TRol5, DIALOG_STYLE_LIST, "- �Qu� harias para ingresar a una faccion?","1| Me Postulo via FORO en la seccion correcta\n2| Pido que me den faccion a los administradores\n3| Insulto y Floodeo al lider hasta que se canse","Seleccionar","");
				Informacion[playerid][ProcesoRol] += 1;
	        }
			if(listitem == 1)
	        {
	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol5, DIALOG_STYLE_LIST, "- �Qu� harias para ingresar a una faccion?","1| Me Postulo via FORO en la seccion correcta\n2| Pido que me den faccion a los administradores\n3| Insulto y Floodeo al lider hasta que se canse","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
			if(listitem == 2)
	        {
 	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol5, DIALOG_STYLE_LIST, "- �Qu� harias para ingresar a una faccion?","1| Me Postulo via FORO en la seccion correcta\n2| Pido que me den faccion a los administradores\n3| Insulto y Floodeo al lider hasta que se canse","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
	    }
	}
	if(dialogid == TRol5)
	{
	    if(response)
	    {
			if(listitem == 0)
	        {
        	    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				ShowPlayerDialog(playerid, TRol6, DIALOG_STYLE_LIST, "- �y si quiero pertenecer al staff?","1| Demuestro que soy buen rolero y me postulo en el foro\n2| Floodeo y alcahueteo al due�o del servidor","Seleccionar","");
				Informacion[playerid][ProcesoRol] += 1;
	        }
			if(listitem == 1)
	        {
	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol6, DIALOG_STYLE_LIST, "- �y si quiero pertenecer al staff?","1| Demuestro que soy buen rolero y me postulo en el foro\n2| Floodeo y alcahueteo al due�o del servidor","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
			if(listitem == 2)
	        {
 	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol6, DIALOG_STYLE_LIST, "- �y si quiero pertenecer al staff?","1| Demuestro que soy buen rolero y me postulo en el foro\n2| Floodeo y alcahueteo al due�o del servidor","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
	    }
	}
	if(dialogid == TRol6)
	{
	    if(response)
	    {
			if(listitem == 0)
	        {
        	    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				ShowPlayerDialog(playerid, TRol7, DIALOG_STYLE_LIST, "- �Que es el CarJacking?","1| Saltar arriba de los coches\n2| Robar los coches sin rol","Seleccionar","");
				Informacion[playerid][ProcesoRol] += 1;
	        }
			if(listitem == 1)
	        {
	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol7, DIALOG_STYLE_LIST, "- �Que es el CarJacking?","1| Saltar arriba de los coches\n2| Robar los coches sin rol","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
			if(listitem == 2)
	        {
 	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol7, DIALOG_STYLE_LIST, "- �Que es el CarJacking?","1| Saltar arriba de los coches\n2| Robar los coches sin rol","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
	    }
	}
	if(dialogid == TRol7)
	{
	    if(response)
	    {
			if(listitem == 0)
	        {
 	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol8, DIALOG_STYLE_LIST, "- �Qu� es el metagaming?","1| Utilizar canales IC y decirlos OOC\n2| Utilizar canales IC para decir cosas OOC\n3| Utilizar canales OOC para utilizarlos OOC","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
			if(listitem == 1)
	        {
        	    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				ShowPlayerDialog(playerid, TRol8, DIALOG_STYLE_LIST, "- �Qu� es el metagaming?","1| Utilizar canales IC y decirlos OOC\n2| Utilizar canales IC para decir cosas OOC\n3| Utilizar canales OOC para utilizarlos OOC","Seleccionar","");
				Informacion[playerid][ProcesoRol] += 1;
	        }
	    }
	}
	if(dialogid == TRol8)
	{
	    if(response)
	    {
			if(listitem == 0)
	        {
 	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol9, DIALOG_STYLE_LIST, "- �Qu� es el TrainKill?","1| Matar a alguien aplastandolo con el coche\n2| Una forma de Deathmatch, utilizando el tren como arma","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
			if(listitem == 1)
	        {
        	    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				ShowPlayerDialog(playerid, TRol9, DIALOG_STYLE_LIST, "- �Qu� es el TrainKill?","1| Matar a alguien aplastandolo con el coche\n2| Una forma de Deathmatch, utilizando el tren como arma","Seleccionar","");
				Informacion[playerid][ProcesoRol] += 1;
	        }
			if(listitem == 2)
	        {
 	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol9, DIALOG_STYLE_LIST, "- �Qu� es el TrainKill?","1| Matar a alguien aplastandolo con el coche\n2| Una forma de Deathmatch, utilizando el tren como arma","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
	    }
	}
	if(dialogid == TRol9)
	{
	    if(response)
	    {
			if(listitem == 0)
	        {
 	        	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				ShowPlayerDialog(playerid, TRol10, DIALOG_STYLE_LIST, "- �Que es el Flood?","1| Repetir la misma palabra mas de 3 veces en un corto tiempo\n2| Saltar sobre las casas y coches de la gente","Seleccionar","");
				Informacion[playerid][ProcesoRol] -= 1;
	        }
			if(listitem == 1)
	        {
        	    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				ShowPlayerDialog(playerid, TRol10, DIALOG_STYLE_LIST, "- �Que es el Flood?","1| Repetir la misma palabra mas de 3 veces en un corto tiempo\n2| Saltar sobre las casas y coches de la gente","Seleccionar","");
				Informacion[playerid][ProcesoRol] += 1;
	        }
	    }
	}
	if(dialogid == TRol10)
	{
	    if(response)
	    {
			if(listitem == 0)
	        {
        	    SendClientMessage(playerid, VERDE, "�Has respondido correctamente la pregunta!");
				SendClientMessage(playerid, BLANCO, "Ahora vamos a calificar tu rol dependiendo de las respuestas que hallas respondido");
				Informacion[playerid][ProcesoRol] += 1;
				SetTimerEx("ProcesandoRol", 5000, false, "iid", playerid);
		    }
			if(listitem == 1)
	        {
			 	SendClientMessage(playerid, ROJO, "�La respuesta seleccionada no es correcta!");
				SendClientMessage(playerid, BLANCO, "Ahora vamos a calificar tu rol dependiendo de las respuestas que hallas respondido");
				Informacion[playerid][ProcesoRol] -= 1;
				SetTimerEx("ProcesandoRol", 5000, false, "iid", playerid);
			}
	    }
	}
	if(dialogid == DIALOG_TUTO1)
	{
		ShowPlayerDialog(playerid, DIALOG_TUTO2, DIALOG_STYLE_MSGBOX, "{0077FF}DeathMatch", "{FF5F00}Concepto: {FFFFFF}\nSignifica cuando matas a alguien sin alguna razon\nUn Claro ejemplo seria el si ves a algun usuario sentado en una silla afuera de su casa\ny derrepente sin ninguna razon, te le acercas y empiezas a golearle hasta generarle la muerte.","Siguiente","");
	}
	if(response)
	{
		if(dialogid == DIALOG_TUTO2)
		{
	 		ShowPlayerDialog(playerid, DIALOG_TUTO3, DIALOG_STYLE_MSGBOX, "{0077FF}RevengeKill", "{FF5F00}Concepto: {FFFFFF}\nSignifica cuando matas a alguien por venganza propia tanto IC como OOC\nUn claro ejemplo seria si un usuario te ataca hasta matarte\nUna ves muerto apareces en el hospital, pero sin rolear la amnesia permanente de aquel incidente\nVas a buscar al sujeto que te mato y lo matas\nEs una regla fundamental para el buen rol.","Siguiente","");
		}
		if(dialogid == DIALOG_TUTO3)
		{
			ShowPlayerDialog(playerid, DIALOG_TUTO4, DIALOG_STYLE_MSGBOX, "{0077FF}MetaGaming", "{FF5F00}Concepto: {FFFFFF}\nSignifica cuando dices algo de la vida real dentro del juego en un canal equivocado\nUn claro ejemplo seria si ves a un usuario rompiendo una regla y sin usar el comando {FF5F00}/ooc {FFFFFF}le dijieras que lo reportarias al foro del servidor\n Decir que lo reportarias al foro sin usar el comando {FF5F00}/ooc {FFFFFF}seria un error.","Siguiente","");
		}
		if(dialogid == DIALOG_TUTO4)
		{
			ShowPlayerDialog(playerid, DIALOG_TUTO5, DIALOG_STYLE_MSGBOX, "{0077FF}DriveBy", "{FF5F00}Concepto: {FFFFFF}\nSignifica cuando disparas con un subfusil como MP5, Uzi o TEC-9, desde un vehiculo siendo conductor\nSi quieres llegar a disparar desde el coche debes tener un acompa�ante que dispare\nHay excepciones como los policias, que pueden evitar respetar la regla, ya que es un rol disparar desde el coche\npara neutralizar a sus profugos","Siguiente","");
		}
		if(dialogid == DIALOG_TUTO5)
		{
			ShowPlayerDialog(playerid, DIALOG_TUTO6, DIALOG_STYLE_MSGBOX, "{0077FF}PowerGaming", "{FF5F00}Concepto: {FFFFFF}\nSignifica cuando realizas acciones en el juego que no serian posibles de realizar en la vida real\nun claro ejemplo seria que si calleses desde un balcon, tendrias que rolear la caida, cada sensasion\ny cada exprecion de la situacion, dar como error esta regla seria si caes y no roleas nada y sigues corriendo","Siguiente","");
		}
		if(dialogid == DIALOG_TUTO6)
		{
			ShowPlayerDialog(playerid, DIALOG_TUTO7, DIALOG_STYLE_MSGBOX, "{0077FF}Bunny Hops", "{FF5F00}Concepto: {FFFFFF}\nSignifica cuando realizas varios saltos en bicicleta o a pie para llegar a alguna zona mas rapidame\nse caracteriza por ser un powergaming en 2 ruedas a pie\nsi nosotros en la vida real saltariamos mil veces para llegar a un lugar mas rapido, no podremos porque nos cansaremos","Siguiente","");		}
		}
		if(dialogid == DIALOG_TUTO7)
		{
			ShowPlayerDialog(playerid, DIALOG_TUTO8, DIALOG_STYLE_MSGBOX, "{0077FF}Fin del Tutorial", "{FFFFFF}Mucha suerte, ahora es todo por cuenta propia, recuerda hacer amigos, visitar el foro,\nrespetar la reglas, usuarios y administradores, en mas pasala a lo grande en nuestro servidor\nRecuerda que si tienes dudas puedes hablar con un administrador\npuedes usar el comando {FF5F00}/duda {FFFFFF}para guiarte hacia ellos\n\nUn Saludo... Departamento de Administracion de Bone Country RolePlay","Finalizar","");
		}
		if(dialogid == DIALOG_TUTO8)
		{
		    TogglePlayerControllable(playerid,1);
		    SetPlayerInterior(playerid, 14);
		    SetPlayerPos(playerid, -1831.6558,18.1555,1061.1436);
		    SetPlayerHoldingObject(playerid, 1210, 6, 0.289999, 0.079999, -0.000000, 0.000000, -100.000000, 1.000000);
		    SetPlayerCameraPos(playerid, -1832.2156,6.8017,1061.1436);
		    SetPlayerCameraLookAt(playerid, -1825.2156,45.8017,1061.1436);
		    SetPlayerFacingAngle( playerid, 180 );
		    ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
		    SetTimerEx("FinalDelTutorial",6000,false,"i",playerid);
			return 1;
	}
	if(dialogid == CLlamada)
	{
	    new rango[256];
	    if(response)
	    {
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Linea[i] == playerid)
					{
						Linea[playerid] = i;
						SendClientMessage(i,  AMARILLO, "Han contestado la llamada");
						format(rango, sizeof(rango), "* %s contesta su llamada telefonica", NombreEx(playerid));
						RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
						RingTone[playerid] = 0;
					}

				}
			}
	     }
		 else
		 {
    		new caller = Linea[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  GRIS, "Llamada Ignorada");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  GRIS, "Has ignorado la llamada");
							Linea[caller] = 255;
						}
						Linea[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
					}
				}
			}
		}
		return 1;
	}
	if(dialogid == Asensor)
 	{
   		if(response)
		{
			SetPlayerPos(playerid, 1568.6674,-1690.6655,5.8906);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
	     }
		 else
		 {
			SetPlayerPos(playerid, 1564.9000,-1665.9075,28.3956);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
	    }
		return 1;
	}
	if(dialogid == DialogNCo1)
	{
		new rango[256];
	    if(response)
	    {
			if(strlen(inputtext))
			{
			    if(numerocomer[playerid] == 0)
			    {
					format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[0][cTitulo],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo2, DIALOG_STYLE_INPUT, "Texto", "Escribe el cuerpo de la noticia:", "Listo", "Cancelar");
                    return 1;
			    }
			    else if(numerocomer[playerid] == 1)
			    {
					format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[1][cTitulo],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo2, DIALOG_STYLE_INPUT, "Texto", "Escribe el cuerpo de la noticia:", "Listo", "Cancelar");
                    return 1;
			    }
			    else if(numerocomer[playerid] == 2)
			    {
					format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[2][cTitulo],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo2, DIALOG_STYLE_INPUT, "Texto", "Escribe el cuerpo de la noticia:", "Listo", "Cancelar");
                    return 1;
			    }
			    else if(numerocomer[playerid] == 3)
			    {
					format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[3][cTitulo],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo2, DIALOG_STYLE_INPUT, "Texto", "Escribe el cuerpo de la noticia:", "Listo", "Cancelar");
                    return 1;
			    }
			    else if(numerocomer[playerid] == 4)
			    {
					format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[4][cTitulo],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo2, DIALOG_STYLE_INPUT, "Texto", "Escribe el cuerpo de la noticia:", "Listo", "Cancelar");
			    }
			    else{ SendClientMessage(playerid, VERDE, "Error"); return 1; }
			}
	    }
	}
	if(dialogid == DialogNCo2)
	{
		new rango[256];
	    if(response)
	    {
	        if(strlen(inputtext))
	        {
	            if(numerocomer[playerid] == 0)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[0][cTexto],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo3, DIALOG_STYLE_INPUT, "Datos", "Escribe algunos datos utiles (ej, direcci�n, precios):", "Listo", "Cancelar");
                    return 1;
			    }
			    else if(numerocomer[playerid] == 1)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[1][cTexto],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo3, DIALOG_STYLE_INPUT, "Datos", "Escribe algunos datos utiles (ej, direcci�n, precios):", "Listo", "Cancelar");
                    return 1;
			    }
			    else if(numerocomer[playerid] == 2)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[2][cTexto],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo3, DIALOG_STYLE_INPUT, "Datos", "Escribe algunos datos utiles (ej, direcci�n, precios):", "Listo", "Cancelar");
                    return 1;
			    }
			    else if(numerocomer[playerid] == 3)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[3][cTexto],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo3, DIALOG_STYLE_INPUT, "Datos", "Escribe algunos datos utiles (ej, direcci�n, precios):", "Listo", "Cancelar");
                    return 1;
			    }
			    else if(numerocomer[playerid] == 4)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[4][cTexto],rango, 0, strlen(rango), 255);
                    SaveComerciales();
                    ShowPlayerDialog(playerid, DialogNCo3, DIALOG_STYLE_INPUT, "Datos", "Escribe algunos datos utiles (ej, direcci�n, precios):", "Listo", "Cancelar");
                    return 1;
			    }
			    else{ SendClientMessage(playerid, VERDE, "Error"); return 1; }
	        }
	    }
	}
	if(dialogid == DialogNCo3)
	{
		new rango[256];
	   if(response)
	    {
	        if(strlen(inputtext))
	        {
	            if(numerocomer[playerid] == 0)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[0][cDatos],rango, 0, strlen(rango), 255);
                    ComerInfo[0][cNumero] = 1;
                    SaveComerciales();
                    return 1;
			    }
			    else if(numerocomer[playerid] == 1)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[1][cDatos],rango, 0, strlen(rango), 255);
                    ComerInfo[1][cNumero] = 1;
                    SaveComerciales();
                    return 1;
			    }
			    else if(numerocomer[playerid] == 2)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[2][cDatos],rango, 0, strlen(rango), 255);
                    ComerInfo[2][cNumero] = 1;
                    SaveComerciales();
                    return 1;
			    }
			    else if(numerocomer[playerid] == 3)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[3][cDatos],rango, 0, strlen(rango), 255);
                    ComerInfo[3][cNumero] = 1;
                    SaveComerciales();
                    return 1;
			    }
			    else if(numerocomer[playerid] == 4)
			    {
			        format(rango, sizeof(rango), inputtext);
                    strmid(ComerInfo[4][cDatos],rango, 0, strlen(rango), 255);
                    ComerInfo[4][cNumero] = 1;
                    SaveComerciales();
                    return 1;
			    }
			    else{ SendClientMessage(playerid, VERDE, "Error"); return 1; }
			}
		}
	}
	if(dialogid == TServicio)
	{
	    if(response)
	    {
			if(listitem == 0)
			{
				Linea[playerid] = 223;
				SendClientMessage(playerid, AMARILLO, "Describe al sospechoso, sin indicar su nombre porque seria Metagaming");
			}
			if(listitem == 1)
			{
				Linea[playerid] = 224;
				SendClientMessage(playerid, AMARILLO, "Indique su nombre, y su emergencia (Este Canal es IC)");
			}
			if(listitem == 2)
			{
				Linea[playerid] = 225;
				SendClientMessage(playerid, AMARILLO, "Indique su nombre, y detalle la causa del incendio (Este Canal es IC)");
			}
			if(listitem == 3)
			{
			}
		}
	}
	if(dialogid == TServicio2)
	{
	    if(response)
	    {
			if(listitem == 0)
			{
				if(LineaCNN == 0)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, nuestras lineas se encuentran cerradas");
					return 1;
				}
				Linea[playerid] = 226;
				SendClientMessage(playerid, AMARILLO, "Indique su nombre y deje un mensaje (Este Canal es IC)");
			}
			if(listitem == 1)
			{
				if(LineaTaxi == 0)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, nuestras lineas se encuentran cerradas");
					return 1;
				}
				Linea[playerid] = 227;
				SendClientMessage(playerid, AMARILLO, "Indique su nombre y deje un mensaje (Este Canal es IC)");
			}
			if(listitem == 2)
			{
				if(LineaMeca == 0)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, nuestras lineas se encuentran cerradas");
					return 1;
				}
				Linea[playerid] = 228;
				SendClientMessage(playerid, AMARILLO, "Indique su nombre y deje un mensaje (Este Canal es IC)");
			}
			if(listitem == 3)
			{
				if(LineaNFS == 0)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, nuestras lineas se encuentran cerradas");
					return 1;
				}
				Linea[playerid] = 229;
				SendClientMessage(playerid, AMARILLO, "Indique su nombre y deje un mensaje (Este Canal es IC)");
			}
			if(listitem == 4)
			{
				if(LineaFBI == 0)
				{
					SendClientMessage(playerid, GRIS, "Lo siento, nuestras lineas se encuentran cerradas");
					return 1;
				}
				Linea[playerid] = 230;
				SendClientMessage(playerid, AMARILLO, "Indique su nombre y deje un mensaje (Este Canal es IC)");
			}
		}
	}
	if(dialogid == VPanel)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            ShowPlayerDialog(playerid, VLuces, DIALOG_STYLE_MSGBOX, "- Luces","�Que desea hacer?","Encender","Apagar");
	        }
	        if(listitem == 1)
	        {
	            ShowPlayerDialog(playerid, VCapo, DIALOG_STYLE_MSGBOX, "- Capo","�Que desea hacer?","Abrir","Cerrar");
	        }
	        if(listitem == 2)
	        {
	            ShowPlayerDialog(playerid, VMaletero, DIALOG_STYLE_MSGBOX, "- Maletero","�Que desea hacer?","Abrir","Cerrar");
		    }
		}
	}
	if(dialogid == VLuces)
	{
		new rango[256];
		new vehiculo = GetPlayerVehicleID(playerid);
		if(response)
	    {
			GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehiculo, engine, 1, alarm, doors, bonnet, boot, objective);
	        GameTextForPlayer(playerid, "~w~Luces ~g~Encendidas", 2000, 4);
  			format(rango, sizeof(rango), "* %s enciende las luces de su vehiculo", NombreEx(playerid));
  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
        else
        {
			GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehiculo, engine, 0, alarm, doors, bonnet, boot, objective);
	        GameTextForPlayer(playerid, "~w~Luces ~R~Apagadas", 2000, 4);
  			format(rango, sizeof(rango), "* %s apaga las luces de su vehiculo", NombreEx(playerid));
  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
	}
	if(dialogid == VCapo)
	{
		new rango[256];
		new vehiculo = GetPlayerVehicleID(playerid);
		if(response)
	    {
			GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, 1, boot, objective);
	        GameTextForPlayer(playerid, "~w~Capo ~g~Abierto", 2000, 4);
  			format(rango, sizeof(rango), "* %s abre el capo de su vehiculo", NombreEx(playerid));
  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	    }
        else
        {
			GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, 0, boot, objective);
	        GameTextForPlayer(playerid, "~w~Capo ~R~Cerrado", 2000, 4);
  			format(rango, sizeof(rango), "* %s cierra el capo de su vehiculo", NombreEx(playerid));
  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
	}
	if(dialogid == VMaletero)
	{
		new rango[256];
		new vehiculo = GetPlayerVehicleID(playerid);
		if(response)
	    {
			GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, 1, objective);
			GameTextForPlayer(playerid, "~w~Maletero ~g~Abierto", 2000, 4);
  			format(rango, sizeof(rango), "* %s abre el maletero de su vehiculo", NombreEx(playerid));
  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	    }
        else
        {
			GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, 0, objective);
	        GameTextForPlayer(playerid, "~w~Maletero ~R~Cerrado", 2000, 4);
  			format(rango, sizeof(rango), "* %s cierra el capo de su vehiculo", NombreEx(playerid));
  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
	}
	if(dialogid == GPS)
	{
		new rango[256];
		if(response)
		{
			if(listitem == 0)
			{
				SetPlayerCheckpoint(playerid, 1825.6648,-1682.5582,13.3828, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Discoteca");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Discoteca Alhambra");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 1)
			{
				SetPlayerCheckpoint(playerid, 1480.9393,-1737.0546,13.3828, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Ayuntamiento LS");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Ayuntamiento de Los Santos");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 3)
			{
				SetPlayerCheckpoint(playerid, 1536.5402,-1675.5782,13.3828, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Comisaria de LS");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Comisaria de Los Santos");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 4)
			{
				SetPlayerCheckpoint(playerid, 1497.2371,-1587.4580,13.3828, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Banco Municipal");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Banco Municipal de Los Santos");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 5)
			{
				SetPlayerCheckpoint(playerid, 1427.4557,-1555.0264,13.3618, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}E.P.S.I");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Empresa Publica de Seguridad e Investigacion");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 6)
			{
				SetPlayerCheckpoint(playerid, 1191.8245,-1323.0499,13.3984, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Hospital General de LS");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Hospital general de Los Santos");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 7)
			{
				SetPlayerCheckpoint(playerid, 953.8120,-1330.5898,13.3784, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}SexShop");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: SexShop");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 8)
			{
				SetPlayerCheckpoint(playerid, 922.1129,-1352.9438,13.2011, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Cluckin Bell");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Cluckin Bell");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 9)
			{
				SetPlayerCheckpoint(playerid, 820.0656,-1603.3110,13.3828, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Burger Shot");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Burger Shot");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 10)
			{
				SetPlayerCheckpoint(playerid, 2084.4561,-1806.2413,13.3828, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Well Pizza Stack");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Well Pizza Stack");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 11)
			{
				SetPlayerCheckpoint(playerid, 641.1718,-1356.9559,13.4042, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}LSTV");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: LSTV");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 12)
			{
				SetPlayerCheckpoint(playerid, 554.8898,-1248.3456,16.9279, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Grotti");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Consecionaria Grotti");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 13)
			{
				SetPlayerCheckpoint(playerid, 1022.4769,-1137.0471,23.6563, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Castino Japones");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Casino Japones");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 14)
			{
				ShowPlayerDialog(playerid, GPS2, DIALOG_STYLE_LIST, "- GPS","-> Departamento de Bienes y Propiedades\n-> Binco\n-> Bar The Green Bottles\n-> Gimnasio de Ganton\n-> One Motors Company\n-> Gasolinera\n-> Departamento de Bomberos\n-> Universidad y Licenciados\n-> Peaje LS/SF\n-> Aereopuerto de LS\n<--- Atras","Aceptar","Cancelar");
			}
		}
	}
	if(dialogid == GPS2)
	{
		new rango[256];
		if(response)
		{
			if(listitem == 0)
			{
				SetPlayerCheckpoint(playerid, 1820.0183,-1578.0375,13.3563, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Departamento de Bienes y Propiedades");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Departamento de bienes y propiedades");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 1)
			{
				SetPlayerCheckpoint(playerid, 1818.6393,-1889.8337,13.3970, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Departamento de Transporte Publico");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Departamento de Transporte publico");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 2)
			{
				SetPlayerCheckpoint(playerid, 2245.5159,-1660.8187,15.2867, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Tienda de Ropa Binco");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Tienda de Ropa Binco");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 3)
			{
				SetPlayerCheckpoint(playerid, 2305.1196,-1656.1473,14.4326, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Bar The Green Bottles");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Bar The Green Bottles");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 4)
			{
				SetPlayerCheckpoint(playerid, 2233.6650,-1729.3856,13.3828, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Gimnasio de Ganton");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Gimnasio de Ganton");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 5)
			{
				SetPlayerCheckpoint(playerid, 2417.1294,-2089.3096,13.4366, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}One Motors Company");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: One Motors Company");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 6)
			{
				SetPlayerCheckpoint(playerid, 1944.7257,-1772.9319,13.3906, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Gasolinera Central");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Gasolinera Central");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 7)
			{
				SetPlayerCheckpoint(playerid, 1293.5608,-1651.7704,13.3828, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Departamento de Bomberos");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Departamento de Bomberos");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 8)
			{
				SetPlayerCheckpoint(playerid, 1751.9656,-1667.3910,13.3840, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Universidad y Licenciados");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Universidad y Licenciados");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 9)
			{
				SetPlayerCheckpoint(playerid, 88.3231,-1536.9786,5.6411, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Peaje de LS/SF");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Indicado hacia: Peaje de LS/SF");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
			if(listitem == 10)
			{
				SetPlayerCheckpoint(playerid, 1961.2142,-2169.0283,13.3828, 10);
				SendClientMessage(playerid, CAZULV,"[GPS] - {FFFFFF}Se ha redireccionado la posicion del GPS hacia: {4E76B1}Aereopuerto Internacional de LS");
	  			format(rango, sizeof(rango), "* %s resetea su GPS y indica una posicion", NombreEx(playerid));
	  			RangoCercano(30.0, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	  			format(rango, sizeof(rango), "* Voz GPS: Aereopuerto Internacional de LS");
	  			RangoCercano(30.0, playerid, rango, AMARILLO, AMARILLO, AMARILLO, AMARILLO, AMARILLO);
			}
		}
	}
	if(dialogid == MenuTuning)
	{
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, MenuTuning1, DIALOG_STYLE_LIST, "Selecciona un Paint Job", "Paint Job 1\nPaint Job 2\nPaint Job 3\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, MenuTuning2, DIALOG_STYLE_LIST, "Selecciona un Color", "Negro\nBlanco\nRojo\nAzul\nVerde\nAmarillo\nRosa\nMarr�n\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 5)
			{
				ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 6)
			{
				ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 7)
			{
				ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
			}
            if(listitem == 8)
			{
				ShowPlayerDialog(playerid, MenuTuning9, DIALOG_STYLE_LIST, "Selecciona un parachoques", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 9)
			{
				ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 10)
			{
				ShowPlayerDialog(playerid, MenuTuning11, DIALOG_STYLE_LIST, "Selecciona un reproductor de m�sica de coche.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 11)
			{
				ShowPlayerDialog(playerid, MenuTuning12, DIALOG_STYLE_LIST, "Men� tuning de coche", "Suspensi�n Hidr�ulica\nNitro x10\nReparar Coche\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 12)
			{
				ShowPlayerDialog(playerid, MenuTuning13, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nAtr�s", "Seleccionar", "Salir");
			}
       	}
	}
	if(dialogid == MenuTuning1)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
				pmodelovehiculo[playerid] == 560 ||
				pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536 ||
				pmodelovehiculo[playerid] == 535 ||
				pmodelovehiculo[playerid] == 576 ||
				pmodelovehiculo[playerid] == 558)
		        {
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,0);
					CarInfo[car][cPaintJob] = 0;
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    ShowPlayerDialog(playerid, MenuTuning1, DIALOG_STYLE_LIST, "Selecciona un Paint Job", "Paint Job 1\nPaint Job 2\nPaint Job 3\nAtr�s", "Seleccionar", "Salir");

				}
				else
				{
				   SendClientMessage(playerid,GRIS,"Taller: Paint Job es s�lo para Wheel Arch Angel and Loco Low Co.");
			       ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 1)
			{
				if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
				pmodelovehiculo[playerid] == 560 ||
				pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536 ||
				pmodelovehiculo[playerid] == 535 ||
				pmodelovehiculo[playerid] == 576 ||
				pmodelovehiculo[playerid] == 558)
                {
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,1);
					CarInfo[car][cPaintJob] = 1;
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    ShowPlayerDialog(playerid, MenuTuning1, DIALOG_STYLE_LIST, "Selecciona un Paint Job", "Paint Job 1\nPaint Job 2\nPaint Job 3\nAtr�s", "Seleccionar", "Salir");

				}
				else
				{
				   SendClientMessage(playerid,GRIS,"Taller: Paint Job es s�lo para Wheel Arch Angel and Loco Low Co.");
			       ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 2)
			{
				if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
				pmodelovehiculo[playerid] == 560 ||
				pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536 ||
				pmodelovehiculo[playerid] == 535 ||
				pmodelovehiculo[playerid] == 576 ||
				pmodelovehiculo[playerid] == 558)
			    {
			   	   new car = GetPlayerVehicleID(playerid);
                   ChangeVehiclePaintjob(car,2);
                   CarInfo[car][cPaintJob] = 2;
                   PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                   ShowPlayerDialog(playerid, MenuTuning1, DIALOG_STYLE_LIST, "Selecciona un Paint Job", "Paint Job 1\nPaint Job 2\nPaint Job 3\nAtr�s", "Seleccionar", "Salir");
				}
				else
				{
				   SendClientMessage(playerid,GRIS,"Taller: Paint Job es s�lo para Wheel Arch Angel and Loco Low Co.");
			       ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
			}
	   }
   }

	if(dialogid == MenuTuning2)
	{
		if(response)
		{
			if(listitem == 0)
			{
	            new car = GetPlayerVehicleID(playerid);
	            ChangeVehicleColor(car,0,0);
                CarInfo[car][cColorOne] = 0;
                CarInfo[car][cColorTwo] = 0;
	            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	            ShowPlayerDialog(playerid, MenuTuning2, DIALOG_STYLE_LIST, "Selecciona un Color", "Negro\nBlanco\nRojo\nAzul\nVerde\nAmarillo\nRosa\nMarr�n\nAtr�s", "Seleccionar", "Salir");

			}
			if(listitem == 1)
			{
		        new car = GetPlayerVehicleID(playerid);
		        ChangeVehicleColor(car,1,1);
	   			CarInfo[car][cColorOne] = 1;
	            CarInfo[car][cColorTwo] = 1;
		        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		        ShowPlayerDialog(playerid, MenuTuning2, DIALOG_STYLE_LIST, "Selecciona un Color", "Negro\nBlanco\nRojo\nAzul\nVerde\nAmarillo\nRosa\nMarr�n\nAtr�s", "Seleccionar", "Salir");

			}
			if(listitem == 2)
			{
		        new car = GetPlayerVehicleID(playerid);
		        ChangeVehicleColor(car,3,3);
       			CarInfo[car][cColorOne] = 3;
                CarInfo[car][cColorTwo] = 3;
		        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		        ShowPlayerDialog(playerid, MenuTuning2, DIALOG_STYLE_LIST, "Selecciona un Color", "Negro\nBlanco\nRojo\nAzul\nVerde\nAmarillo\nRosa\nMarr�n\nAtr�s", "Seleccionar", "Salir");

			}
			if(listitem == 3)
			{
		        new car = GetPlayerVehicleID(playerid);
		        ChangeVehicleColor(car,79,79);
		        CarInfo[car][cColorOne] = 79;
                CarInfo[car][cColorTwo] = 79;
		        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		        ShowPlayerDialog(playerid, MenuTuning2, DIALOG_STYLE_LIST, "Selecciona un Color", "Negro\nBlanco\nRojo\nAzul\nVerde\nAmarillo\nRosa\nMarr�n\nAtr�s", "Seleccionar", "Salir");

			}
			if(listitem == 4)
			{
		        new car = GetPlayerVehicleID(playerid);
		        ChangeVehicleColor(car,86,86);
		        CarInfo[car][cColorOne] = 86;
                CarInfo[car][cColorTwo] = 86;
		        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		        ShowPlayerDialog(playerid, MenuTuning2, DIALOG_STYLE_LIST, "Selecciona un Color", "Negro\nBlanco\nRojo\nAzul\nVerde\nAmarillo\nRosa\nMarr�n\nAtr�s", "Seleccionar", "Salir");

			}
			if(listitem == 5)
			{
		        new car = GetPlayerVehicleID(playerid);
		        ChangeVehicleColor(car,6,6);
		        CarInfo[car][cColorOne] = 6;
                CarInfo[car][cColorTwo] = 6;
		        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		        ShowPlayerDialog(playerid, MenuTuning2, DIALOG_STYLE_LIST, "Selecciona un Color", "Negro\nBlanco\nRojo\nAzul\nVerde\nAmarillo\nRosa\nMarr�n\nAtr�s", "Seleccionar", "Salir");

			}
			if(listitem == 6)
           {
		        new car = GetPlayerVehicleID(playerid);
		        ChangeVehicleColor(car,126,126);
		        CarInfo[car][cColorOne] = 126;
                CarInfo[car][cColorTwo] = 126;
		        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		        ShowPlayerDialog(playerid, MenuTuning2, DIALOG_STYLE_LIST, "Selecciona un Color", "Negro\nBlanco\nRojo\nAzul\nVerde\nAmarillo\nRosa\nMarr�n\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 7)
			{
		        new car = GetPlayerVehicleID(playerid);
		        ChangeVehicleColor(car,66,66);
		        CarInfo[car][cColorOne] = 66;
                CarInfo[car][cColorTwo] = 66;
		        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		        ShowPlayerDialog(playerid, MenuTuning2, DIALOG_STYLE_LIST, "Selecciona un Color", "Negro\nBlanco\nRojo\nAzul\nVerde\nAmarillo\nRosa\nMarr�n\nAtr�s", "Seleccionar", "Salir");
            }
            if(listitem == 8)
			{
				ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
		}
	}
	if(dialogid == MenuTuning3)
	{
		if(response)
		{
			if(listitem == 0)
			{
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
	pmodelovehiculo[playerid] == 560)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelovehiculo[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1034);
               			CarInfo[car][cEscape] = 1034;
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            	ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1046);
					    CarInfo[car][cEscape] = 1046;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1065);
					    CarInfo[car][cEscape] = 1065;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1064);
					    CarInfo[car][cEscape] = 1064;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1028);
					    CarInfo[car][cEscape] = 1028;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1089);
					    CarInfo[car][cEscape] = 1089;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
	    			}
    			}
  			 	else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
                }
            }
			if(listitem == 1)
            {
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
				pmodelovehiculo[playerid] == 560)
   {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 562)
			        {
			            AddVehicleComponent(car,1037);
                        CarInfo[car][cEscape] = 1037;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1045);
					    CarInfo[car][cEscape] = 1045;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1066);
         				CarInfo[car][cEscape] = 1066;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1059);
					    CarInfo[car][cEscape] = 1059;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1029);
					    CarInfo[car][cEscape] = 1029;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1092);
					    CarInfo[car][cEscape] = 1092;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
			if(listitem == 2)
            {
                if(pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536 ||
				pmodelovehiculo[playerid] == 576 ||
				pmodelovehiculo[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 575)
			        {
			            AddVehicleComponent(car,1044);
			            CarInfo[car][cEscape] = 1044;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 534)
					{
					    AddVehicleComponent(car,1126);
					    CarInfo[car][cEscape] = 1126;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 567)
					{
					    AddVehicleComponent(car,1129);
					    CarInfo[car][cEscape] = 1129;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 536)
					{
					    AddVehicleComponent(car,1104);
					    CarInfo[car][cEscape] = 1104;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 535)
					{
					    AddVehicleComponent(car,1113);
					    CarInfo[car][cEscape] = 1113;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 576)
					{
					    AddVehicleComponent(car,1136);
					    CarInfo[car][cEscape] = 1136;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
	}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
			if(listitem == 3)
            {
                if(pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536 ||
				pmodelovehiculo[playerid] == 576 ||
				pmodelovehiculo[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 575)
			        {
			            AddVehicleComponent(car,1043);
			            CarInfo[car][cEscape] = 1043;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 534)
					{
					    AddVehicleComponent(car,1127);
					    CarInfo[car][cEscape] = 1127;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 567)
					{
					    AddVehicleComponent(car,1132);
					    CarInfo[car][cEscape] = 1132;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 536)
					{
					    AddVehicleComponent(car,1105);
					    CarInfo[car][cEscape] = 1105;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}

					else if(pmodelovehiculo[playerid] == 535)
					{
					    AddVehicleComponent(car,1114);
					    CarInfo[car][cEscape] = 1114;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}

					else if(pmodelovehiculo[playerid] == 576)
					{
					    AddVehicleComponent(car,1135);
					    CarInfo[car][cEscape] = 1135;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning3, DIALOG_STYLE_LIST, "Selecciona un tubo de escape", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\nAtr�s", "Seleccionar", "Salir");
					}
                }
	else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
			if(listitem == 4)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
	    }
	}

	if(dialogid == MenuTuning4)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
	pmodelovehiculo[playerid] == 560)
				{
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelovehiculo[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1171);
		            	CarInfo[car][cParachoDelan] = 1171;
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            	ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1153);
					    CarInfo[car][cParachoDelan] = 1153;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1160);
					    CarInfo[car][cParachoDelan] = 1160;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1155);
					    CarInfo[car][cParachoDelan] = 1155;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1169);
					    CarInfo[car][cParachoDelan] = 1169;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1166);
					    CarInfo[car][cParachoDelan] = 1166;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
	}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
	           	}
            }
			if(listitem == 1)
            {
				if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
	pmodelovehiculo[playerid] == 560)
				{

			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 562)
			        {
			            AddVehicleComponent(car,1172);
			            CarInfo[car][cParachoDelan] = 1172;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1152);
					    CarInfo[car][cParachoDelan] = 1152;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1173);
					    CarInfo[car][cParachoDelan] = 1173;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
						AddVehicleComponent(car,1157);
					    CarInfo[car][cParachoDelan] = 1157;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1170);
					    CarInfo[car][cParachoDelan] = 1170;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1165);
					    CarInfo[car][cParachoDelan] = 1165;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
    }
				else
				{
			    	SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
		    }
			if(listitem == 2)
            {
                if(pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536 ||
				pmodelovehiculo[playerid] == 576 ||
	pmodelovehiculo[playerid] == 535)
				{
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 575)
			        {
			            AddVehicleComponent(car,1174);
			            CarInfo[car][cParachoDelan] = 1174;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 534)
					{
					    AddVehicleComponent(car,1179);
					    CarInfo[car][cParachoDelan] = 1179;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 567)
					{
					    AddVehicleComponent(car,1189);
					    CarInfo[car][cParachoDelan] = 1189;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 536)
					{
					    AddVehicleComponent(car,1182);
					    CarInfo[car][cParachoDelan] = 1182;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 535)
					{
					    AddVehicleComponent(car,1115);
					    CarInfo[car][cParachoDelan] = 1115;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 576)
					{
					    AddVehicleComponent(car,1191);
					    CarInfo[car][cParachoDelan] = 1191;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
	}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 3)
            {
                if(pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536 ||
	            pmodelovehiculo[playerid] == 576 ||
	pmodelovehiculo[playerid] == 576)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 575)
			        {
			            AddVehicleComponent(car,1175);
			            CarInfo[car][cParachoDelan] = 1175;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 534)
					{
					    AddVehicleComponent(car,1185);
					    CarInfo[car][cParachoDelan] = 1185;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 567)
					{
					    AddVehicleComponent(car,1188);
					    CarInfo[car][cParachoDelan] = 1188;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 536)
					{
					    AddVehicleComponent(car,1181);
					    CarInfo[car][cParachoDelan] = 1181;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
                    else if(pmodelovehiculo[playerid] == 535)
					{
					    AddVehicleComponent(car,1116);
                        CarInfo[car][cParachoDelan] = 1116;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 576)
					{
					    AddVehicleComponent(car,1190);
					    CarInfo[car][cParachoDelan] = 1190;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning4, DIALOG_STYLE_LIST, "Selecciona un parachoques delantero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
	}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
	           	}
            }
			if(listitem == 4)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
        }
	}

	if(dialogid == MenuTuning5)
	{
		if(response)
		{
			if(listitem == 0)
			{
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
				pmodelovehiculo[playerid] == 560)
    {
                    new car = GetPlayerVehicleID(playerid);
		            if(pmodelovehiculo[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1149);
		            	CarInfo[car][cParachoTrase] = 1149;
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            	ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1150);
					    CarInfo[car][cParachoTrase] = 1150;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1159);
					    CarInfo[car][cParachoTrase] = 1159;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1154);
					    CarInfo[car][cParachoTrase] = 1159;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1141);
					    CarInfo[car][cParachoTrase] = 1141;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1168);
					    CarInfo[car][cParachoTrase] = 1168;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
	}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
			if(listitem == 1)
            {
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
    pmodelovehiculo[playerid] == 560)
		        {

					new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 562)
			        {
			            AddVehicleComponent(car,1148);
			            CarInfo[car][cParachoTrase] = 1148;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		                ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1151);
					    CarInfo[car][cParachoTrase] = 1151;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				        ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1161);
					    CarInfo[car][cParachoTrase] = 1161;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				        ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1156);
					    CarInfo[car][cParachoTrase] = 1156;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				        ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1140);
					    CarInfo[car][cParachoTrase] = 1140;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				        ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1167);
					    CarInfo[car][cParachoTrase] = 1167;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				        ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
			}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
			if(listitem == 2)
            {
                if(pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536 ||
				pmodelovehiculo[playerid] == 576 ||
	pmodelovehiculo[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 575)
			        {
			            AddVehicleComponent(car,1176);
			            CarInfo[car][cParachoTrase] = 1176;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 534)
					{
					    AddVehicleComponent(car,1180);
					    CarInfo[car][cParachoTrase] = 1180;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 567)
					{
					    AddVehicleComponent(car,1187);
					    CarInfo[car][cParachoTrase] = 1187;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 536)
					{
					    AddVehicleComponent(car,1184);
					    CarInfo[car][cParachoTrase] = 1184;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 535)
					{
					    AddVehicleComponent(car,1109);
					    CarInfo[car][cParachoTrase] = 1109;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 576)
					{
					    AddVehicleComponent(car,1192);
					    CarInfo[car][cParachoTrase] = 1192;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
		}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
			if(listitem == 3)
            {
                if(pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536 ||
				pmodelovehiculo[playerid] == 576 ||
	pmodelovehiculo[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 575)
			        {
			            AddVehicleComponent(car,1177);
			            CarInfo[car][cParachoTrase] = 1177;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 534)
					{
					    AddVehicleComponent(car,1178);
					    CarInfo[car][cParachoTrase] = 1178;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 567)
					{
					    AddVehicleComponent(car,1186);
					    CarInfo[car][cParachoTrase] = 1186;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 536)
					{
					    AddVehicleComponent(car,1183);
					    CarInfo[car][cParachoTrase] = 1183;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}

					else if(pmodelovehiculo[playerid] == 535)
					{
					    AddVehicleComponent(car,1110);
					    CarInfo[car][cParachoTrase] = 1110;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}

					else if(pmodelovehiculo[playerid] == 576)
					{
					    AddVehicleComponent(car,1193);
					    CarInfo[car][cParachoTrase] = 1193;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning5, DIALOG_STYLE_LIST, "Selecciona un parachoques trasero", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\nAtr�s", "Seleccionar", "Salir");
					}
 }
				else
				{
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
            if(listitem == 4)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
        }
	}
	if(dialogid == MenuTuning6)
	{
		if(response)
		{
			if(listitem == 0)
			{
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
				pmodelovehiculo[playerid] == 560)
    {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelovehiculo[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1035);
		            	CarInfo[car][cTecho] = 1035;
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            	ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1054);
					    CarInfo[car][cTecho] = 1054;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1067);
					    CarInfo[car][cTecho] = 1067;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1055);
					    CarInfo[car][cTecho] = 1055;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1032);
					    CarInfo[car][cTecho] = 1032;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1088);
					    CarInfo[car][cTecho] = 1088;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
	        if(listitem == 1)
			{
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
    pmodelovehiculo[playerid] == 560)
          {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 562)
			        {
			            AddVehicleComponent(car,1035);
			            CarInfo[car][cTecho] = 1035;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1053);
					    CarInfo[car][cTecho] = 1053;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1068);
					    CarInfo[car][cTecho] = 1068;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1061);
					    CarInfo[car][cTecho] = 1061;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1033);
					    CarInfo[car][cTecho] = 1033;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1091);
					    CarInfo[car][cTecho] = 1091;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 2)
			{
                if(pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 567)
			        {
			            AddVehicleComponent(car,1130);
						CarInfo[car][cTecho] = 1130;
			     		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
	   				else if(pmodelovehiculo[playerid] == 536)
					{
					    AddVehicleComponent(car,1128);
						CarInfo[car][cTecho] = 1128;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
		    if(listitem == 3)
			{
				if(pmodelovehiculo[playerid] == 567 ||
				pmodelovehiculo[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 567)
			        {
			            AddVehicleComponent(car,1131);
			            CarInfo[car][cTecho] = 1131;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
	   				else if(pmodelovehiculo[playerid] == 536)
					{
					    AddVehicleComponent(car,1103);
					    CarInfo[car][cTecho] = 1103;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                        ShowPlayerDialog(playerid, MenuTuning6, DIALOG_STYLE_LIST, "Selecciona un techo", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
            if(listitem == 4)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
		}
	}

	if(dialogid == MenuTuning7)
	{
		if(response)
		{
			if(listitem == 0)
			{
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
	pmodelovehiculo[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelovehiculo[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1147);
		            	CarInfo[car][cAleron] = 1147;
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            	ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1049);
					    CarInfo[car][cAleron] = 1049;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1162);
					    CarInfo[car][cAleron] = 1162;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1158);
					    CarInfo[car][cAleron] = 1158;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1138);
					    CarInfo[car][cAleron] = 1138;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1164);
					    CarInfo[car][cAleron] = 1164;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
    	    }
            if(listitem == 1)
			{
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
	pmodelovehiculo[playerid] == 560)
		        {
                    new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 562)
			        {
			            AddVehicleComponent(car,1146);
			            CarInfo[car][cAleron] = 1146;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1150);
					    CarInfo[car][cAleron] = 1150;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1158);
					    CarInfo[car][cAleron] = 1158;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1060);
					    CarInfo[car][cAleron] = 1060;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1139);
					    CarInfo[car][cAleron] = 1139;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1163);
					    CarInfo[car][cAleron] = 1163;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning7, DIALOG_STYLE_LIST, "Selecciona un aleron", "Alien Spoiler\nX-Flow Spoiler\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
            }
            if(listitem == 2)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
		}
	}

	if(dialogid == MenuTuning8)
	{
		if(response)
		{
			if(listitem == 0)
			{
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
	pmodelovehiculo[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelovehiculo[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1036);
		            	AddVehicleComponent(car,1040);
		            	CarInfo[car][cEmbellecedor] = 1036;
		            	CarInfo[car][cEmbellecedor2] = 1040;
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            	ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1047);
					    AddVehicleComponent(car,1051);
					    CarInfo[car][cEmbellecedor] = 1047;
		            	CarInfo[car][cEmbellecedor2] = 1051;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1069);
					    AddVehicleComponent(car,1071);
					    CarInfo[car][cEmbellecedor] = 1069;
		            	CarInfo[car][cEmbellecedor2] = 1071;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1056);
					    AddVehicleComponent(car,1062);
					    CarInfo[car][cEmbellecedor] = 1056;
		            	CarInfo[car][cEmbellecedor2] = 1062;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1026);
					    AddVehicleComponent(car,1027);
					    CarInfo[car][cEmbellecedor] = 1026;
		            	CarInfo[car][cEmbellecedor2] = 1027;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1090);
					    AddVehicleComponent(car,1094);
					    CarInfo[car][cEmbellecedor] = 1090;
		            	CarInfo[car][cEmbellecedor2] = 1094;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
		    }
	   	    if(listitem == 1)
			{
                if(pmodelovehiculo[playerid] == 562 ||
				pmodelovehiculo[playerid] == 565 ||
				pmodelovehiculo[playerid] == 559 ||
				pmodelovehiculo[playerid] == 561 ||
				pmodelovehiculo[playerid] == 560)
		        {
				    new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 562)
			        {
			            AddVehicleComponent(car,1039);
			            AddVehicleComponent(car,1041);
			            CarInfo[car][cEmbellecedor] = 1039;
		            	CarInfo[car][cEmbellecedor2] = 1041;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 565)
					{
					    AddVehicleComponent(car,1048);
					    AddVehicleComponent(car,1052);
					    CarInfo[car][cEmbellecedor] = 1048;
		            	CarInfo[car][cEmbellecedor2] = 1052;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 559)
					{
					    AddVehicleComponent(car,1070);
					    AddVehicleComponent(car,1072);
					    CarInfo[car][cEmbellecedor] = 1070;
		            	CarInfo[car][cEmbellecedor2] = 1072;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 561)
					{
					    AddVehicleComponent(car,1057);
					    AddVehicleComponent(car,1063);
					    CarInfo[car][cEmbellecedor] = 1057;
		            	CarInfo[car][cEmbellecedor2] = 1063;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 560)
					{
					    AddVehicleComponent(car,1031);
					    AddVehicleComponent(car,1030);
					    CarInfo[car][cEmbellecedor] = 1031;
		            	CarInfo[car][cEmbellecedor2] = 1030;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
					else if(pmodelovehiculo[playerid] == 558)
					{
					    AddVehicleComponent(car,1093);
					    AddVehicleComponent(car,1095);
					    CarInfo[car][cEmbellecedor] = 1093;
		            	CarInfo[car][cEmbellecedor2] = 1095;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
		    }
		    if(listitem == 2)
			{
				if(pmodelovehiculo[playerid] == 575 ||
				pmodelovehiculo[playerid] == 536 ||
				pmodelovehiculo[playerid] == 576 ||
				pmodelovehiculo[playerid] == 567)
				{
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 575)
			        {
	       		        AddVehicleComponent(car,1042);
	       		        AddVehicleComponent(car,1099);
	       		        CarInfo[car][cEmbellecedor] = 1042;
		            	CarInfo[car][cEmbellecedor2] = 1099;
	       		        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
	   				else if(pmodelovehiculo[playerid] == 567)
					{
					    AddVehicleComponent(car,1102);
					    AddVehicleComponent(car,1133);
					    CarInfo[car][cEmbellecedor] = 1102;
		            	CarInfo[car][cEmbellecedor2] = 1133;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	    		        ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
	                }
	                else if(pmodelovehiculo[playerid] == 576)
					{
					    AddVehicleComponent(car,1134);
					    AddVehicleComponent(car,1137);
					    CarInfo[car][cEmbellecedor] = 1134;
		            	CarInfo[car][cEmbellecedor2] = 1137;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	    		        ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
	                }
	                else if(pmodelovehiculo[playerid] == 536)
					{
					    AddVehicleComponent(car,1108);
					    AddVehicleComponent(car,1107);
					    CarInfo[car][cEmbellecedor] = 1108;
		            	CarInfo[car][cEmbellecedor2] = 1107;
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	                    ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
	                }
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
	        }
	  	    if(listitem == 3)
			{
                if(pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 534)
			        {
			            AddVehicleComponent(car,1122);
			            AddVehicleComponent(car,1101);
			            CarInfo[car][cEmbellecedor] = 1122;
		            	CarInfo[car][cEmbellecedor2] = 1101;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,VERDE,"Taller: Has puesto a tu coche un Locos Low Chrome Flames Side Skirts component on Remington.");
			            ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 4)
			{
                if(pmodelovehiculo[playerid] == 534 ||
				pmodelovehiculo[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 534)
			        {
			            AddVehicleComponent(car,1106);
			            AddVehicleComponent(car,1124);
			            CarInfo[car][cEmbellecedor] = 1106;
		            	CarInfo[car][cEmbellecedor2] = 1124;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 5)
			{
                if(pmodelovehiculo[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 535)
			        {
			            AddVehicleComponent(car,1118);
			            AddVehicleComponent(car,1120);
			            CarInfo[car][cEmbellecedor] = 1118;
		            	CarInfo[car][cEmbellecedor2] = 1120;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);

			            ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 6)
			{
                if(pmodelovehiculo[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 535)
			        {
			            AddVehicleComponent(car,1119);
			            AddVehicleComponent(car,1121);
			            CarInfo[car][cEmbellecedor] = 1119;
		            	CarInfo[car][cEmbellecedor2] = 1121;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning8, DIALOG_STYLE_LIST, "Selecciona un SideSkirt", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 7)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
		}
	}
	if(dialogid == MenuTuning9)
	{
		if(response)
		{
			if(listitem == 0)
			{
                if(pmodelovehiculo[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 534)
			        {
			            AddVehicleComponent(car,1100);
						CarInfo[car][cParachoDesco] = 1100;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning9, DIALOG_STYLE_LIST, "Selecciona un parachoques", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\nAtr�s", "Seleccionar", "Salir");
			        }
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 1)
			{
                if(pmodelovehiculo[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 534)
			        {
			            AddVehicleComponent(car,1123);
			            CarInfo[car][cParachoDesco] = 1123;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning9, DIALOG_STYLE_LIST, "Selecciona un parachoques", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 2)
			{
                if(pmodelovehiculo[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 534)
			        {
			            AddVehicleComponent(car,1125);
			            CarInfo[car][cParachoDesco] = 1125;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning9, DIALOG_STYLE_LIST, "Selecciona un parachoques", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 3)
			{
                if(pmodelovehiculo[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelovehiculo[playerid] == 535)
			        {
			            AddVehicleComponent(car,1117);
			            CarInfo[car][cParachoDesco] = 1117;
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            ShowPlayerDialog(playerid, MenuTuning9, DIALOG_STYLE_LIST, "Selecciona un parachoques", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\nAtr�s", "Seleccionar", "Salir");
					}
				}
				else
				{
				    SendClientMessage(playerid,GRIS,"Taller:�No puedes poner este complemento a este coche!");
					ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
				}
			}
			if(listitem == 4)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
		}
	}

	if(dialogid == MenuTuning10)
	{
		if(response)
		{
			if(listitem == 0)
			{
                 new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1025);
		         CarInfo[car][cLlantas] = 1025;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	             ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
	        }
            if(listitem == 1)
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1074);
			     CarInfo[car][cLlantas] = 1074;
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
            if(listitem == 2)
			{
                 new car = GetPlayerVehicleID(playerid);
	             AddVehicleComponent(car,1076);
	             CarInfo[car][cLlantas] = 1076;
			     ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
	        if(listitem == 3)
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1078);
			     CarInfo[car][cLlantas] = 1078;
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 4)
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1081);
			     CarInfo[car][cLlantas] = 1081;
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 5)
			{
                 new car = GetPlayerVehicleID(playerid);
                 AddVehicleComponent(car,1082);
                 CarInfo[car][cLlantas] = 1082;
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 6)
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1085);
			     CarInfo[car][cLlantas] = 1085;
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                 ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 7)
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1096);
			     CarInfo[car][cLlantas] = 1096;
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 8)
			{
                 new car = GetPlayerVehicleID(playerid);
                 AddVehicleComponent(car,1097);
                 CarInfo[car][cLlantas] = 1097;
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                 ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 9)
			{
				new car = GetPlayerVehicleID(playerid);
				AddVehicleComponent(car,1098);
				CarInfo[car][cLlantas] = 1098;
				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 10)
			{
                 ShowPlayerDialog(playerid, MenuTuning13, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 11)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }

		}
	}

	if(dialogid == MenuTuning11)
	{
		if(response)
		{
			if(listitem == 0)
			{
				new car = GetPlayerVehicleID(playerid);
				AddVehicleComponent(car,1086);
				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				ShowPlayerDialog(playerid, MenuTuning11, DIALOG_STYLE_LIST, "Selecciona un reproductor de m�sica de coche.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning11, DIALOG_STYLE_LIST, "Selecciona un reproductor de m�sica de coche.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning11, DIALOG_STYLE_LIST, "Selecciona un reproductor de m�sica de coche.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning11, DIALOG_STYLE_LIST, "Selecciona un reproductor de m�sica de coche.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 4)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
		}
	}

	if(dialogid == MenuTuning12)
	{
		if(response)
		{
			if(listitem == 0)
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1087);
		         CarInfo[car][cHidraulica] = 1087;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning12, DIALOG_STYLE_LIST, "Men� tuning de coche", "Suspensi�n Hidr�ulica\nNitro x10\nReparar Coche\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1010);
		         CarInfo[car][cNitro] = 1010;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning12, DIALOG_STYLE_LIST, "Men� tuning de coche", "Suspensi�n Hidr�ulica\nNitro x10\nReparar Coche\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
		         new car = GetPlayerVehicleID(playerid);
		         SetVehicleHealth(car,1000);
		         RepairVehicle(GetPlayerVehicleID(playerid));
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning12, DIALOG_STYLE_LIST, "Men� tuning de coche", "Suspensi�n Hidr�ulica\nNitro x10\nReparar Coche\nAtr�s", "Seleccionar", "Salir");
			}
			if(listitem == 3)
            {
                 ShowPlayerDialog(playerid, MenuTuning, DIALOG_STYLE_LIST, "Men� tuning de coche","Paint Jobs\nColores\nEscapes\nParachoques delantero\nParachoques Trasero\nTecho\nAlerones\nSide Skirts\nParachoques\nRuedas\nReproductores de m�sica\nSiguiente>>", "Seleccionar", "Salir");
            }
		}
	}

	if(dialogid == MenuTuning13)
	{
		if(response)
		{
			if(listitem == 0)
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1084);
		         CarInfo[car][cLlantas] = 1084;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning13, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nAtr�s", "Seleccionar", "Salir");
            }
            if(listitem == 1)
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1073);
		         CarInfo[car][cLlantas] = 1073;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning13, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nAtr�s", "Seleccionar", "Salir");
            }
            if(listitem == 2)
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1075);
		         CarInfo[car][cLlantas] = 1075;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning13, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nAtr�s", "Seleccionar", "Salir");
            }
            if(listitem == 3)
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1077);
		         CarInfo[car][cLlantas] = 1077;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning13, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nAtr�s", "Seleccionar", "Salir");
            }
            if(listitem == 4)
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1079);
		         CarInfo[car][cLlantas] = 1079;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning13, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nAtr�s", "Seleccionar", "Salir");
            }
            if(listitem == 5)
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1080);
		         CarInfo[car][cLlantas] = 1080;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning13, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nAtr�s", "Seleccionar", "Salir");
            }
            if(listitem == 6)
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1083);
		         CarInfo[car][cLlantas] = 1083;
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         ShowPlayerDialog(playerid, MenuTuning13, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nAtr�s", "Seleccionar", "Salir");
            }
            if(listitem == 7)
            {
		         ShowPlayerDialog(playerid, MenuTuning10, DIALOG_STYLE_LIST, "Selecciona un tipo de ruedas", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nSiguiente>>\nAtr�s", "Seleccionar", "Salir");
            }
		}
    }
	if(dialogid == MArmas)
	{
		new rango[256];
	    if(response)
	    {
	        if(listitem == 0)
	        {
	        	if(Informacion[playerid][Materiales] >= 10)
			    {
				    GivePlayerWeapon(playerid, 4, 1);
				    Informacion[playerid][Materiales] -= 10;
				    format(rango, sizeof(rango), "* %s cre� un arma con materiales", NombreEx(playerid));
				    RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "No tienes suficientes materiales");
			        return 1;
			    }
	        }
	        if(listitem == 1)
	        {
	            if(Informacion[playerid][Materiales] >= 50)
			    {
				    GivePlayerWeapon(playerid, 22, 50);
				    Informacion[playerid][Materiales] -= 50;
				    format(rango, sizeof(rango), "* %s cre� un arma con materiales", NombreEx(playerid));
				    RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "No tienes suficientes materiales");
			        return 1;
			    }
	        }
	        if(listitem == 2)
	        {
	            if(Informacion[playerid][Materiales] >= 80)
			    {
				    GivePlayerWeapon(playerid, 23, 50);
				    Informacion[playerid][Materiales] -= 80;
				    format(rango, sizeof(rango), "* %s cre� un arma con materiales", NombreEx(playerid));
				    RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "No tienes suficientes materiales");
			        return 1;
			    }
	        }
	        if(listitem == 3)
	        {
	            if(Informacion[playerid][Materiales] >= 100)
			    {
				    GivePlayerWeapon(playerid, 24, 50);
				    Informacion[playerid][Materiales] -= 100;
				    format(rango, sizeof(rango), "* %s cre� un arma con materiales", NombreEx(playerid));
				    RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "No tienes suficientes materiales");
			        return 1;
			    }
	        }
	        if(listitem == 4)
	        {
	            if(Informacion[playerid][Materiales] >= 120)
			    {
				    GivePlayerWeapon(playerid, 32, 200);
				    Informacion[playerid][Materiales] -= 120;
				    format(rango, sizeof(rango), "* %s cre� un arma con materiales", NombreEx(playerid));
				    RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "No tienes suficientes materiales");
			        return 1;
			    }
	        }
	        if(listitem == 5)
	        {
	            if(Informacion[playerid][Materiales] >= 150)
			    {
				    GivePlayerWeapon(playerid, 29, 300);
				    Informacion[playerid][Materiales] -= 150;
				    format(rango, sizeof(rango), "* %s cre� un arma con materiales", NombreEx(playerid));
				    RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			    }
			    else
			    {
			        SendClientMessage(playerid, GRIS, "No tienes suficientes materiales");
			        return 1;
			    }
	        }
	        if(listitem == 6)
	        {
	            if(PlayerBomba[playerid] == 0)
			    {
			        if(Informacion[playerid][Materiales] >= 500)
			    	{
				        if(IsPlayerAttachedObjectSlotUsed(playerid,1) == 0) { SetPlayerAttachedObject(playerid, 1, 1654, 6); }
				        else
				        {
				            SendClientMessage(playerid, GRIS, "No tienes donde sostener la bomba");
				            return 1;
				        }
				    	Informacion[playerid][Materiales] -= 500;
				    	format(rango, sizeof(rango), "* %s cre� un arma con materiales", NombreEx(playerid));
				    	RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				    	PlayerBomba[playerid] = 1;
				    }
				    else
				    {
				        SendClientMessage(playerid, GRIS, "No tienes suficientes materiales");
				        return 1;
				    }
			    }
			    else if(PlayerBomba[playerid] == 1)
			    {
			        SendClientMessage(playerid, GRIS,"Ya has creado una bomba");
			        return 1;
			    }
			    else if(PlayerBomba[playerid] == 2)
			    {
			        SendClientMessage(playerid, GRIS,"Debes detonar primero la bomba que has creado");
			        return 1;
			    }
	        }
	    }
	}
	if(dialogid == Renta)
	{
    	new dinero = GetPlayerMoney(playerid);
	    if(response)
	    {
	        if(dinero <= 199)
			{
				SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para rentar el vehiculo!");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(Rentado[GetPlayerVehicleID(playerid)] == 0 && Informacion[playerid][HeRentado] == 0)
		 	{
		        Rentado[GetPlayerVehicleID(playerid)] = 1;
		        SendClientMessage(playerid, VERDE, "Has rentado el vehiculo por $200");
 				GivePlayerMoney(playerid, -200);
		        Informacion[playerid][VRentado] = GetPlayerVehicleID(playerid);
		        Informacion[playerid][HeRentado] = 1;
	        }
	        else
	        {
	            SendClientMessage(playerid, ROJO ,"El vehiculo ya est� rentado!");
	            RemovePlayerFromVehicle(playerid);
	        }
	    }
	    else
	    {
	    	SendClientMessage(playerid, ROJO, "Has decidido no rentar el vehiculo.");
	    	RemovePlayerFromVehicle(playerid);
	    }
	}
	if(dialogid == OGanzua)
	{
	    if(response)
	    {
	        if(GetPlayerMoney(playerid) > GanzuaPrecio[playerid])
		    {
				new rango[256];
				new giveplayer[MAX_PLAYER_NAME];
				GivePlayerMoney(GanzuaOferta[playerid], GanzuaPrecio[playerid]);
				GivePlayerMoney(playerid, -GanzuaPrecio[playerid]);
				Informacion[playerid][Ganzuas] += GanzuaCantidad[playerid];
				Informacion[GanzuaOferta[playerid]][Ganzuas] -= GanzuaCantidad[playerid];
				GetPlayerName(GanzuaOferta[playerid], giveplayer, sizeof(giveplayer));
				format(rango, sizeof(rango), "** %s te ha comprado %d ganzuas por $%d **", NombreEx(playerid), GanzuaCantidad[playerid], GanzuaPrecio[playerid]);
				SendClientMessage(GanzuaOferta[playerid], VERDE, rango);
				format(rango, sizeof(rango), "** Le has comprado a %s %d ganzuas por $%d **", giveplayer, GanzuaCantidad[playerid], GanzuaPrecio[playerid]);
				SendClientMessage(playerid, VERDE, rango);
				GanzuaPrecio[playerid] = 0;
				GanzuaOferta[playerid] = 999;
				GanzuaCantidad[playerid] = 0;
				return 1;
			}
	    }
	    else
	    {
			SendClientMessage(playerid, GRIS, "Has rechazado la propuesta de venta de ganzuas");
		}
	}
	if(dialogid == OGuarda)
	{
	    if(response)
	    {
		   if(GetPlayerMoney(playerid) > GanzuaPrecio[playerid])
		   {
				new rango[256];
				new giveplayer[MAX_PLAYER_NAME];
				GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
				format(rango, sizeof(rango), "* Has aceptado la proteccion por $%d del Guardaespalda %s.",GuardPrice[playerid],giveplayer);
				SendClientMessage(playerid, VERDE, rango);
				format(rango, sizeof(rango), "* %s ha aceptado tu proteccion, y se a�adieron $%d ha tu paga.",NombreEx(playerid),GuardPrice[playerid]);
                GivePlayerMoney(GuardOffer[playerid], GuardPrice[playerid]);
				GivePlayerMoney(playerid, -GuardPrice[playerid]);
				SetPlayerArmour(playerid, 50.0);
				SetPlayerArmour(GuardOffer[playerid], 50.0);
				GuardOffer[playerid] = 999;
				GuardPrice[playerid] = 0;
				return 1;
			}
	    }
	    else
	    {
			SendClientMessage(playerid, GRIS, "Has rechazado la propuesta de venta de ganzuas");
		}
	}
	if(dialogid == ONegocio)
	{
	    if(response)
	    {
	        if(IDnComprar[playerid] >= 500)
			{
				new negocio = IDnComprar[playerid]-500;
		        if(GetPlayerMoney(playerid) < PrecioPComprar[playerid]) { return SendClientMessage(playerid, GRIS, " No tienes suficiente dinero"); }
			    if(BizzInfo[negocio][bOwned] == 0)
			    {
                    Informacion[playerid][Negocio] = IDnComprar[playerid];
					BizzInfo[negocio][bOwned] = 1;
					strmid(BizzInfo[negocio][bOwner], NombreEx(playerid), 0, strlen(NombreEx(playerid)), 255);
					GivePlayerMoney(playerid,-PrecioNComprar[playerid]);
					GivePlayerMoney(OfertaNComprar[playerid],PrecioNComprar[playerid]);
					OfertaNComprar[playerid] = 9999;
					SendClientMessage(playerid, AZULCLARO, "Felicitaciones, en tu nueva compra.");
					SendClientMessage(playerid, BLANCO, "Utiliza /ayuda para ver los comandos de negocio.");
                    DateProp(playerid);
					OnPropUpdate();
					return 1;
				}
				if(SBizzInfo[negocio][sbOwned] == 0)
			    {
	                Informacion[playerid][Negocio] = IDnComprar[playerid];
	                IDnComprar[playerid] -= 100;
					SBizzInfo[negocio][sbOwned] = 1;
					strmid(SBizzInfo[negocio][sbOwner], NombreEx(playerid), 0, strlen(NombreEx(playerid)), 255);
					GivePlayerMoney(playerid,-PrecioNComprar[playerid]);
					GivePlayerMoney(OfertaNComprar[playerid],PrecioNComprar[playerid]);
					OfertaNComprar[playerid] = 9999;
					SendClientMessage(playerid, AZULCLARO, "Felicitaciones, en tu nueva compra.");
					SendClientMessage(playerid, BLANCO, "Utiliza /ayuda para ver los comandos de negocio.");
	                DateProp(playerid);
					OnPropUpdate();
					return 1;
				}
			}
	    }
	    else
	    {
			SendClientMessage(playerid, GRIS, "Has rechazado la propuesta de venta de negocios");
		}
	}
	if(dialogid == OPropiedad)
	{
	    if(response)
	    {
		    if(OfertaPComprar[playerid] != 9999)
		    {
		        if(GetPlayerMoney(playerid) < PrecioPComprar[playerid]) { return SendClientMessage(playerid, GRIS, " No tienes suficiente dinero"); }
		        if(HouseInfo[IDpComprar[playerid]][hOwned] == 0)
		        {
			        Informacion[playerid][Casa] = IDpComprar[playerid];
					HouseInfo[IDpComprar[playerid]][hOwned] = 1;
					strmid(HouseInfo[IDpComprar[playerid]][hOwner], NombreEx(playerid), 0, strlen(NombreEx(playerid)), 255);
					GivePlayerMoney(playerid,-PrecioPComprar[playerid]);
					GivePlayerMoney(OfertaPComprar[playerid],PrecioPComprar[playerid]);
					OfertaPComprar[playerid] = 9999;
					SendClientMessage(playerid, VERDE, "Felicitaciones, en tu nueva compra !");
					SendClientMessage(playerid, BLANCO, "Utiliza /ayuda para ver los comandos de tu casa !");
                    DateProp(playerid);
					OnPropUpdate();
					return 1;
				}
			}
	    }
	    else
	    {
			SendClientMessage(playerid, GRIS, "Has rechazado la propuesta de venta de propiedad");
		}
	}
	if(dialogid == OAuto)
	{
	    if(response)
	    {
			new rango[256];
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(OfertaCoche[playerid], giveplayer, sizeof(giveplayer));
			
			GivePlayerMoney(OfertaCoche[playerid], PrecioCoche[playerid]);
			GivePlayerMoney(playerid, -PrecioCoche[playerid]);
			CarInfo[IDcCoche[playerid]][cVenta] = 1;
			strmid(CarInfo[IDcCoche[playerid]][cNameD], NombreEx(playerid), 0, strlen(NombreEx(playerid)), 999);
			CarInfo[IDcCoche[playerid]][cTComprado] = 168;
			Informacion[playerid][Coche] = IDcCoche[playerid];
			format(rango, sizeof(rango), "** Felicidades!, has comprado un veh�culo por $%d al vendedor %s **", PrecioCoche[playerid], giveplayer);
			SendClientMessage(playerid, AZULCLARO, rango);
			SendClientMessage(playerid, AZULCLARO, "Para ver los comandos de tu veh�culo Utiliza /ayuda");
            format(rango, sizeof(rango), "** %s te ha comprado un veh�culo por $%d, informalo m�s sobre su nueva compra **", NombreEx(playerid), PrecioCoche[playerid]);
            SendClientMessage(OfertaCoche[playerid], AZULCLARO, rango);
            OnPropUpdate();
			TogglePlayerControllable(playerid, DESCONGELADO);
            OfertaCoche[playerid] = 999;
            PrecioCoche[playerid] = 0;
            IDcCoche[playerid] = 9999;
			RemovePlayerFromVehicle(OfertaCoche[playerid]);
	    }
	    else
	    {
			SendClientMessage(playerid, GRIS, "Has rechazado la propuesta de compra del vendedor de coches");
			SendClientMessage(RepairOffer[playerid], GRIS, "Lo siento, el usuario que ofresiste el coche lo ha ignorado");
		}
	}
	if(dialogid == Documentos)
	{
	    if(response)
	    {
			new rango[256];
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
			
			GivePlayerMoney(RepairOffer[playerid], RepairPrice[playerid]);
			format(rango, sizeof(rango), "* Has recibido una DNI de a $%d por el agente %s",RepairPrice[playerid],giveplayer);
			SendClientMessage(playerid, VERDE, rango);
			format(rango, sizeof(rango), "* Diste una DNI a %s por $%d",NombreEx(playerid),RepairPrice[playerid]);
			SendClientMessage(RepairOffer[playerid], VERDE, rango);
			RepairOffer[playerid] = 999;
			RepairPrice[playerid] = 0;
			Informacion[playerid][DNI] = 1;
			new CIn = 100000 + random(899999);
			Informacion[playerid][CI] = CIn;
			format(rango, sizeof(rango), "Su numero de CI es %d", Informacion[playerid][CI]);
    		SendClientMessage(playerid, AMARILLO, rango);
	    }
	    else
	    {
			SendClientMessage(playerid, GRIS, "Has rechazado la propuesta de ventas de DNI");
			SendClientMessage(RepairOffer[playerid], GRIS, "Lo siento, el usuario que ofresiste tu ayuda la ha ignorado");
			RepairOffer[playerid] = 999;
			RepairPrice[playerid] = 0;
		}
	}
	if(dialogid == OMecanico)
	{
	    if(response)
	    {
			new rango[256];
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
			
	        RepairCar[playerid] = GetPlayerVehicleID(playerid);
	        SetVehicleHealth(RepairCar[playerid], 700.0);
			GivePlayerMoney(RepairOffer[playerid], RepairPrice[playerid]);
	        RepairVehicle(GetPlayerVehicleID(playerid));
			format(rango, sizeof(rango), "* Tu coche fue reparado por $%d, por el mecanico %s",RepairPrice[playerid],giveplayer);
			SendClientMessage(playerid, VERDE, rango);
			format(rango, sizeof(rango), "* Reparaste el coche de %s por $%d",NombreEx(playerid),RepairPrice[playerid]);
			SendClientMessage(RepairOffer[playerid], VERDE, rango);
			RepairOffer[playerid] = 999;
			RepairPrice[playerid] = 0;
	    }
	    else
	    {
			SendClientMessage(playerid, GRIS, "Has rechazado la propuesta de reparacion del mecanico");
			SendClientMessage(RepairOffer[playerid], GRIS, "Lo siento, el usuario que ofresiste tu ayuda la ha ignorado");
			RepairOffer[playerid] = 999;
			RepairPrice[playerid] = 0;
		}
	}
	if(dialogid == Renta2)
	{
    	new dinero = GetPlayerMoney(playerid);
	    if(response)
	    {
	        if(dinero <= 999)
			{
				SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para rentar el vehiculo!");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(Rentado[GetPlayerVehicleID(playerid)] == 0 && Informacion[playerid][HeRentado2] == 0)
		 	{
		        Rentado[GetPlayerVehicleID(playerid)] = 1;
		        SendClientMessage(playerid, VERDE, "Has rentado el vehiculo por $1000");
 				GivePlayerMoney(playerid, -1000);
		        Informacion[playerid][VRentado2] = GetPlayerVehicleID(playerid);
		        Informacion[playerid][HeRentado2] = 1;
	        }
	        else
	        {
	            SendClientMessage(playerid, ROJO ,"El vehiculo ya est� rentado!");
	            RemovePlayerFromVehicle(playerid);
	        }
	    }
	    else
	    {
	    	SendClientMessage(playerid, ROJO, "Has decidido no rentar el vehiculo.");
	    	RemovePlayerFromVehicle(playerid);
	    }
	}
	if(dialogid == Musica)
	{
	    if(listitem == 0)
	  	{
			if(Reproduciendo[playerid] == 1)
			{
				SendClientMessage(playerid, GRIS, "Ya estas escuchano musica, Utiliza /pararmusica, para detenerla");
				return 1;
			}
			SendClientMessage(playerid, AZULCLARO, "Reproduciendo: {FFFFFF}Shampagne Showers - LMFAO");
		  	Audio_Play(playerid, 1, false, false, false);
			Reproduciendo[playerid] = 1;
		}
		if(listitem == 1)
		{
			if(Reproduciendo[playerid] == 1)
			{
				SendClientMessage(playerid, GRIS, "Ya estas escuchano musica, Utiliza /pararmusica, para detenerla");
				return 1;
			}
			SendClientMessage(playerid, AZULCLARO, "Reproduciendo: {FFFFFF}Sexy Bitch - David Guetta");
		  	Audio_Play(playerid, 2, false, false, false);
			Reproduciendo[playerid] = 1;
		}
		if(listitem == 2)
		{
			if(Reproduciendo[playerid] == 1)
			{
				SendClientMessage(playerid, GRIS, "Ya estas escuchano musica, Utiliza /pararmusica, para detenerla");
				return 1;
			}
			SendClientMessage(playerid, AZULCLARO, "Reproduciendo: {FFFFFF}Where dem Girls At - David Guetta ft Flo rida");
		  	Audio_Play(playerid, 3, false, false, false);
			Reproduciendo[playerid] = 1;
		}
		if(listitem == 3)
		{
			if(Reproduciendo[playerid] == 1)
			{
				SendClientMessage(playerid, GRIS, "Ya estas escuchano musica, Utiliza /pararmusica, para detenerla");
				return 1;
			}
			SendClientMessage(playerid, AZULCLARO, "Reproduciendo: {FFFFFF}In The End - Linking Park");
		  	Audio_Play(playerid, 4, false, false, false);
			Reproduciendo[playerid] = 1;
		}
		if(listitem == 5)
		{
			if(Reproduciendo[playerid] == 1)
			{
				SendClientMessage(playerid, GRIS, "Ya estas escuchano musica, Utiliza /pararmusica, para detenerla");
				return 1;
			}
			SendClientMessage(playerid, AZULCLARO, "Reproduciendo: {FFFFFF}Yeah - Usher");
		  	Audio_Play(playerid, 5, false, false, false);
			Reproduciendo[playerid] = 1;
		}
		if(listitem == 6)
		{
			if(Reproduciendo[playerid] == 1)
			{
				SendClientMessage(playerid, GRIS, "Ya estas escuchano musica, Utiliza /pararmusica, para detenerla");
				return 1;
			}
			SendClientMessage(playerid, AZULCLARO, "Reproduciendo: {FFFFFF}You spin my head - Flo Rida");
		  	Audio_Play(playerid, 6, false, false, false);
			Reproduciendo[playerid] = 1;
		}
	}
	if(dialogid ==  TPorno)
	{
		if(response)
	    {
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, TCPorno, DIALOG_STYLE_LIST, "- Complementos Sexuales","[$25] - Pack de 5 preservativos\n[$50] - Consolador de Color Purpura\n[$100] - Consolador con vibrador chico\n[$150] - Consolador con vibrador grande\n[$200] - Consolador de plata","Comprar","Salir");
			}
			if(listitem == 1)
			{
			    ShowPlayerDialog(playerid, TTPorno, DIALOG_STYLE_LIST, "- Trajes Sexuales","[$1000] - Kit de Trajes para Prostitutas\n[$1500] - Kit de trajes de ba�o\n[$2000] - Kit de trajes de fantasia sexual","Comprar","Salir");
			}
		}
	}
	if(dialogid == Tienda)
	{
		new dinero = GetPlayerMoney(playerid);
		if(listitem == 0)
		{
		    if(dinero <= 9)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			Informacion[playerid][Caramelos] += 10;
			GivePlayerMoney(playerid, -10);
			SendClientMessage(playerid, AZULCLARO, "Has comprado 10 caramelos a $10");
		}
		if(listitem == 1)
		{
		    if(dinero <= 49)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerWeapon(playerid, 43, 20);
			GivePlayerMoney(playerid, -50);
			SendClientMessage(playerid, AZULCLARO, "Has comprado una camara de fotos a $50");
		}
		if(listitem == 2)
		{
		    if(dinero <= 59)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerMoney(playerid, -60);
			Informacion[playerid][Cigarrillos] += 20;
			SendClientMessage(playerid, AZULCLARO, "Has comprado una cajilla de 20 cigarrillos a $60");
		}
		if(listitem == 3)
		{
		    if(dinero <= 99)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerMoney(playerid, -100);
			new rango[256];
			new randomtlf = 100000 + random(899999);
			Informacion[playerid][Telefono] = randomtlf;
			SendClientMessage(playerid, AMARILLO, "Felicidades,  ahora tienes un tel�fono celular, Utiliza /ayuda para saber sus comandos");
			format(rango, sizeof(rango), "Su numero de celular es %d", randomtlf);
			SendClientMessage(playerid, BLANCO, rango);
		}
		if(listitem == 4)
		{
		    if(dinero <= 149)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerMoney(playerid, -150);
			Informacion[playerid][MP3] = 1;
			SendClientMessage(playerid, AZULCLARO, "Has comprado un reproductor de MP3 por $150, Utiliza /reproductor para escuchar musica");
		}
		if(listitem == 5)
		{
		    if(dinero <= 199)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerMoney(playerid, -200);
			Informacion[playerid][Saldo] = 300;
			SendClientMessage(playerid, AZULCLARO, "Has comprado una recarga de $300 en Saldo para tu celular");
		}
		if(listitem == 6)
		{
		    if(dinero <= 99)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerMoney(playerid, -100);
			Informacion[playerid][Relog] = 1;
			SendClientMessage(playerid, AZULCLARO, "Has comprado un relog marca CASIO en $100");
		}
	}
	if(dialogid == TCPorno)
	{
		new dinero = GetPlayerMoney(playerid);
		if(listitem == 0)
		{
		    if(dinero <= 24)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			Informacion[playerid][Preservativos] += 5;
			GivePlayerMoney(playerid, -25);
			SendClientMessage(playerid, AZULCLARO, "Has comprado un pack de 5 preservativos a $25");
		}
		if(listitem == 1)
		{
		    if(dinero <= 49)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerWeapon(playerid, 10, 1);
			GivePlayerMoney(playerid, -50);
			SendClientMessage(playerid, AZULCLARO, "Has comprado un complemento del sexshop");
		}
		if(listitem == 2)
		{
		    if(dinero <= 99)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerWeapon(playerid, 11, 1);
			GivePlayerMoney(playerid, -100);
			SendClientMessage(playerid, AZULCLARO, "Has comprado un complemento del sexshop");
		}
		if(listitem == 3)
		{
		    if(dinero <= 149)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerWeapon(playerid, 12, 1);
			GivePlayerMoney(playerid, -150);
			SendClientMessage(playerid, AZULCLARO, "Has comprado un complemento del sexshop");
		}
		if(listitem == 4)
		{
		    if(dinero <= 199)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			GivePlayerWeapon(playerid, 13, 1);
			GivePlayerMoney(playerid, -200);
			SendClientMessage(playerid, AZULCLARO, "Has comprado un complemento del sexshop");
		}
	}
	if(dialogid == TTPorno)
	{
		new dinero = GetPlayerMoney(playerid);
		if(listitem == 0)
		{
		    if(dinero <= 999)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			Informacion[playerid][Kit1] = 1;
			GivePlayerMoney(playerid, -1000);
			SendClientMessage(playerid, AZULCLARO, "Has comprado un nuevo kit de trajes, Utiliza /trajes para ponerte el que quieras");
		}
		if(listitem == 1)
		{
		    if(dinero <= 1449)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			Informacion[playerid][Kit2] = 1;
			GivePlayerMoney(playerid, -1500);
			SendClientMessage(playerid, AZULCLARO, "Has comprado un nuevo kit de trajes, Utiliza /trajes para ponerte el que quieras");
		}
		if(listitem == 2)
		{
		    if(dinero <= 1999)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar esto");
		        return 1;
			}
			Informacion[playerid][Kit3] = 1;
			GivePlayerMoney(playerid, -2000);
			SendClientMessage(playerid, AZULCLARO, "Has comprado un nuevo kit de trajes, Utiliza /trajes para ponerte el que quieras");
		}
	}
	if(dialogid == CSkinYakuza)
	{
		new rango[256];
		if(listitem == 0)
	    {
			SetPlayerSkin(playerid, 169);
			Informacion[playerid][Skin] = 169;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 1)
		{
			if(Informacion[playerid][Rango] != 1)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 1 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 117);
			Informacion[playerid][Skin] = 1337;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 2)
		{
			if(Informacion[playerid][Rango] != 2)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 2 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 118);
			Informacion[playerid][Skin] = 118;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 3)
		{
			if(Informacion[playerid][Rango] != 3)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 3 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 120);
			Informacion[playerid][Skin] = 120;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 4)
		{
			if(Informacion[playerid][Rango] != 4)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 4 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 121);
			Informacion[playerid][Skin] = 121;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 5)
		{
			if(Informacion[playerid][Rango] != 5)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 5 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 122);
			Informacion[playerid][Skin] = 122;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 6)
		{
			if(Informacion[playerid][Rango] != 6)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 6 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 272);
			Informacion[playerid][Skin] = 272;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 7)
		{
			if(Informacion[playerid][Rango] != 7)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 7 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 294);
			Informacion[playerid][Skin] = 294;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 8)
		{
			if(Informacion[playerid][Rango] != 8)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 8 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 123);
			Informacion[playerid][Skin] = 123;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
	}
	if(dialogid == CSkinCorleone)
	{
		new rango[256];
		if(listitem == 0)
	    {
	        SetPlayerSkin(playerid, 216);
	        format(rango, sizeof(rango),"* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
	        RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 1)
		{
			if(Informacion[playerid][Rango] != 1)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 1 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 112);
			Informacion[playerid][Skin] = 112;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 2)
		{
			if(Informacion[playerid][Rango] != 2)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 2 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 125);
    		Informacion[playerid][Skin] = 125;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 3)
		{
			if(Informacion[playerid][Rango] != 3)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 3 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 126);
			Informacion[playerid][Skin] = 126;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 4)
		{
			if(Informacion[playerid][Rango] != 4)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 4 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 124);
			Informacion[playerid][Skin] = 124;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 5)
		{
			if(Informacion[playerid][Rango] != 5)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 5 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 127);
			Informacion[playerid][Skin] = 127;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 6)
		{
			if(Informacion[playerid][Rango] != 6)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 6 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 111);
			Informacion[playerid][Skin] = 111;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 7)
		{
			if(Informacion[playerid][Rango] != 7)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 7 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 240);
			Informacion[playerid][Skin] = 240;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
		if(listitem == 8)
		{
			if(Informacion[playerid][Rango] != 8)
			{
			    SendClientMessage(playerid, GRIS, "Lo siento, solo miembros de rango 8 pueden Utilizar este skin");
			    return 1;
			}
			SetPlayerSkin(playerid, 113);
			Informacion[playerid][Skin] = 113;
			format(rango, sizeof(rango), "* %s abre el armario, saca unas prendas y se las pone", NombreEx(playerid));
			RangoCercano(20, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
		}
	}
	if(dialogid == CAdrenalina)
	{
		new dinero = GetPlayerMoney(playerid);
		if(listitem == 0)
		{
		    if(dinero <= 249)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar adrenalina");
		        return 1;
			}
			Informacion[playerid][Adrenalina] += 5;
			GivePlayerMoney(playerid, -250);
			SendClientMessage(playerid, AZULCLARO, "Has comprado unas pastillas de adrenalina, Utiliza /Utilizaradrenalina para Utilizarlas");
		}
		if(listitem == 1)
		{
		    if(dinero <= 399)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar adrenalina");
		        return 1;
			}
			Informacion[playerid][Adrenalina] += 10;
			GivePlayerMoney(playerid, -400);
			SendClientMessage(playerid, AZULCLARO, "Has comprado unas pastillas de adrenalina, Utiliza /Utilizaradrenalina para Utilizarlas");
		}
		if(listitem == 2)
		{
		    if(dinero <= 599)
		    {
		        SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para comprar adrenalina");
		        return 1;
			}
			Informacion[playerid][Adrenalina] += 25;
			GivePlayerMoney(playerid, -600);
			SendClientMessage(playerid, AZULCLARO, "Has comprado unas pastillas de adrenalina, Utiliza /Utilizaradrenalina para Utilizarlas");
		}
	}
	if(dialogid == Gimnasio)
	{
    	new dinero = GetPlayerMoney(playerid);
		new rango[256];
	    if(listitem == 0)
	  	{
  	        if(dinero <= 50)
			{
				SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para aprender este movimiento de lucha");
				return 1;
			}
			Informacion[playerid][SLucha] = 1;
			GivePlayerMoney(playerid, -50);
			GameTextForPlayer(playerid, "~w~Has Pagado ~g~$200!", 4000, 1);
	  		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
	  		
			format(rango, sizeof(rango), "* %s se prepara para entrenar", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetTimerEx("DefaultTrain", 1000, false, "i", playerid);
		}
	    if(listitem == 1)
	  	{
  	        if(dinero <= 249)
			{
				SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para aprender este movimiento de lucha");
				return 1;
			}
			Informacion[playerid][SLucha] = 2;
			GivePlayerMoney(playerid, -50);
			GameTextForPlayer(playerid, "~w~Has Pagado ~g~$200!", 4000, 1);
	  		SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
	  		
			format(rango, sizeof(rango), "* %s se prepara para entrenar", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetTimerEx("BoxTrain", 1000, false, "i", playerid);
		}
	    if(listitem == 2)
	  	{
  	        if(dinero <= 349)
			{
				SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para aprender este movimiento de lucha");
				return 1;
			}
			Informacion[playerid][SLucha] = 3;
			GivePlayerMoney(playerid, -50);
			GameTextForPlayer(playerid, "~w~Has Pagado ~g~$200!", 4000, 1);
	  		SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
	  		
			format(rango, sizeof(rango), "* %s se prepara para entrenar", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetTimerEx("KungTrain", 1000, false, "i", playerid);
		}
	    if(listitem == 3)
	  	{
  	        if(dinero <= 399)
			{
				SendClientMessage(playerid, GRIS, "No tienes suficiente dinero para aprender este movimiento de lucha");
				return 1;
			}
			Informacion[playerid][SLucha] = 4;
			GivePlayerMoney(playerid, -50);
			GameTextForPlayer(playerid, "~w~Has Pagado ~g~$200!", 4000, 1);
	  		SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
	  		
			format(rango, sizeof(rango), "* %s se prepara para entrenar", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			SetTimerEx("GrabTrain", 1000, false, "i", playerid);
  		}
	}
	if(dialogid == Menu)
	{
	    if(listitem == 0)
	    {
			GivePlayerMoney(playerid, -10);
			Informacion[playerid][Hidratacion] += 40;
			Informacion[playerid][Hambre] += 10;
			SendClientMessage(playerid, AMARILLO,"�Helado com�n comprado a $10!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Sangre] += 5;
		}
		if(listitem == 1)
	    {
			GivePlayerMoney(playerid, -20);
			Informacion[playerid][Hidratacion] += 40;
			Informacion[playerid][Hambre] += 10;
			SendClientMessage(playerid, AMARILLO,"�Helado triple comprado a $20!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Sangre] += 6;
		}
		if(listitem == 2)
	    {
			GivePlayerMoney(playerid, -35);
			Informacion[playerid][Hidratacion] += 40;
			Informacion[playerid][Hambre] += 10;
			SendClientMessage(playerid, AMARILLO,"�Cono extra dulce comprado a $35!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Sangre] += 8;
		}
		if(listitem == 3)
	    {
			GivePlayerMoney(playerid, -70);
			Informacion[playerid][Hidratacion] -= 40;
			Informacion[playerid][Hambre] += 60;
			SendClientMessage(playerid, AMARILLO,"�Milanesa com�n comprada a $70!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Sangre] += 9;
		}
		if(listitem == 4)
	    {
			GivePlayerMoney(playerid, -80);
			SendClientMessage(playerid, AMARILLO,"�Milanesa rellena con queso comprada a $80!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Hidratacion] -= 40;
			Informacion[playerid][Hambre] += 60;
			Informacion[playerid][Sangre] += 10;
		}
		if(listitem == 5)
	    {
			GivePlayerMoney(playerid, -90);
			SendClientMessage(playerid, AMARILLO,"�Pizza com�n con queso comprada a $90!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Hidratacion] -= 40;
			Informacion[playerid][Hambre] += 60;
			Informacion[playerid][Sangre] += 11;
		}
		if(listitem == 6)
	    {
			GivePlayerMoney(playerid, -100);
			SendClientMessage(playerid, AMARILLO,"�Pizza rellena con carne comprada a $100!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Hidratacion] -= 40;
			Informacion[playerid][Hambre] += 80;
			Informacion[playerid][Sangre] += 12;
		}
		if(listitem == 7)
	    {
			GivePlayerMoney(playerid, -150);
			SendClientMessage(playerid, AMARILLO,"�Patas de Pollo fritas comprada a $150!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Hidratacion] -= 80;
			Informacion[playerid][Hambre] += 90;
			Informacion[playerid][Sangre] += 14;
		}
		if(listitem == 8)
	    {
			GivePlayerMoney(playerid, -200);
			SendClientMessage(playerid, AMARILLO,"�Asado con ensalada de tomate y lechuga comprada a $200!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Sangre] += 15;
		}
		if(listitem == 9)
	    {
			GivePlayerMoney(playerid, -250);
			SendClientMessage(playerid, AMARILLO,"�Cordero con ensalada de tomate y lechuga comprada a $250!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Sangre] += 16;
			Informacion[playerid][Hidratacion] -= 40;
			Informacion[playerid][Hambre] += 100;
		}
		if(listitem == 10)
	    {
			GivePlayerMoney(playerid, -300);
			SendClientMessage(playerid, AMARILLO,"�Menu especial comprado, has recibido: PFBI, Papas Chip, Pollo Frito, Jam�n tierno y queso italiano comprada a $300!");
			SetPlayerHealth(playerid, 100);
			Informacion[playerid][Sangre] += 17;
			Informacion[playerid][Hidratacion] += 100;
			Informacion[playerid][Hambre] += 100;
		}
	}
    if(dialogid == AColores)
    {
		if(listitem == 0)
        {
        	SendClientMessage(playerid, 0xB40000FF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0xB40000FF);
        }
        if(listitem == 1)
        {
         	SendClientMessage(playerid, 0x45A600FF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0x45A600FF);
        }
        if(listitem == 2)
        {
         	SendClientMessage(playerid, 0x00C6FFFF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0x00C6FFFF);
        }
        if(listitem == 3)
        {
         	SendClientMessage(playerid, 0xA3659FFF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0xA3659FFF);
        }
        if(listitem == 4)
        {
         	SendClientMessage(playerid, 0xD05CBCFF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0xD05CBCFF);
        }
        if(listitem == 5)
        {
         	SendClientMessage(playerid, 0xD0B554FF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0xD0B554FF);
        }
        if(listitem == 6)
        {
         	SendClientMessage(playerid, 0xFCFF00FF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0xFCFF00FF);
        }
        if(listitem == 7)
        {
         	SendClientMessage(playerid, 0x9AFF00FF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0x9AFF00FF);
        }
        if(listitem == 8)
        {
         	SendClientMessage(playerid, 0x59FFA1FF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0x59FFA1FF);
        }
        if(listitem == 9)
        {
         	SendClientMessage(playerid, 0x593A18FF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0x593A18FF);
        }
        if(listitem == 10)
        {
         	SendClientMessage(playerid, 0x0742FFFF,"�Color Cambiado!");
        	SetPlayerColor(playerid, 0x0742FFFF);
        }
        if(listitem == 11)
        {
         	SendClientMessage(playerid, BLANCO,"�Color Cambiado!");
        	SetPlayerColor(playerid, SINCOLOR);
		}
	}
    if(dialogid == Bebidas)
    {
		new rango[256];
		if(listitem == 0)
        {
			GivePlayerMoney(playerid, -10);
			Informacion[playerid][Cancer] -= 1;
			Informacion[playerid][Hidratacion] += 20;
			SendClientMessage(playerid, AMARILLO,"�Vaso de agua comprado a $10!, no te ha afectado tu �ndice de alcoholismo.");
			SetPlayerHealth(playerid, 100);
	   		format(rango, sizeof(rango), "* %s bebe un vaso con agua", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
        if(listitem == 1)
        {
			GivePlayerMoney(playerid, -50);
			Informacion[playerid][Cancer] += 5;
			Informacion[playerid][Hidratacion] += 20;
			SendClientMessage(playerid, AMARILLO,"�Cerveza com�n comprada a $50!, ha afectado un diez por ciento en tu �ndice de alcoholismo.");
			SetPlayerHealth(playerid, 100);
			SetPlayerDrunkLevel(playerid, 10000);
			SetTimerEx("TerminarBorrachera", 120000, false, "d", playerid);
	   		format(rango, sizeof(rango), "* %s bebe un vaso con Cerveza com�n", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
        if(listitem == 2)
        {
			Informacion[playerid][Cancer] += 10;
			GivePlayerMoney(playerid, -70);
			Informacion[playerid][Hidratacion] += 20;
			SendClientMessage(playerid, AMARILLO,"�Martini comprado a $70!, ha afectado un veinte por ciento en tu �ndice de alcoholismo.");
			SetPlayerHealth(playerid, 100);
			SetPlayerDrunkLevel(playerid, 20000);
			SetTimerEx("TerminarBorrachera", 120000, false, "d", playerid);
	   		format(rango, sizeof(rango), "* %s bebe un vaso con Martini", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
        if(listitem == 3)
        {
			Informacion[playerid][Cancer] += 20;
			GivePlayerMoney(playerid, -80);
			Informacion[playerid][Hidratacion] += 20;
			SendClientMessage(playerid, AMARILLO,"�Ceveza suiza comprada a $80!, ha afectado un treinta por ciento en tu �ndice de alcoholismo.");
			SetPlayerHealth(playerid, 100);
			SetPlayerDrunkLevel(playerid, 30000);
			SetTimerEx("TerminarBorrachera", 120000, false, "d", playerid);
	   		format(rango, sizeof(rango), "* %s bebe un vaso con Ceveza suiza", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
        if(listitem == 4)
        {
			GivePlayerMoney(playerid, -100);
			Informacion[playerid][Cancer] += 30;
			Informacion[playerid][Hidratacion] += 20;
			SendClientMessage(playerid, AMARILLO,"�Whiskey comprado a $100!, ha afectado un cincuenta por ciento en tu �ndice de alcoholismo.");
			SetPlayerHealth(playerid, 100);
			SetPlayerDrunkLevel(playerid, 50000);
			SetTimerEx("TerminarBorrachera", 120000, false, "d", playerid);
	   		format(rango, sizeof(rango), "* %s bebe un vaso con Whiskey", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
        if(listitem == 5)
        {
			GivePlayerMoney(playerid, -150);
			Informacion[playerid][Cancer] += 40;
			Informacion[playerid][Hidratacion] += 20;
			SendClientMessage(playerid, AMARILLO,"�Vodka comprado a $150!, ha afectado un setenta por ciento en tu �ndice de alcoholismo.");
			SetPlayerHealth(playerid, 100);
			SetPlayerDrunkLevel(playerid, 70000);
			SetTimerEx("TerminarBorrachera", 120000, false, "d", playerid);
	   		format(rango, sizeof(rango), "* %s bebe un vaso con Vodka", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
        if(listitem == 6)
        {
			GivePlayerMoney(playerid, -160);
			Informacion[playerid][Cancer] += 50;
			Informacion[playerid][Hidratacion] += 20;
			SendClientMessage(playerid, AMARILLO,"�Tequila comprado a $160!, ha afectado un ochenta por ciento en tu �ndice de alcoholismo.");
			SetPlayerHealth(playerid, 100);
			SetPlayerDrunkLevel(playerid, 80000);
			SetTimerEx("TerminarBorrachera", 120000, false, "d", playerid);
	   		format(rango, sizeof(rango), "* %s bebe un vaso con Tequila", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
        if(listitem == 7)
        {
			GivePlayerMoney(playerid, -200);
			Informacion[playerid][Cancer] += 80;
			Informacion[playerid][Hidratacion] += 20;
			SendClientMessage(playerid, AMARILLO,"�Ledy Killer comprada a $200!, ha afectado un cien por ciento en tu �ndice de alcoholismo.");
			SetPlayerHealth(playerid, 100);
			SetPlayerDrunkLevel(playerid, 100000);
			SetTimerEx("TerminarBorrachera", 120000, false, "d", playerid);
	   		format(rango, sizeof(rango), "* %s bebe un vaso con Ledy Killer", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		}
	}
	if(dialogid == Mercado)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
				GivePlayerWeapon(playerid, 1, 1);
				GivePlayerMoney(playerid, -10);
				SendClientMessage(playerid, AMARILLO, "Pu�o americano comprado a $10");
	        }
			if(listitem == 1)
	        {
				GivePlayerWeapon(playerid, 4, 1);
				GivePlayerMoney(playerid, -50);
				SendClientMessage(playerid, AMARILLO, "Cuchillo comprado a $50");
	        }
			if(listitem == 2)
	        {
				GivePlayerWeapon(playerid, 22, 50);
				GivePlayerMoney(playerid, -100);
				SendClientMessage(playerid, AMARILLO, "Pistola 9 mm comprada a $100");
	        }
			if(listitem == 3)
	        {
				Mascara[playerid] = 1;
				GivePlayerMoney(playerid, -150);
				SendClientMessage(playerid, AMARILLO, "Mascara comprada a $150");
	        }
			if(listitem == 4)
	        {
				GivePlayerWeapon(playerid, 24, 60);
				GivePlayerMoney(playerid, -150);
				SendClientMessage(playerid, AMARILLO, "Desert Eagle comprado a $250");
			}
			if(listitem == 5)
	        {
				new rango[256];
				Informacion[playerid][Codificadores] += 1;
				GivePlayerMoney(playerid, -300);
				new code = Informacion[playerid][Codificadores];
				format(rango, sizeof(rango), "Has obtenido un codificador para sistemas bancarios, tienes %d actualmente", code);
				SendClientMessage(playerid, BLANCO, rango);
			}
			if(listitem == 6)
	        {
				Venda[playerid] = 1;
				Cuerda[playerid] = 1;
				GivePlayerMoney(playerid, -350);
				SendClientMessage(playerid, AMARILLO, "Kit de Venda y Cuerda comprada a $350");
	        }
		}
		return 1;
	}
	if(dialogid == Idiomas)
 	{
   		if(response)
		{
		    if(Profesores < 1)
		    {
        		SendClientMessage(playerid, GRIS, "Lo siento, actualmente no hay profesores conectados");
		        return 1;
		    }
			new rango[256];
			format(rango, sizeof(rango), "Hemos llamado a todos los profesores conectados, aguarde en instantes");
    		SendClientMessage(playerid, AMARILLO, rango);
			format(rango, sizeof(rango), "El usuario %s ha pedido un professor, comunicarse con el numero %d", NombreEx(playerid),Informacion[playerid][Telefono]);
			MensajeLICE(VERDE, rango);
		}
		else
		{

	    }
		return 1;
	}
	if(dialogid == OLive)
 	{
	    new rango[256];
   		if(response)
		{
		    SendClientMessage(playerid, VERDE, "* Has aceptado la entrevista, todo lo que digas ahora lo escucharan todos.");
			SendClientMessage(LiveOffer[playerid], VERDE, "* Ha aceptado la entrevista, estas en vivo!, Utiliza /entrevista para finalizar");
			format(rango, sizeof(rango), "* %s toma el microfono cordialmente y se lo pone", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			TogglePlayerControllable(playerid, 0);
			TogglePlayerControllable(LiveOffer[playerid], 0);
			TalkingLive[playerid] = LiveOffer[playerid];
			TalkingLive[LiveOffer[playerid]] = playerid;
			LiveOffer[playerid] = 999;
		}
		else
		{
			format(rango, sizeof(rango), "* %s rechaza el microfono cordialmente", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			LiveOffer[playerid] = 999;
		}
		return 1;
	}
	if(dialogid == OMulta)
 	{
	    new rango[256];
   		if(response)
		{
			new giveplayer[MAX_PLAYER_NAME];
		    GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
			format(rango, sizeof(rango), "* Pagaste $%d al oficial %s.", TicketMoney[playerid], giveplayer);
			SendClientMessage(playerid, BLANCO, rango);
			format(rango, sizeof(rango), "* %s pag� tu multa por $%d.", NombreEx(playerid), TicketMoney[playerid]);
			SendClientMessage(TicketOffer[playerid], BLANCO, rango);
			format(rango, sizeof(rango), "* %s saca el dinero del bolsillo y le paga $%d al oficial", NombreEx(playerid), TicketMoney[playerid]);
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			GivePlayerMoney(playerid, -TicketMoney[playerid]);
			GivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
		}
		else
		{
			Informacion[playerid][Estrellas] += 2;
			format(rango, sizeof(rango), "* %s escupe la multa, la rompe y se la tira al oficial", NombreEx(playerid));
			RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
			ActualizarEstrellas(playerid);
		}
		return 1;
	}
	if(dialogid == Licencias)
 	{
   		if(response)
		{
		    if(Profesores < 1)
		    {
        		SendClientMessage(playerid, GRIS, "Lo siento, actualmente no hay licencieros conectados");
		        return 1;
		    }
			new rango[256];
			format(rango, sizeof(rango), "Hemos llamado a todos los licenciadores conectados, aguarde en instantes");
    		SendClientMessage(playerid, AMARILLO, rango);
			format(rango, sizeof(rango), "El usuario %s ha pedido un licenciador, comunicarse con el numero %d", Informacion[playerid][Telefono]);
			MensajeLICE(VERDE, rango);
		}
		else
		{

	    }
		return 1;
	}
	if(dialogid == Vestimenta)
	{
		if(response)
		{
		    if(listitem == 0)
		    {
		        SetPlayerSkin(playerid, 29);
			}
			if(listitem == 1)
		    {
		        SetPlayerSkin(playerid, 46);
			}
			if(listitem == 2)
		    {
		        SetPlayerSkin(playerid, 71);
			}
			if(listitem == 3)
		    {
		        SetPlayerSkin(playerid, 281);
			}
			if(listitem == 4)
		    {
		        SetPlayerSkin(playerid, 280);
			}
			if(listitem == 5)
		    {
		        SetPlayerSkin(playerid, 282);
			}
			if(listitem == 6)
		    {
		        SetPlayerSkin(playerid, 282);
			}
			if(listitem == 7)
		    {
		        SetPlayerSkin(playerid, 283);
			}
			if(listitem == 8)
		    {
		        SetPlayerSkin(playerid, 288);
			}
			if(listitem == 9)
		    {
		        SetPlayerSkin(playerid, 284);
			}
		}
		return 1;
	}
	if(dialogid == Armas)
	{
		if(response)
		{
		    if(listitem == 0)
		    {
				SendClientMessage(playerid, AMARILLO, "Spray comprado a $10 exitosamente, no olvides guardarlo en tu inventario.");
		        GivePlayerWeapon(playerid, 41, 100);
				GivePlayerMoney(playerid, -10);
			}
		    if(listitem == 1)
		    {
				SendClientMessage(playerid, AMARILLO, "Pu�o Americano comprado a $20 exitosamente, no olvides guardarlo en tu inventario.");
		        GivePlayerWeapon(playerid, 1, 1);
				GivePlayerMoney(playerid, -20);
			}
		    if(listitem == 2)
		    {
				SendClientMessage(playerid, AMARILLO, "Cuchillo comprado a $50 exitosamente, no olvides guardarlo en tu inventario.");
		        GivePlayerWeapon(playerid, 4, 1);
				GivePlayerMoney(playerid, -50);
			}
		    if(listitem == 3)
		    {
				SendClientMessage(playerid, AMARILLO, "Pistola 9 mm comprada a $100 exitosamente, no olvides guardarlo en tu inventario.");
		        GivePlayerWeapon(playerid, 22, 100);
				GivePlayerMoney(playerid, -100);
			}
		    if(listitem == 4)
		    {
				SendClientMessage(playerid, AMARILLO, "Desert Eagle comprada a $150 exitosamente, no olvides guardarlo en tu inventario.");
		        GivePlayerWeapon(playerid, 24, 150);
				GivePlayerMoney(playerid, -150);
			}
		    if(listitem == 5)
		    {
				SendClientMessage(playerid, AMARILLO, "Pistola con Silenciador comprado a $200 exitosamente, no olvides guardarlo en tu inventario.");
			    GivePlayerWeapon(playerid, 23, 100);
				GivePlayerMoney(playerid, -200);
			}
		    if(listitem == 6)
		    {
				SendClientMessage(playerid, AMARILLO, "Tec 9 comprado a $250 exitosamente, no olvides guardarlo en tu inventario.");
		        GivePlayerWeapon(playerid, 32, 200);
				GivePlayerMoney(playerid, -250);
			}
		    if(listitem == 7)
		    {
				SendClientMessage(playerid, AMARILLO, "Blindaje comprado a $260 exitosamente, no olvides guardarlo en tu inventario.");
		        SetPlayerArmour(playerid, 100);
				GivePlayerMoney(playerid, -260);
			}
		    if(listitem == 8)
		    {
				SendClientMessage(playerid, AMARILLO, "Sub Fusil MP5 comprado a $300 exitosamente, no olvides guardarlo en tu inventario.");
		        GivePlayerWeapon(playerid, 29, 200);
				GivePlayerMoney(playerid, -300);
			}
		    if(listitem == 9)
		    {
				SendClientMessage(playerid, AMARILLO, "Rifle de Cazeria comprado a $350 exitosamente, no olvides guardarlo en tu inventario.");
			    GivePlayerWeapon(playerid, 33, 100);
				GivePlayerMoney(playerid, -350);
			}
		    if(listitem == 10)
		    {
				SendClientMessage(playerid, AMARILLO, "Escopeta comprado a $400 exitosamente, no olvides guardarlo en tu inventario.");
			    GivePlayerWeapon(playerid, 25, 100);
				GivePlayerMoney(playerid, -400);
			}
		    if(listitem == 11)
		    {
				SendClientMessage(playerid, AMARILLO, "Rifle Francotirador comprado a $700 exitosamente, no olvides guardarlo en tu inventario.");
			    GivePlayerWeapon(playerid, 34, 100);
				GivePlayerMoney(playerid, -700);
			}
		    if(listitem == 12)
		    {
				SendClientMessage(playerid, AMARILLO, "Ametralladora automatica M4 comprada a $900 exitosamente, no olvides guardarlo en tu inventario.");
			    GivePlayerWeapon(playerid, 31, 200);
				GivePlayerMoney(playerid, -900);
			}
		    if(listitem == 13)
		    {
				SendClientMessage(playerid, AMARILLO, "Ametralladora autom�tica AK-47 comprada a $1000 exitosamente, no olvides guardarlo en tu inventario.");
			    GivePlayerWeapon(playerid, 30, 200);
				GivePlayerMoney(playerid, -1000);
			}
		}
		return 1;
	}
	if(dialogid == Equipar)
 	{
		if(response)
 		{
			if(listitem == 0)
			{
				new rango[128];
				format(rango, sizeof(rango), "- %s se coloca su equipo S.W.A.T Ligero", NombreEx(playerid));
				RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetPlayerAttachedObject(playerid, 0, 373, 1, 0.255219, -0.012552, -0.162815, 69.963966, 27.580476, 33.800472, 0.959405, 1.000000, 1.192921);
				SetPlayerSkin(playerid, 285);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 100);
				GivePlayerWeapon(playerid, 3, 1);
				GivePlayerWeapon(playerid, 17, 10);
				GivePlayerWeapon(playerid, 24, 250);
				GivePlayerWeapon(playerid, 29, 500);
			}
			if(listitem == 1)
			{
				new rango[128];
				format(rango, sizeof(rango), "- %s se coloca su equipo S.W.A.T Medino", NombreEx(playerid));
				RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetPlayerAttachedObject(playerid, 0, 373, 1, 0.255219, -0.012552, -0.162815, 69.963966, 27.580476, 33.800472, 0.959405, 1.000000, 1.192921);
				SetPlayerSkin(playerid, 285);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 100);
				GivePlayerWeapon(playerid, 3, 1);
				GivePlayerWeapon(playerid, 17, 60);
				GivePlayerWeapon(playerid, 24, 300);
				GivePlayerWeapon(playerid, 32, 600);
			}
			if(listitem == 2)
			{
				new rango[128];
				format(rango, sizeof(rango), "- %s se coloca su equipo S.W.A.T Pesado", NombreEx(playerid));
				RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetPlayerAttachedObject(playerid, 0, 373, 1, 0.255219, -0.012552, -0.162815, 69.963966, 27.580476, 33.800472, 0.959405, 1.000000, 1.192921);
				SetPlayerSkin(playerid, 285);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 100);
				GivePlayerWeapon(playerid, 3, 1);
				GivePlayerWeapon(playerid, 16, 15);
				GivePlayerWeapon(playerid, 27, 200);
				GivePlayerWeapon(playerid, 31, 600);
			}
			if(listitem == 3)
			{
				new rango[128];
				format(rango, sizeof(rango), "- %s se coloca su equipo de Espionaje", NombreEx(playerid));
				RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetPlayerSkin(playerid, 165);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 100);
				GivePlayerWeapon(playerid, 4, 1);
				GivePlayerWeapon(playerid, 23, 15);
				GivePlayerWeapon(playerid, 29, 200);
			}
			if(listitem == 4)
			{
				new rango[128];
				format(rango, sizeof(rango), "- %s se coloca su equipo de Francotirador", NombreEx(playerid));
				RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				SetPlayerSkin(playerid, 165);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 100);
				GivePlayerWeapon(playerid, 4, 1);
				GivePlayerWeapon(playerid, 23, 15);
				GivePlayerWeapon(playerid, 34, 350);
			}
			if(listitem == 5)
			{
				new rango[128];
				format(rango, sizeof(rango), "- %s retira todo su equipaje", NombreEx(playerid));
				RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
				RemovePlayerAttachedObject(playerid, 0);
				SetPlayerSkin(playerid, Informacion[playerid][Skin]);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 0);
				GivePlayerWeapon(playerid, 4, 0);
				GivePlayerWeapon(playerid, 23, 0);
				GivePlayerWeapon(playerid, 34, 0);
			}
		}
		return 1;
	}
	if(dialogid == Asensor)
 	{
   		if(response)
		{
			SetPlayerPos(playerid, 1568.6674,-1690.6655,5.8906);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
	     }
		 else
		 {
			SetPlayerPos(playerid, 1564.9000,-1665.9075,28.3956);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
	    }
		return 1;
	}
	if(dialogid == Documentos)
 	{
   		if(response)
		{
			if(Informacion[playerid][DNI] == 0)
			{
				Informacion[playerid][DNI] = 1;
				SendClientMessage(playerid, AMARILLO, "Felicidades, usted tine una cedula de identidad, ya eres legal.");
				SendClientMessage(playerid, BLANCO, "Utiliza el comando /documentos para ver su CI");
				GivePlayerMoney(playerid, -600);
				new CIn = 100000 + random(899999);
				Informacion[playerid][CI] = CIn;
	  		}
	   		else
			{
				SendClientMessage(playerid, ROJO, "Ya tienes una cedula de identidad");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, ROJO, "Usted ha rechazado ser legal, sigues siendo indocumentado");
	    }
		return 1;
	}
	if(dialogid == Terminos)
	{
	    if(response)
	    {
			SendClientMessage(playerid, VERDE, "Gracias por aceptar los terminos y condiciones");
			ShowPlayerDialog(playerid, DIALOG_TUTO1, DIALOG_STYLE_MSGBOX, "{0077FF}Tutorial", "{FFFFFF}Bienvenido a Vidas Paralelas RolePlay\nRecuerda que este servidor es del genero RPG y hay que respetar siertas reglas.\nSi necesitas ayuda puedes concurrir a un miembro de nuestro staff\nSi las reglas no se respetan puedes ser sansionado o echado permanentemente","Siguiente","");
		}
		else
		{
		    SendClientMessage(playerid, ROJO, "Lo siento, debes aceptar los terminos y condiciones");
		    Kick(playerid);
		    return 1;
		}
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	ActualizarCuenta(playerid);
	EstaConTraje[playerid] = 0;
    ConexionEntrante[playerid] = 0;
	Hospitalizado[playerid] = 1;
	Informacion[killerid][Estrellas] += 3;
	SendClientMessage(killerid, ROJO, "Has cometido un homicidio, se te suma 3 estrellas de busqueda");
	ActualizarEstrellas(killerid);
	new caller = Linea[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  GRIS, "La linea esta muerta");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Linea[caller] = 255;
		}
		Linea[playerid] = 255;
		CellTime[playerid] = 0;
	}
	return 0;
}

public LimpiarChat(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, BLANCO, " ");
		}
	}
	return 1;
}

public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public OcultarDNI(playerid)
{
	new rango[128];
	TextDrawHideForPlayer(playerid, DNI_FONDO);
	TextDrawHideForPlayer(playerid, DNI_NAME[playerid]);
	
	format(rango, sizeof(rango), "- %s guarda su cedula de identidad en sus documentos", NombreEx(playerid));
	RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	return 0;
}


public FinalDelTutorial(playerid)
{
	LimpiarChat(playerid, 10);
	Informacion[playerid][Registrado] = 1;
	Informacion[playerid][Nivel] = 1;
	Informacion[playerid][Tuto] = 1;
	SendClientMessage(playerid, NARANJA,"{FFFFFF}** �Bienvenido a Los Santos! **");
	SetPlayerPos(playerid, 1730.1110,-2334.1858,13.5469);
	SetPlayerFacingAngle(playerid, 0.4523);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	if(Informacion[playerid][Sexo] == 1)
	{
        SetPlayerSkin(playerid, 26);
		Informacion[playerid][Skin] = 26;
	}
	if(Informacion[playerid][Sexo] == 2)
	{
		SetPlayerSkin(playerid, 93);
		Informacion[playerid][Skin] = 93;
	}
	TogglePlayerControllable(playerid, 1);
	return 1;
}

public CargandoMap(playerid)
{
	TogglePlayerControllable(playerid, DESCONGELADO);
	return 0;
}

public TDrogaRosa(playerid)
{
	SetPlayerDrunkLevel(playerid, 100000);
	TextDrawHideForPlayer(playerid, DrogaRosa);
	TextDrawShowForPlayer(playerid, DrogaRoja);
	SetTimerEx("TDrogaRoja", 30000, false, "i", playerid);
	return 0;
}

public TDrogaRoja(playerid)
{
	SetPlayerDrunkLevel(playerid, 100000);
	TextDrawHideForPlayer(playerid, DrogaRoja);
	TextDrawShowForPlayer(playerid, DrogaVerde);
	SetTimerEx("TDrogaVerde", 30000, false, "i", playerid);
	return 0;
}

public TDrogaVerde(playerid)
{
	SetPlayerDrunkLevel(playerid, 100000);
	TextDrawHideForPlayer(playerid, DrogaVerde);
	TextDrawShowForPlayer(playerid, DrogaAmarilla);
	SetTimerEx("TDrogaAmarilla", 30000, false, "i", playerid);
	return 0;
}

public TDrogaAmarilla(playerid)
{
	SetPlayerDrunkLevel(playerid, 100000);
	TextDrawHideForPlayer(playerid, DrogaVerde);
	TextDrawShowForPlayer(playerid, DrogaAmarilla);
	SetTimerEx("TDrogaCeleste", 30000, false, "i", playerid);
	return 0;
}

public TDrogaCeleste(playerid)
{
	SetPlayerDrunkLevel(playerid, 100000);
	TextDrawHideForPlayer(playerid, DrogaAmarilla);
	TextDrawShowForPlayer(playerid, DrogaAzul);
	SetTimerEx("TDrogaAzul", 30000, false, "i", playerid);
	return 0;
}

public TDrogaAzul(playerid)
{
	SetPlayerDrunkLevel(playerid, 100000);
	TextDrawShowForPlayer(playerid, DrogaAzul);
	SetTimerEx("TDrogaTermianda", 30000, false, "i", playerid);
	return 0;
}

public TDrogaTermianda(playerid)
{
	new rango[256];
	EstaDrogado[playerid] = 0;
	SetPlayerDrunkLevel(playerid, 0);
	TextDrawHideForPlayer(playerid, DrogaAzul);
	TextDrawHideForPlayer(playerid, DrogaAmarilla);
	TextDrawHideForPlayer(playerid, DrogaRoja);
	TextDrawHideForPlayer(playerid, DrogaCeleste);
	TextDrawHideForPlayer(playerid, DrogaVerde);
	TextDrawHideForPlayer(playerid, DrogaRosa);
	format(rango, sizeof(rango),"Ha pasado el efecto del crack, pudes volver a drogarte");
	SendClientMessage(playerid,AZULCLARO, rango);
	format(rango, sizeof(rango), "* %s le duele la cabeza y tiene nauseas", NombreEx(playerid));
	RangoCercano(30.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	return 0;
}

public TerminarEfectoDroga(playerid)
{
	new rango[256];
	EstaDrogadoConAdrenalina[playerid] = 0;
	SetPlayerDrunkLevel(playerid, 0);
	TextDrawHideForPlayer(playerid, EAdrenalina);
	format(rango, sizeof(rango), "* %s le duele la cabeza despues de un alto ataque de adrenalina", NombreEx(playerid));
	RangoCercano(30, playerid, rango, VIOLETA, VIOLETA, VIOLETA, VIOLETA, VIOLETA);
	return 0;
}

public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

public CargarFondos()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("Propiedades/Fondos.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		CajaGobierno = strval(arrCoords[1]);
		CajaFuerteYKZ = strval(arrCoords[2]);
		CajaFuerteLCN = strval(arrCoords[3]);
		fclose(file);
		if(Security == 0 || Security == 1)
		{
		}
		else
		{
		    GameModeExit();
		}
	}
	else
	{
	    GameModeExit();
	}
	return 1;
}

public LoadCar()
{
	new arrCoords[24][64];
	new strFromFile2[256];
	new File: file = fopen("Propiedades/Coches.cfg", io_read);
	if (file)
	{
	    new idx = VV_DESDE;
		while (idx < sizeof(CarInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			CarInfo[idx][cModel] = strval(arrCoords[0]);
			CarInfo[idx][cLocationx] = floatstr(arrCoords[1]);
			CarInfo[idx][cLocationy] = floatstr(arrCoords[2]);
			CarInfo[idx][cLocationz] = floatstr(arrCoords[3]);
			CarInfo[idx][cAngle] = floatstr(arrCoords[4]);
			CarInfo[idx][cColorOne] = strval(arrCoords[5]);
			CarInfo[idx][cColorTwo] = strval(arrCoords[6]);
  			strmid(CarInfo[idx][cNameD], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			CarInfo[idx][cVenta] = strval(arrCoords[8]);
			CarInfo[idx][cLock] = strval(arrCoords[9]);
			CarInfo[idx][cTComprado] = strval(arrCoords[10]);
			CarInfo[idx][cGPS] = strval(arrCoords[11]);
			CarInfo[idx][cPaintJob] = strval(arrCoords[12]);
			CarInfo[idx][cNitro] = strval(arrCoords[13]);
			CarInfo[idx][cLlantas] = strval(arrCoords[14]);
			CarInfo[idx][cAleron] = strval(arrCoords[15]);
			CarInfo[idx][cParachoDelan] = strval(arrCoords[16]);
			CarInfo[idx][cParachoTrase] = strval(arrCoords[17]);
			CarInfo[idx][cHidraulica] = strval(arrCoords[18]);
			CarInfo[idx][cTecho] = strval(arrCoords[19]);
			CarInfo[idx][cEscape] = strval(arrCoords[20]);
			CarInfo[idx][cParachoDesco] = strval(arrCoords[21]);
			CarInfo[idx][cEmbellecedor] = strval(arrCoords[22]);
			CarInfo[idx][cEmbellecedor2] = strval(arrCoords[23]);
			idx++;
		}
	}
	return 1;
}

public ExtortionBiz(bizid, money)
{
    new rango[256];
    format(rango, sizeof(rango), "Ninguno");
    if(strcmp(BizzInfo[bizid][bExtortion],rango, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wrango[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(rango, sizeof(rango), "%s", name);
			strmid(wrango, rango, 0, strlen(rango), 255);
			if(strcmp(BizzInfo[bizid][bExtortion] ,wrango, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    GivePlayerMoney(i, value);
			    BizzInfo[bizid][bTill] -= value;
			}
		}
	}
	return 1;
}

public ExtortionSBiz(bizid, money)
{
    new rango[256];
    format(rango, sizeof(rango), "Ninguno");
    if(strcmp(SBizzInfo[bizid][sbExtortion],rango, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wrango[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(rango, sizeof(rango), "%s", name);
			strmid(wrango, rango, 0, strlen(rango), 255);
			if(strcmp(SBizzInfo[bizid][sbExtortion] ,wrango, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    GivePlayerMoney(i, value);
			    SBizzInfo[bizid][sbTill] -= value;
			}
		}
	}
	return 1;
}

public Proceso1(playerid)
{
	new rango[256];
	TogglePlayerControllable(playerid, 1);
	ProcesoFabricacion[playerid] = 2;
	SendClientMessage(playerid, AZULCLARO, "* Proceso completado!, ve a al siguiente paso.");
	format(rango, sizeof(rango), "* %s retira la materia amarillenta de crack de la procesadora", NombreEx(playerid));
	RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	return 0;
}

public Proceso2(playerid)
{
	new rango[256];
	TogglePlayerControllable(playerid, 1);
	ProcesoFabricacion[playerid] = 3;
	SendClientMessage(playerid, AZULCLARO, "* Calentado completado!, ve a al siguiente paso.");
	format(rango, sizeof(rango), "* %s retira un bloque de crack ya calentado del horno industrial", NombreEx(playerid));
	RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	return 0;
}

public Proceso3(playerid)
{
	new rango[256];
	TogglePlayerControllable(playerid, 1);
	ProcesoFabricacion[playerid] = 4;
	SendClientMessage(playerid, AZULCLARO, "* Enfriado completado!, ve a al siguiente paso.");
	format(rango, sizeof(rango), "* %s retira un bloque de crack ya enfriado del freezer industrial", NombreEx(playerid));
	RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	return 0;
}

public Proceso4(playerid)
{
	new rango[256];
	TogglePlayerControllable(playerid, 1);
	ProcesoFabricacion[playerid] = 5;
	SendClientMessage(playerid, AZULCLARO, "* Purificado completado!, ve a al siguiente paso.");
	format(rango, sizeof(rango), "* %s retira el crack de maxima puresa de la purificadora", NombreEx(playerid));
	RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	return 0;
}

public TiempoFabricado(playerid)
{
	ProcesoFabricacion[playerid] = 0;
	TogglePlayerControllable(playerid, 1);
	SendClientMessage(playerid, AZULCLARO, "* Ya puedes volver a fabricar drogas");
	return 0;
}

public Estudiando(playerid)
{
	new rango[256];
	if(IdiomaEstudiado[playerid] == 1)
	{
		Informacion[playerid][Inteligencia] += 2;
		IdiomaEstudiado[playerid] = 0;
		format(rango, sizeof(rango), "* %s se cansa y deja el libro en su bolso", NombreEx(playerid));
		RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	}
	else if(IdiomaEstudiado[playerid] == 2)
	{
		Informacion[playerid][Inteligencia] += 3;
		IdiomaEstudiado[playerid] = 0;
		format(rango, sizeof(rango), "* %s se cansa y deja el libro en su bolso", NombreEx(playerid));
		RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	}
	else if(IdiomaEstudiado[playerid] == 3)
	{
		Informacion[playerid][Inteligencia] += 3;
		IdiomaEstudiado[playerid] = 0;
		format(rango, sizeof(rango), "* %s se cansa y deja el libro en su bolso", NombreEx(playerid));
		RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	}
	else if(IdiomaEstudiado[playerid] == 4)
	{
		Informacion[playerid][Inteligencia] += 4;
		IdiomaEstudiado[playerid] = 0;
		format(rango, sizeof(rango), "* %s se cansa y deja el libro en su bolso", NombreEx(playerid));
		RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	}
	else if(IdiomaEstudiado[playerid] == 5)
	{
		Informacion[playerid][Inteligencia] += 4;
		IdiomaEstudiado[playerid] = 0;
		format(rango, sizeof(rango), "* %s se cansa y deja el libro en su bolso", NombreEx(playerid));
		RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	}
	else if(IdiomaEstudiado[playerid] == 6)
	{
		Informacion[playerid][Inteligencia] += 5;
		IdiomaEstudiado[playerid] = 0;
		format(rango, sizeof(rango), "* %s se cansa y deja el libro en su bolso", NombreEx(playerid));
		RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	}
	else if(IdiomaEstudiado[playerid] == 7)
	{
		Informacion[playerid][Inteligencia] += 5;
		IdiomaEstudiado[playerid] = 0;
		format(rango, sizeof(rango), "* %s se cansa y deja el libro en su bolso", NombreEx(playerid));
		RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	}
	else if(IdiomaEstudiado[playerid] == 8)
	{
		Informacion[playerid][Inteligencia] += 5;
		IdiomaEstudiado[playerid] = 0;
		format(rango, sizeof(rango), "* %s se cansa y deja el libro en su bolso", NombreEx(playerid));
		RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
	}
	else if(IdiomaEstudiado[playerid] == 9)
	{
		Informacion[playerid][Inteligencia] += 5;
		IdiomaEstudiado[playerid] = 0;
		format(rango, sizeof(rango), "* %s se cansa y deja el libro en su bolso", NombreEx(playerid));
		RangoCercano(10, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
		return 1;
	}
	return 0;
}

public ActualizarCuenta(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new archivo[256], usuario[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, usuario, MAX_PLAYER_NAME);
	    format(archivo, 256, "Usuarios/%s.ini", usuario);
		Informacion[playerid][Dinero] = GetPlayerMoney(playerid);
	 	dini_IntSet(archivo, "Nivel", Informacion[playerid][Nivel]);
	  	dini_IntSet(archivo, "Admin", Informacion[playerid][Admin]);
	   	dini_IntSet(archivo, "Premium", Informacion[playerid][Premium]);
	   	dini_IntSet(archivo, "Sexo", Informacion[playerid][Sexo]);
	   	dini_IntSet(archivo, "Edad", Informacion[playerid][Edad]);
	   	dini_IntSet(archivo, "Origen", Informacion[playerid][Origen]);
	   	dini_IntSet(archivo, "Registrado", Informacion[playerid][Registrado]);
	   	dini_IntSet(archivo, "Faccion", Informacion[playerid][Faccion]);
	   	dini_IntSet(archivo, "Rango", Informacion[playerid][Rango]);
	  	dini_IntSet(archivo, "Trabajo", Informacion[playerid][Trabajo]);
	  	dini_IntSet(archivo, "Skin", Informacion[playerid][Skin]);
	   	dini_IntSet(archivo, "Dinero", Informacion[playerid][Dinero]);
	   	dini_IntSet(archivo, "Banco", Informacion[playerid][Banco]);
	   	dini_IntSet(archivo, "Experiencia", Informacion[playerid][Experiencia]);
	   	dini_IntSet(archivo, "PuntosRol", Informacion[playerid][PuntosRol]);
	   	dini_IntSet(archivo, "Estrellas", Informacion[playerid][Estrellas]);
	  	dini_IntSet(archivo, "Bloqueado", Informacion[playerid][Bloqueado]);
	    dini_IntSet(archivo, "DNI", Informacion[playerid][DNI]);
	    dini_IntSet(archivo, "LVuelo", Informacion[playerid][LVuelo]);
	    dini_IntSet(archivo, "LArmas", Informacion[playerid][LArmas]);
	    dini_IntSet(archivo, "LCoche", Informacion[playerid][LCoche]);
	    dini_IntSet(archivo, "LBote", Informacion[playerid][LBote]);
		dini_IntSet(archivo, "Telefono", Informacion[playerid][Telefono]);
		dini_IntSet(archivo, "CI", Informacion[playerid][CI]);
		dini_IntSet(archivo, "Tuto", Informacion[playerid][Tuto]);
		dini_IntSet(archivo, "Lider", Informacion[playerid][Lider]);
		dini_IntSet(archivo, "Codificadores", Informacion[playerid][Codificadores]);
		dini_IntSet(archivo, "Sangre", Informacion[playerid][Sangre]);
		dini_IntSet(archivo, "BSangre", Informacion[playerid][BSangre]);
		dini_IntSet(archivo, "Cancer", Informacion[playerid][Cancer]);
		dini_IntSet(archivo, "Observaciones", Informacion[playerid][Observaciones]);
		dini_IntSet(archivo, "Casa", Informacion[playerid][Casa]);
		dini_IntSet(archivo, "Negocio", Informacion[playerid][Negocio]);
		dini_IntSet(archivo, "Coche", Informacion[playerid][Coche]);
		dini_IntSet(archivo, "SLucha", Informacion[playerid][SLucha]);
		dini_IntSet(archivo, "Saldo", Informacion[playerid][Saldo]);
		dini_IntSet(archivo, "Ingles", Informacion[playerid][Ingles]);
		dini_IntSet(archivo, "Italiano", Informacion[playerid][Italiano]);
		dini_IntSet(archivo, "Ruso", Informacion[playerid][Ruso]);
		dini_IntSet(archivo, "Chino", Informacion[playerid][Chino]);
		dini_IntSet(archivo, "Japones", Informacion[playerid][Japones]);
		dini_IntSet(archivo, "Frances", Informacion[playerid][Frances]);
		dini_IntSet(archivo, "Polaco", Informacion[playerid][Polaco]);
		dini_IntSet(archivo, "Latin", Informacion[playerid][Latin]);
		dini_IntSet(archivo, "MP3", Informacion[playerid][MP3]);
		dini_IntSet(archivo, "Loteria", Informacion[playerid][Loteria]);
		dini_IntSet(archivo, "Hambre", Informacion[playerid][Hambre]);
		dini_IntSet(archivo, "Cansancio", Informacion[playerid][Cansancio]);
		dini_IntSet(archivo, "Higiene", Informacion[playerid][Higiene]);
		dini_IntSet(archivo, "Comodidad", Informacion[playerid][Comodidad]);
		dini_IntSet(archivo, "Hidratacion", Informacion[playerid][Hidratacion]);
		dini_IntSet(archivo, "Inteligencia", Informacion[playerid][Inteligencia]);
		dini_IntSet(archivo, "EstadoFisico", Informacion[playerid][EstadoFisico]);
		dini_IntSet(archivo, "Amigos", Informacion[playerid][Amigos]);
		dini_IntSet(archivo, "Apariencia", Informacion[playerid][Apariencia]);
		dini_IntSet(archivo, "Diversion", Informacion[playerid][Diversion]);
		dini_IntSet(archivo, "Crack", Informacion[playerid][Crack]);
		dini_IntSet(archivo, "Cervezas", Informacion[playerid][Cervezas]);
		dini_IntSet(archivo, "Ganzuas", Informacion[playerid][Ganzuas]);
		dini_IntSet(archivo, "Materiales", Informacion[playerid][Materiales]);
		dini_IntSet(archivo, "Adrenalina", Informacion[playerid][Adrenalina]);
		dini_IntSet(archivo, "ATiempo", Informacion[playerid][ATiempo]);
		dini_IntSet(archivo, "Servicios", Informacion[playerid][Servicios]);
		dini_IntSet(archivo, "Respawns", Informacion[playerid][Respawns]);
		dini_IntSet(archivo, "Sansiones", Informacion[playerid][Sansiones]);
		dini_IntSet(archivo, "Kickeos", Informacion[playerid][Kickeos]);
		dini_IntSet(archivo, "Baneos", Informacion[playerid][Baneos]);
		dini_IntSet(archivo, "Congelos", Informacion[playerid][Congelos]);
		dini_IntSet(archivo, "Descongelos", Informacion[playerid][Descongelos]);
		dini_IntSet(archivo, "SkinsCambiados", Informacion[playerid][SkinsCambiados]);
		dini_IntSet(archivo, "IndiceCrack", Informacion[playerid][IndiceCrack]);
		dini_IntSet(archivo, "Preservativos", Informacion[playerid][Preservativos]);
		dini_IntSet(archivo, "Kit1", Informacion[playerid][Kit1]);
		dini_IntSet(archivo, "Kit2", Informacion[playerid][Kit2]);
		dini_IntSet(archivo, "Kit3", Informacion[playerid][Kit3]);
		dini_IntSet(archivo, "Caramelos", Informacion[playerid][Caramelos]);
		dini_IntSet(archivo, "Interior", Informacion[playerid][Interior]);
		dini_IntSet(archivo, "Asociado", Informacion[playerid][Asociado]);
		dini_IntSet(archivo, "IngLibro", Informacion[playerid][IngLibro]);
		dini_IntSet(archivo, "ItaLibro", Informacion[playerid][ItaLibro]);
		dini_IntSet(archivo, "RusLibro", Informacion[playerid][RusLibro]);
		dini_IntSet(archivo, "ChiLibro", Informacion[playerid][ChiLibro]);
		dini_IntSet(archivo, "JapLibro", Informacion[playerid][JapLibro]);
		dini_IntSet(archivo, "SuiLibro", Informacion[playerid][SuiLibro]);
		dini_IntSet(archivo, "FraLibro", Informacion[playerid][FraLibro]);
		dini_IntSet(archivo, "PolLibro", Informacion[playerid][PolLibro]);
		dini_IntSet(archivo, "LatLibro", Informacion[playerid][LatLibro]);
		dini_IntSet(archivo, "Identificador", Informacion[playerid][Identificador]);
		dini_IntSet(archivo, "ExpActual", Informacion[playerid][ExpActual]);
		dini_IntSet(archivo, "MundoVirtual", Informacion[playerid][MundoVirtual]);
		dini_IntSet(archivo, "Canal", Informacion[playerid][Canal]);
		dini_IntSet(archivo, "Castigado", Informacion[playerid][Castigado]);
		dini_IntSet(archivo, "TiempoCastigado", Informacion[playerid][TiempoCastigado]);
		dini_IntSet(archivo, "Relog", Informacion[playerid][Relog]);
		dini_IntSet(archivo, "ProcesoRol", Informacion[playerid][ProcesoRol]);
		return 1;
	}
	return 0;
}

public CrearCuenta(playerid)
{
     if(IsPlayerConnected(playerid))
     {
          new archivo[256], usuario[MAX_PLAYER_NAME];
          GetPlayerName(playerid, usuario, MAX_PLAYER_NAME);
          format(archivo, 256, "Usuarios/%s.ini", usuario);
		  Informacion[playerid][Dinero] = GetPlayerMoney(playerid);
          dini_IntSet(archivo, "Nivel", 1);
          dini_IntSet(archivo, "Admin", 0);
          dini_IntSet(archivo, "Premium", 0);
          dini_IntSet(archivo, "Sexo", 0);
          dini_IntSet(archivo, "Edad", 0);
          dini_IntSet(archivo, "Origen", 0);
          dini_IntSet(archivo, "Registrado", 0);
          dini_IntSet(archivo, "Faccion", 0);
          dini_IntSet(archivo, "Rango", 0);
          dini_IntSet(archivo, "Trabajo", 0);
          dini_IntSet(archivo, "Skin", 0);
          dini_IntSet(archivo, "Dinero", 350);
	      dini_IntSet(archivo, "Banco", 1000);
          dini_IntSet(archivo, "Experiencia", 1);
          dini_IntSet(archivo, "PuntosRol", 0);
          dini_IntSet(archivo, "Estrellas", 0);
          dini_IntSet(archivo, "Bloqueado", 0);
          dini_IntSet(archivo, "DNI", 0);
          dini_IntSet(archivo, "LVuelo", 0);
          dini_IntSet(archivo, "LArmas", 0);
          dini_IntSet(archivo, "LCoche", 0);
          dini_IntSet(archivo, "LBote", 0);
          dini_IntSet(archivo, "Telefono", 0);
          dini_IntSet(archivo, "CI", 0);
          dini_IntSet(archivo, "Tuto", 0);
          dini_IntSet(archivo, "Lider", 0);
          dini_IntSet(archivo, "Codificadores", 0);
          dini_IntSet(archivo, "Sangre", 100000);
          dini_IntSet(archivo, "BSangre", 0);
          dini_IntSet(archivo, "Cancer", 0);
          dini_IntSet(archivo, "Observaciones", 0);
          dini_IntSet(archivo, "Casa", 255);
          dini_IntSet(archivo, "Negocio", 255);
          dini_IntSet(archivo, "Coche", 9999);
          dini_IntSet(archivo, "SLucha", 1);
          dini_IntSet(archivo, "Saldo", 0);
          dini_IntSet(archivo, "Ingles", 0);
          dini_IntSet(archivo, "Italiano", 0);
          dini_IntSet(archivo, "Ruso", 0);
          dini_IntSet(archivo, "Chino", 0);
          dini_IntSet(archivo, "Japones", 0);
          dini_IntSet(archivo, "Suizo", 0);
          dini_IntSet(archivo, "Frances", 0);
          dini_IntSet(archivo, "Polaco", 0);
          dini_IntSet(archivo, "Latin", 0);
          dini_IntSet(archivo, "MP3", 0);
          dini_IntSet(archivo, "Loteria", 0);
          dini_IntSet(archivo, "Hambre", 50);
          dini_IntSet(archivo, "Cansancio", 50);
          dini_IntSet(archivo, "Higiene", 50);
          dini_IntSet(archivo, "Comodidad", 50);
          dini_IntSet(archivo, "Hidratacion", 50);
          dini_IntSet(archivo, "Inteligencia", 10);
          dini_IntSet(archivo, "EstadoFisico", 50);
          dini_IntSet(archivo, "Amigos", 0);
          dini_IntSet(archivo, "Apariencia", 50);
          dini_IntSet(archivo, "Diversion", 50);
          dini_IntSet(archivo, "Crack", 0);
          dini_IntSet(archivo, "Cervezas", 0);
          dini_IntSet(archivo, "Ganzuas", 0);
          dini_IntSet(archivo, "Materiales", 0);
          dini_IntSet(archivo, "Adrenalina", 0);
          dini_IntSet(archivo, "ATiempo", 0);
          dini_IntSet(archivo, "Servicios", 0);
          dini_IntSet(archivo, "Respawns", 0);
          dini_IntSet(archivo, "Sansiones", 0);
          dini_IntSet(archivo, "Kickeos", 0);
          dini_IntSet(archivo, "Baneos", 0);
          dini_IntSet(archivo, "Congelos", 0);
          dini_IntSet(archivo, "Descongelos", 0);
          dini_IntSet(archivo, "SkinsCambiados", 0);
          dini_IntSet(archivo, "IndiceCrack", 0);
		  dini_IntSet(archivo, "Preservativos", 0);
	      dini_IntSet(archivo, "Kit1", 0);
		  dini_IntSet(archivo, "Kit2", 0);
		  dini_IntSet(archivo, "Kit3", 0);
		  dini_IntSet(archivo, "Caramelos", 0);
		  dini_IntSet(archivo, "Cigarrillos", 0);
	  	  dini_IntSet(archivo, "Interior", 0);
	  	  dini_IntSet(archivo, "Asociado", 0);
	  	  dini_IntSet(archivo, "IngLibro", 0);
	  	  dini_IntSet(archivo, "ItaLibro", 0);
	  	  dini_IntSet(archivo, "RusLibro", 0);
	  	  dini_IntSet(archivo, "ChiLibro", 0);
	  	  dini_IntSet(archivo, "JapLibro", 0);
	  	  dini_IntSet(archivo, "SuiLibro", 0);
	  	  dini_IntSet(archivo, "FraLibro", 0);
	  	  dini_IntSet(archivo, "PolLibro", 0);
	  	  dini_IntSet(archivo, "LatLibro", 0);
	  	  dini_IntSet(archivo, "Identificador", 0);
		  dini_IntSet(archivo, "ExpActual", 1);
		  dini_IntSet(archivo, "MundoVirtual", 0);
		  dini_IntSet(archivo, "Canal", 0);
	  	  dini_IntSet(archivo, "Castigado", 0);
	  	  dini_IntSet(archivo, "TiempoCastigado", 0);
	  	  dini_IntSet(archivo, "Relog", 0);
	  	  dini_IntSet(archivo, "ProcesoRol", 0);
		  return 1;
     }
     return 0;
}

public CargarDatos(playerid)
{
  	new archivo[256], usuario[MAX_PLAYER_NAME];
    GetPlayerName(playerid, usuario, MAX_PLAYER_NAME);
    format(archivo, 256, "Usuarios/%s.ini", usuario);
    Informacion[playerid][Nivel] = dini_Int(archivo, "Nivel");
    Informacion[playerid][Admin] = dini_Int(archivo, "Admin");
    Informacion[playerid][Premium] = dini_Int(archivo, "Premium");
    Informacion[playerid][Sexo] = dini_Int(archivo, "Sexo");
    Informacion[playerid][Edad] = dini_Int(archivo, "Edad");
    Informacion[playerid][Origen] = dini_Int(archivo, "Origen");
    Informacion[playerid][Registrado] = dini_Int(archivo, "Registrado");
    Informacion[playerid][Faccion] = dini_Int(archivo, "Faccion");
    Informacion[playerid][Rango] = dini_Int(archivo, "Rango");
    Informacion[playerid][Trabajo] = dini_Int(archivo, "Trabajo");
    Informacion[playerid][Skin] = dini_Int(archivo, "Skin");
    Informacion[playerid][Dinero] = dini_Int(archivo, "Dinero");
    Informacion[playerid][Banco] = dini_Int(archivo, "Banco");
    Informacion[playerid][Experiencia] = dini_Int(archivo, "Experiencia");
    Informacion[playerid][PuntosRol] = dini_Int(archivo, "PuntosRol");
    Informacion[playerid][Estrellas] = dini_Int(archivo, "Estrellas");
    Informacion[playerid][Bloqueado] = dini_Int(archivo, "Bloqueado");
    Informacion[playerid][DNI] = dini_Int(archivo, "DNI");
    Informacion[playerid][LVuelo] = dini_Int(archivo, "LVuelo");
    Informacion[playerid][LArmas] = dini_Int(archivo, "LArmas");
    Informacion[playerid][LCoche] = dini_Int(archivo, "LCoche");
    Informacion[playerid][LBote] = dini_Int(archivo, "LBote");
    Informacion[playerid][Telefono] = dini_Int(archivo, "Telefono");
    Informacion[playerid][CI] = dini_Int(archivo, "CI");
    Informacion[playerid][Tuto] = dini_Int(archivo, "Tuto");
    Informacion[playerid][Lider] = dini_Int(archivo, "Lider");
    Informacion[playerid][Codificadores] = dini_Int(archivo, "Codificadores");
    Informacion[playerid][Sangre] = dini_Int(archivo, "Sangre");
    Informacion[playerid][BSangre] = dini_Int(archivo, "BSangre");
    Informacion[playerid][Cancer] = dini_Int(archivo, "Cancer");
    Informacion[playerid][Observaciones] = dini_Int(archivo, "Observaciones");
    Informacion[playerid][Casa] = dini_Int(archivo, "Casa");
    Informacion[playerid][Negocio] = dini_Int(archivo, "Negocio");
    Informacion[playerid][Coche] = dini_Int(archivo, "Coche");
    Informacion[playerid][SLucha] = dini_Int(archivo, "SLucha");
    Informacion[playerid][Ingles] = dini_Int(archivo, "Ingles");
    Informacion[playerid][Italiano] = dini_Int(archivo, "Italiano");
    Informacion[playerid][Ruso] = dini_Int(archivo, "Ruso");
    Informacion[playerid][Chino] = dini_Int(archivo, "Chino");
    Informacion[playerid][Japones] = dini_Int(archivo, "Japones");
    Informacion[playerid][Suizo] = dini_Int(archivo, "Suizo");
    Informacion[playerid][Frances] = dini_Int(archivo, "Frances");
    Informacion[playerid][Polaco] = dini_Int(archivo, "Polaco");
    Informacion[playerid][Latin] = dini_Int(archivo, "Latin");
    Informacion[playerid][MP3] = dini_Int(archivo, "MP3");
    Informacion[playerid][Loteria] = dini_Int(archivo, "Loteria");
    Informacion[playerid][Hambre] = dini_Int(archivo, "Hambre");
    Informacion[playerid][Cansancio] = dini_Int(archivo, "Cansancio");
    Informacion[playerid][Higiene] = dini_Int(archivo, "Higiene");
    Informacion[playerid][Comodidad] = dini_Int(archivo, "Comodidad");
    Informacion[playerid][Hidratacion] = dini_Int(archivo, "Hidratacion");
    Informacion[playerid][Inteligencia] = dini_Int(archivo, "Inteligencia");
    Informacion[playerid][EstadoFisico] = dini_Int(archivo, "EstadoFisico");
    Informacion[playerid][Amigos] = dini_Int(archivo, "Amigos");
    Informacion[playerid][Apariencia] = dini_Int(archivo, "Apariencia");
    Informacion[playerid][Diversion] = dini_Int(archivo, "Diversion");
    Informacion[playerid][Crack] = dini_Int(archivo, "Crack");
    Informacion[playerid][Cervezas] = dini_Int(archivo, "Cervezas");
    Informacion[playerid][Ganzuas] = dini_Int(archivo, "Ganzuas");
    Informacion[playerid][Materiales] = dini_Int(archivo, "Materiales");
    Informacion[playerid][Adrenalina] = dini_Int(archivo, "Adrenalina");
    Informacion[playerid][ATiempo] = dini_Int(archivo, "ATiempo");
    Informacion[playerid][Servicios] = dini_Int(archivo, "Servicios");
    Informacion[playerid][Respawns] = dini_Int(archivo, "Respawns");
    Informacion[playerid][Sansiones] = dini_Int(archivo, "Sansiones");
    Informacion[playerid][Kickeos] = dini_Int(archivo, "Kickeos");
    Informacion[playerid][Baneos] = dini_Int(archivo, "Baneos");
    Informacion[playerid][Congelos] = dini_Int(archivo, "Congelos");
    Informacion[playerid][Descongelos] = dini_Int(archivo, "Descongelos");
    Informacion[playerid][SkinsCambiados] = dini_Int(archivo, "SkinsCambiados");
    Informacion[playerid][IndiceCrack] = dini_Int(archivo, "IndiceCrack");
    Informacion[playerid][Preservativos] = dini_Int(archivo, "Preservativos");
    Informacion[playerid][Kit1] = dini_Int(archivo, "Kit1");
    Informacion[playerid][Kit2] = dini_Int(archivo, "Kit2");
    Informacion[playerid][Kit3] = dini_Int(archivo, "Kit3");
    Informacion[playerid][Caramelos] = dini_Int(archivo, "Caramelos");
    Informacion[playerid][Cigarrillos] = dini_Int(archivo, "Cigarrillos");
    Informacion[playerid][Interior] = dini_Int(archivo, "Interior");
    Informacion[playerid][Asociado] = dini_Int(archivo, "Asociado");
    Informacion[playerid][IngLibro] = dini_Int(archivo, "IngLibro");
    Informacion[playerid][ItaLibro] = dini_Int(archivo, "ItaLibro");
    Informacion[playerid][RusLibro] = dini_Int(archivo, "RusLibro");
    Informacion[playerid][ChiLibro] = dini_Int(archivo, "ChiLibro");
    Informacion[playerid][JapLibro] = dini_Int(archivo, "JapLibro");
    Informacion[playerid][SuiLibro] = dini_Int(archivo, "SuiLibro");
    Informacion[playerid][FraLibro] = dini_Int(archivo, "FraLibro");
    Informacion[playerid][PolLibro] = dini_Int(archivo, "PolLibro");
    Informacion[playerid][LatLibro] = dini_Int(archivo, "LatLibro");
    Informacion[playerid][Identificador] = dini_Int(archivo, "Identificador");
    Informacion[playerid][ExpActual] = dini_Int(archivo, "ExpActual");
    Informacion[playerid][MundoVirtual] = dini_Int(archivo, "MundoVirtual");
    Informacion[playerid][Canal] = dini_Int(archivo, "Canal");
    Informacion[playerid][Castigado] = dini_Int(archivo, "Castigado");
    Informacion[playerid][TiempoCastigado] = dini_Int(archivo, "TiempoCastigado");
    Informacion[playerid][Relog] = dini_Int(archivo, "Relog");
    Informacion[playerid][ProcesoRol] = dini_Int(archivo, "ProcesoRol");
	return 0;
}

public OnPlayerDisconnect(playerid)
{
    new Float: UltimaPos[3];
    GetPlayerPos(playerid, UltimaPos[0], UltimaPos[1], UltimaPos[2]);
    Informacion[playerid][UPGuardada] = 1;
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    new string[64];
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string, sizeof(string), "* El pasajero se ha desconectado, has ganado $%d",TransportCost[playerid]);
		    SendClientMessage(TransportDriver[playerid], AZULCLARO, string);
		}
	}
	EnLeccion[playerid] = 0;
	Reproduciendo[playerid] = 0;
	Mascara[playerid] = 0;
	ServicioAdmin[playerid] = 0;
	NoKick[playerid] = 0;
	NoBan[playerid] = 0;
	Refuerzos[playerid] = 0;
	EnServicio[playerid] = 0;
	Informacion[playerid][VRentado] = 0;
	Informacion[playerid][HeRentado] = 0;
	Informacion[playerid][VRentado2] = 0;
	Informacion[playerid][HeRentado2] = 0;
	BotIdentificado[playerid] = 1;
	Hospitalizado[playerid] = 0;
	Conteo[playerid] = 220;
	EstaConteando[playerid] = 0;
	ServicioLSMD[playerid] = 0;
	Informacion[playerid][Esposado] = 0;
	Arrestado[playerid] = 0;
    NumeroAzar[playerid] = 0;
	globD2F0[playerid][0] = 0;
	globD2F0[playerid][1] = 0;
	globD2F0[playerid][2] = 0;
	globD2F0[playerid][3] = 0;
	globD2F0[playerid][4] = 0;
	globD2F0[playerid][5] = 0;
	globD2F0[playerid][6] = 0;
	DestroyObject(glob7D0[playerid]);
	DestroyObject(globFA0[playerid]);
	DestroyObject(glob1770[playerid]);
	DestroyObject(glob1F40[playerid]);
	DestroyObject(glob2710[playerid]);
	DestroyObject(glob2EE0[playerid]);
	DestroyObject(glob36B0[playerid]);
	DestroyObject(glob3E80[playerid]);
	DestroyObject(glob4650[playerid]);
	DestroyObject(glob4E20[playerid]);
	DestroyObject(glob55F0[playerid]);
	DestroyObject(glob5DC0[playerid]);
	DestroyObject(glob6590[playerid]);
	DestroyObject(glob6D60[playerid]);
	DestroyObject(glob7530[playerid]);
	DestroyObject(glob7D00[playerid]);
	DestroyObject(glob84D0[playerid]);
	DestroyObject(glob8CA0[playerid]);
	DestroyObject(glob9470[playerid]);
	DestroyObject(glob9C40[playerid]);
	KillTimer(globA410[playerid]);
	KillTimer(globABE0[playerid]);
	DestroyObject(globB3B0[playerid]);
	DestroyObject(globBB80[playerid]);
	DestroyObject(globC350[playerid]);
	DestroyObject(globCB20[playerid]);
    if(Informacion[playerid][Faccion] == 1)
	{
		Profesores -= 1;
	}
	if(EstaConectado[playerid] == 1)
	{
    	new archivo[256], usuario[MAX_PLAYER_NAME];
        GetPlayerName(playerid, usuario, MAX_PLAYER_NAME);
        format(archivo, 256, "Usuarios/%s.ini", usuario);
		Informacion[playerid][Dinero] = GetPlayerMoney(playerid);
	  	dini_IntSet(archivo, "Nivel", Informacion[playerid][Nivel]);
      	dini_IntSet(archivo, "Admin", Informacion[playerid][Admin]);
      	dini_IntSet(archivo, "Premium", Informacion[playerid][Premium]);
      	dini_IntSet(archivo, "Sexo", Informacion[playerid][Sexo]);
      	dini_IntSet(archivo, "Edad", Informacion[playerid][Edad]);
      	dini_IntSet(archivo, "Origen", Informacion[playerid][Origen]);
      	dini_IntSet(archivo, "Registrado", Informacion[playerid][Registrado]);
      	dini_IntSet(archivo, "Faccion", Informacion[playerid][Faccion]);
      	dini_IntSet(archivo, "Rango", Informacion[playerid][Rango]);
      	dini_IntSet(archivo, "Trabajo", Informacion[playerid][Trabajo]);
      	dini_IntSet(archivo, "Skin", Informacion[playerid][Skin]);
       	dini_IntSet(archivo, "Dinero", Informacion[playerid][Dinero]);
       	dini_IntSet(archivo, "Banco", Informacion[playerid][Banco]);
       	dini_IntSet(archivo, "Experiencia", Informacion[playerid][Experiencia]);
       	dini_IntSet(archivo, "PuntosRol", Informacion[playerid][PuntosRol]);
       	dini_IntSet(archivo, "Estrellas", Informacion[playerid][Estrellas]);
       	dini_IntSet(archivo, "Bloqueado", Informacion[playerid][Bloqueado]);
       	dini_IntSet(archivo, "DNI", Informacion[playerid][DNI]);
        dini_IntSet(archivo, "LVuelo", Informacion[playerid][LVuelo]);
        dini_IntSet(archivo, "LArmas", Informacion[playerid][LArmas]);
        dini_IntSet(archivo, "LCoche", Informacion[playerid][LCoche]);
        dini_IntSet(archivo, "LBote", Informacion[playerid][LBote]);
		dini_IntSet(archivo, "Telefono", Informacion[playerid][Telefono]);
		dini_IntSet(archivo, "CI", Informacion[playerid][CI]);
		dini_IntSet(archivo, "Tuto", Informacion[playerid][Tuto]);
		dini_IntSet(archivo, "Lider", Informacion[playerid][Lider]);
		dini_IntSet(archivo, "Codificadores", Informacion[playerid][Codificadores]);
		dini_IntSet(archivo, "Sangre", Informacion[playerid][Sangre]);
		dini_IntSet(archivo, "BSangre", Informacion[playerid][BSangre]);
		dini_IntSet(archivo, "Cancer", Informacion[playerid][Cancer]);
		dini_IntSet(archivo, "Observaciones", Informacion[playerid][Observaciones]);
		dini_IntSet(archivo, "Casa", Informacion[playerid][Casa]);
		dini_IntSet(archivo, "Negocio", Informacion[playerid][Negocio]);
		dini_IntSet(archivo, "Coche", Informacion[playerid][Coche]);
		dini_IntSet(archivo, "SLucha", Informacion[playerid][SLucha]);
		dini_IntSet(archivo, "Saldo", Informacion[playerid][Saldo]);
		dini_IntSet(archivo, "Ingles", Informacion[playerid][Ingles]);
		dini_IntSet(archivo, "Italiano", Informacion[playerid][Italiano]);
		dini_IntSet(archivo, "Ruso", Informacion[playerid][Ruso]);
		dini_IntSet(archivo, "Chino", Informacion[playerid][Chino]);
		dini_IntSet(archivo, "Japones", Informacion[playerid][Japones]);
		dini_IntSet(archivo, "Frances", Informacion[playerid][Frances]);
		dini_IntSet(archivo, "Polaco", Informacion[playerid][Polaco]);
		dini_IntSet(archivo, "Latin", Informacion[playerid][Latin]);
		dini_IntSet(archivo, "MP3", Informacion[playerid][MP3]);
		dini_IntSet(archivo, "Loteria", Informacion[playerid][Loteria]);
		dini_IntSet(archivo, "Hambre", Informacion[playerid][Hambre]);
		dini_IntSet(archivo, "Cansancio", Informacion[playerid][Cansancio]);
		dini_IntSet(archivo, "Higiene", Informacion[playerid][Higiene]);
		dini_IntSet(archivo, "Comodidad", Informacion[playerid][Comodidad]);
		dini_IntSet(archivo, "Hidratacion", Informacion[playerid][Hidratacion]);
		dini_IntSet(archivo, "Inteligencia", Informacion[playerid][Inteligencia]);
		dini_IntSet(archivo, "EstadoFisico", Informacion[playerid][EstadoFisico]);
		dini_IntSet(archivo, "Amigos", Informacion[playerid][Amigos]);
		dini_IntSet(archivo, "Apariencia", Informacion[playerid][Apariencia]);
		dini_IntSet(archivo, "Diversion", Informacion[playerid][Diversion]);
		dini_IntSet(archivo, "Crack", Informacion[playerid][Crack]);
		dini_IntSet(archivo, "Cervezas", Informacion[playerid][Cervezas]);
		dini_IntSet(archivo, "Ganzuas", Informacion[playerid][Ganzuas]);
		dini_IntSet(archivo, "Materiales", Informacion[playerid][Materiales]);
		dini_IntSet(archivo, "Adrenalina", Informacion[playerid][Adrenalina]);
		dini_IntSet(archivo, "ATiempo", Informacion[playerid][ATiempo]);
		dini_IntSet(archivo, "Servicios", Informacion[playerid][Servicios]);
		dini_IntSet(archivo, "Respawns", Informacion[playerid][Respawns]);
		dini_IntSet(archivo, "Sansiones", Informacion[playerid][Sansiones]);
		dini_IntSet(archivo, "Kickeos", Informacion[playerid][Kickeos]);
		dini_IntSet(archivo, "Baneos", Informacion[playerid][Baneos]);
		dini_IntSet(archivo, "Congelos", Informacion[playerid][Congelos]);
		dini_IntSet(archivo, "Descongelos", Informacion[playerid][Descongelos]);
		dini_IntSet(archivo, "SkinsCambiados", Informacion[playerid][SkinsCambiados]);
		dini_IntSet(archivo, "IndiceCrack", Informacion[playerid][IndiceCrack]);
		dini_IntSet(archivo, "Preservativos", Informacion[playerid][Preservativos]);
		dini_IntSet(archivo, "Kit1", Informacion[playerid][Kit1]);
		dini_IntSet(archivo, "Kit2", Informacion[playerid][Kit2]);
		dini_IntSet(archivo, "Kit3", Informacion[playerid][Kit3]);
		dini_IntSet(archivo, "Caramelos", Informacion[playerid][Caramelos]);
		dini_IntSet(archivo, "Interior", Informacion[playerid][Interior]);
		dini_IntSet(archivo, "Asociado", Informacion[playerid][Asociado]);
		dini_IntSet(archivo, "IngLibro", Informacion[playerid][IngLibro]);
		dini_IntSet(archivo, "ItaLibro", Informacion[playerid][ItaLibro]);
		dini_IntSet(archivo, "RusLibro", Informacion[playerid][RusLibro]);
		dini_IntSet(archivo, "ChiLibro", Informacion[playerid][ChiLibro]);
		dini_IntSet(archivo, "JapLibro", Informacion[playerid][JapLibro]);
		dini_IntSet(archivo, "SuiLibro", Informacion[playerid][SuiLibro]);
		dini_IntSet(archivo, "FraLibro", Informacion[playerid][FraLibro]);
		dini_IntSet(archivo, "PolLibro", Informacion[playerid][PolLibro]);
		dini_IntSet(archivo, "LatLibro", Informacion[playerid][LatLibro]);
		dini_IntSet(archivo, "Identificador", Informacion[playerid][Identificador]);
		dini_IntSet(archivo, "ExpActual", Informacion[playerid][ExpActual]);
		dini_IntSet(archivo, "MundoVirtual", Informacion[playerid][MundoVirtual]);
		dini_IntSet(archivo, "Canal", Informacion[playerid][Canal]);
		dini_IntSet(archivo, "Castigado", Informacion[playerid][Castigado]);
		dini_IntSet(archivo, "TiempoCastigado", Informacion[playerid][TiempoCastigado]);
		dini_IntSet(archivo, "Relog", Informacion[playerid][Relog]);
        dini_FloatSet(archivo, "UltimaPosX", UltimaPos[0]);
	 	dini_FloatSet(archivo, "UltimaPosY", UltimaPos[1]);
		dini_FloatSet(archivo, "UltimaPosZ", UltimaPos[2]);
		dini_IntSet(archivo, "ProcesoRol", Informacion[playerid][ProcesoRol]);
		return 1;
	}
	return 0;
}

public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			SafeGivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return 1;
}

public CargarGas()
{
	new arrCoords[17][64];
	new strFromFile2[256];
	new File: file = fopen("Propiedades/Gasolineras.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(GasInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			GasInfo[idx][gVenta] = strval(arrCoords[0]);
			strmid(GasInfo[idx][gPropietario], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(GasInfo[idx][gMensaje], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			GasInfo[idx][gPuntoX] = floatstr(arrCoords[3]);
			GasInfo[idx][gPuntoY] = floatstr(arrCoords[4]);
			GasInfo[idx][gPuntoZ] = floatstr(arrCoords[5]);
			GasInfo[idx][CargaX] = floatstr(arrCoords[6]);
			GasInfo[idx][CargaY] = floatstr(arrCoords[7]);
			GasInfo[idx][CargaZ] = floatstr(arrCoords[8]);
			GasInfo[idx][gPrecioGas] = strval(arrCoords[9]);
			GasInfo[idx][gCajaFuerte] = strval(arrCoords[10]);
			GasInfo[idx][gGasolina] = strval(arrCoords[11]);
			GasInfo[idx][gMaxGasolina] = strval(arrCoords[12]);
			GasInfo[idx][gPrecioComGas] = strval(arrCoords[13]);
			GasInfo[idx][gNivel] = strval(arrCoords[14]);
			GasInfo[idx][gPrecioLocal] = strval(arrCoords[15]);
			GasInfo[idx][EnVenta] = strval(arrCoords[16]);
			printf("GasInfo: %d, Mensaje: %s, Propietario: %s", idx, GasInfo[idx][gMensaje],GasInfo[idx][gPropietario]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}
public AutoBackup()
{
	new rango[256];
   	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	  	if(TransportTime[i] > 0)
		{
			new string[256];
		    if(TransportTime[i] >= 5)
			{
				TransportTime[i] = 1;
				if(TransportDriver[i] < 999)
				{
						if(IsPlayerConnected(TransportDriver[i]))
						{
		   					TransportCost[i] += TransportValue[TransportDriver[i]];
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				    TransportTime[i] += 1;
				    format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
				    GameTextForPlayer(i, string, 15000, 6);
					}
				}
				for(new h = 0; h < sizeof(HouseInfo); h++)
				{
					if(PlayerToPoint(1.0, i, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
					{
						if(HouseInfo[h][hOwned] == 1)
						{
							if(HouseInfo[h][hRentabil] == 0)
							{
								format(rango, sizeof(rango), "~g~Propietario: ~w~%s ~n~~g~Nivel: ~W~%d",HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
							}
							else
							{
								format(rango, sizeof(rango), "~g~Propietario: ~w~%s ~n~~g~Renta: ~W~%d ~n~~g~Nivel: ~w~%d",HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
							}
							TextDrawShowForPlayer(i, CF_FONDO);
							TextDrawShowForPlayer(i, CF_TITULO);
							TextDrawSetString(Text:CF_TEXTO[i], rango);
				  			TextDrawShowForPlayer(i, CF_TEXTO[i]);
						}
						else
						{
		                	HouseInfo[i][hLock] = 1;
							format(rango, sizeof(rango), "~g~Estado: ~w~En Venta ~n~~g~Nivel: ~W~%d ~n~~w~Contacta con un Vendedor",HouseInfo[h][hLevel]);
						}
						TextDrawShowForPlayer(i, CO_FONDO);
						TextDrawShowForPlayer(i, CO_TITULO);
						TextDrawSetString(Text:CO_TEXTO[i], rango);
			  			TextDrawShowForPlayer(i, CO_TEXTO[i]);
					}
					else
					{
			  			TextDrawHideForPlayer(i, CO_TEXTO[i]);
						TextDrawHideForPlayer(i, CO_FONDO);
						TextDrawHideForPlayer(i, CO_TITULO);
						TextDrawHideForPlayer(i, CF_TEXTO[i]);
						TextDrawHideForPlayer(i, CF_FONDO);
						TextDrawHideForPlayer(i, CF_TITULO);
					}
				}
				for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(PlayerToPoint(1.0, i, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
					{
						if(BizzInfo[h][bOwned] == 1)
						{
							format(rango, sizeof(rango), "~g~Propietario: ~w~%s ~n~~g~Extocion: ~W~%s ~n~~g~Entrada: ~w~%d~n~~w~Utiliza: ~g~/entrar",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost]);
						}
						else
						{
							format(rango, sizeof(rango), "~Y~%s ~n~~g~Nivel: ~W~%d ~n~~w~Contacta con un Vendedor",BizzInfo[h][bMessage],BizzInfo[h][bLevelNeeded]);
						}
						TextDrawSetString(Text:CO_TEXTO[i], rango);
			  			TextDrawShowForPlayer(i, CO_TEXTO[i]);
						TextDrawShowForPlayer(i, CO_FONDO);
						TextDrawShowForPlayer(i, CO_TITULO);
					}
					else
					{
			  			TextDrawHideForPlayer(i, CO_TEXTO[i]);
						TextDrawHideForPlayer(i, CO_FONDO);
						TextDrawHideForPlayer(i, CO_TITULO);
						TextDrawHideForPlayer(i, CF_TEXTO[i]);
						TextDrawHideForPlayer(i, CF_FONDO);
						TextDrawHideForPlayer(i, CF_TITULO);
					}
				}
				new car = Informacion[i][Coche];
				new name[MAX_PLAYER_NAME];
				GetPlayerName(i, name, sizeof(name));
				if(strcmp(name, CarInfo[car][cNameD], true) != 0)
				{
				    Informacion[i][Coche] = 9999;
				}
				if(PlayerCuffed[i] == 1)
				{
				    if(PlayerCuffedTime[i] <= 0)
				    {
				        TogglePlayerControllable(i, 1);
				        PlayerCuffed[i] = 0;
				        PlayerCuffedTime[i] = 0;
				        PlayerTazeTime[i] = 1;
				    }
				    else
				    {
				        PlayerCuffedTime[i] -= 1;
				    }
				}
				if(GetPlayerWeapon(i) == 9)
				{
				    LimpiarChat(i, 100);
			    	SendClientMessage(i, ROJO, "Nuestro anticheat ha descubierto un arma no permitida, has sido baneado");
					SendClientMessage(i, ROJO, "Si esto fue un error, aprieta F8 y publica la SS en http://127.0.0.1/");
					Informacion[i][Bloqueado] = 1;
				    Ban(i);
				    printf("[ANTICHEAT] %s ha sido automaticamente baneado por utilizar una motosierra",NombreEx(i));
				    format(rango, sizeof(rango), "[ANTICHEAT] %s ha sido automaticamente baneado por utilizar una motosierra", NombreEx(i));
				    MensajeAdmin(PURPURA, rango);
				}
				else if(GetPlayerWeapon(i) == 35)
				{
				    LimpiarChat(i, 100);
			    	SendClientMessage(i, ROJO, "Nuestro anticheat ha descubierto un arma no permitida, has sido baneado");
					SendClientMessage(i, ROJO, "Si esto fue un error, aprieta F8 y publica la SS en http://127.0.0.1/");
					Informacion[i][Bloqueado] = 1;
				    Ban(i);
				    printf("[ANTICHEAT] %s ha sido automaticamente baneado por utilizar una bazooka",NombreEx(i));
				    format(rango, sizeof(rango), "[ANTICHEAT] %s ha sido automaticamente baneado por utilizar una bazooka", NombreEx(i));
				    MensajeAdmin(PURPURA, rango);
				}
				else if(GetPlayerWeapon(i) == 36)
				{
				    LimpiarChat(i, 100);
			    	SendClientMessage(i, ROJO, "Nuestro anticheat ha descubierto un arma no permitida, has sido baneado");
					SendClientMessage(i, ROJO, "Si esto fue un error, aprieta F8 y publica la SS en http://127.0.0.1/");
					Informacion[i][Bloqueado] = 1;
				    Ban(i);
				    printf("[ANTICHEAT] %s ha sido automaticamente baneado por utilizar una bazooka",NombreEx(i));
				    format(rango, sizeof(rango), "[ANTICHEAT] %s ha sido automaticamente baneado por utilizar una bazooka", NombreEx(i));
				    MensajeAdmin(PURPURA, rango);
				}
				else if(GetPlayerWeapon(i) == 37)
				{
				    LimpiarChat(i, 100);
			    	SendClientMessage(i, ROJO, "Nuestro anticheat ha descubierto un arma no permitida, has sido baneado");
					SendClientMessage(i, ROJO, "Si esto fue un error, aprieta F8 y publica la SS en http://127.0.0.1/");
					Informacion[i][Bloqueado] = 1;
				    Ban(i);
				    printf("[ANTICHEAT] %s ha sido automaticamente baneado por utilizar un lanzallamas",NombreEx(i));
				    format(rango, sizeof(rango), "[ANTICHEAT] %s ha sido automaticamente baneado por utilizar un lanzallamas", NombreEx(i));
				    MensajeAdmin(PURPURA, rango);
				}
				else if(GetPlayerWeapon(i) == 38)
				{
				    LimpiarChat(i, 100);
			    	SendClientMessage(i, ROJO, "Nuestro anticheat ha descubierto un arma no permitida, has sido baneado");
					SendClientMessage(i, ROJO, "Si esto fue un error, aprieta F8 y publica la SS en http://127.0.0.1/");
					Informacion[i][Bloqueado] = 1;
				    Ban(i);
				    printf("[ANTICHEAT] %s ha sido automaticamente baneado por utilizar un minigun",NombreEx(i));
				    format(rango, sizeof(rango), "[ANTICHEAT] %s ha sido automaticamente baneado por utilizar un minigun", NombreEx(i));
				    MensajeAdmin(PURPURA, rango);
				}
				else if(GetPlayerWeapon(i) == 38)
				{
				    LimpiarChat(i, 100);
			    	SendClientMessage(i, ROJO, "Nuestro anticheat ha descubierto un arma no permitida, has sido baneado");
					SendClientMessage(i, ROJO, "Si esto fue un error, aprieta F8 y publica la SS en http://127.0.0.1/");
					Informacion[i][Bloqueado] = 1;
				    Ban(i);
				    printf("[ANTICHEAT] %s ha sido automaticamente baneado por utilizar un minigun",NombreEx(i));
				    format(rango, sizeof(rango), "[ANTICHEAT] %s ha sido automaticamente baneado por utilizar un minigun", NombreEx(i));
				    MensajeAdmin(PURPURA, rango);
				}
				else if(VelociadMaxima(i) > 300)
				{
				    LimpiarChat(i, 100);
			    	SendClientMessage(i, ROJO, "Nuestro anticheat ha descubierto que usted exceder las leyes reales de la velocidad");
				    Kick(i);
				    printf("[ANTICHEAT] %s ha sido automaticamente kickeado por superar los 300 km/h",NombreEx(i));
				    format(rango, sizeof(rango), "[ANTICHEAT] %s ha sido automaticamente kickeado por superar los 400km/h ", NombreEx(i));
				    MensajeAdmin(PURPURA, rango);
				}
				// -= Valores Positivos =-
				if(Informacion[i][Inteligencia] >= 100) { Informacion[i][Inteligencia] = 100; }
				else if(Informacion[i][Hambre] >= 100) { Informacion[i][Hambre] = 100; }
				else if(Informacion[i][Diversion] >= 100) { Informacion[i][Diversion] = 100; }
				else if(Informacion[i][Higiene] >= 100) { Informacion[i][Higiene] = 100; }
				else if(Informacion[i][Cansancio] >= 100) { Informacion[i][Cansancio] = 100; }
				else if(Informacion[i][Comodidad] >= 100) { Informacion[i][Comodidad] = 100; }
				else if(Informacion[i][Hidratacion] >= 100) { Informacion[i][Hidratacion] = 100; }
				else if(Informacion[i][EstadoFisico] >= 100) { Informacion[i][EstadoFisico] = 100; }
				else if(Informacion[i][Amigos] >= 500) { Informacion[i][Amigos] = 500; }
				else if(Informacion[i][Apariencia] >= 100) { Informacion[i][Apariencia] = 100; }
				else if(Informacion[i][Codificadores] >= 9999) { Informacion[i][Codificadores] = 9999; }
				else if(Informacion[i][Crack] >= 9999) { Informacion[i][Crack] = 9999; }

				// -= Valores Negativos =-
				if(Informacion[i][Inteligencia] <= 1) { Informacion[i][Inteligencia] = 0; }
				else if(Informacion[i][Hambre] <= 1) { Informacion[i][Hambre] = 0; }
				else if(Informacion[i][Diversion] <= 1) { Informacion[i][Diversion] = 0; }
				else if(Informacion[i][Higiene] <= 1) { Informacion[i][Higiene] = 0; }
				else if(Informacion[i][Cansancio] <= 1) { Informacion[i][Cansancio] = 0; }
				else if(Informacion[i][Comodidad] <= 1) { Informacion[i][Comodidad] = 0; }
				else if(Informacion[i][Hidratacion] <= 1) { Informacion[i][Hidratacion] = 0; }
				else if(Informacion[i][EstadoFisico] <= 1) { Informacion[i][EstadoFisico] = 0; }
				else if(Informacion[i][Amigos] <= 1) { Informacion[i][Amigos] = 0; }
				else if(Informacion[i][Apariencia] <= 1) { Informacion[i][Apariencia] = 0; }

				// -= Sistema de Apariencias =-
				if(Informacion[i][Skin] == 0) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 1) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 2) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 7) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 9) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 10) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 11) { Informacion[i][Apariencia] = 40; }
				else if(Informacion[i][Skin] == 12) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 13) { Informacion[i][Apariencia] = 36; }
				else if(Informacion[i][Skin] == 14) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 15) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 16) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 17) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 18) { Informacion[i][Apariencia] = 50; }
				else if(Informacion[i][Skin] == 19) { Informacion[i][Apariencia] = 50; }
				else if(Informacion[i][Skin] == 20) { Informacion[i][Apariencia] = 45; }
				else if(Informacion[i][Skin] == 21) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 22) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 23) { Informacion[i][Apariencia] = 55; }
				else if(Informacion[i][Skin] == 24) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 25) { Informacion[i][Apariencia] = 55; }
				else if(Informacion[i][Skin] == 26) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 27) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 28) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 29) { Informacion[i][Apariencia] = 65; }
				else if(Informacion[i][Skin] == 30) { Informacion[i][Apariencia] = 45; }
				else if(Informacion[i][Skin] == 31) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 32) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 33) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 34) { Informacion[i][Apariencia] = 40; }
				else if(Informacion[i][Skin] == 35) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 36) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 37) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 38) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 39) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 40) { Informacion[i][Apariencia] = 55; }
				else if(Informacion[i][Skin] == 41) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 42) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 43) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 44) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 45) { Informacion[i][Apariencia] = 55; }
				else if(Informacion[i][Skin] == 46) { Informacion[i][Apariencia] = 70; }
				else if(Informacion[i][Skin] == 47) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 48) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 49) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 50) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 51) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 52) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 53) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 54) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 55) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 56) { Informacion[i][Apariencia] = 65; }
				else if(Informacion[i][Skin] == 57) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 58) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 59) { Informacion[i][Apariencia] = 90; }
				else if(Informacion[i][Skin] == 60) { Informacion[i][Apariencia] = 40; }
				else if(Informacion[i][Skin] == 61) { Informacion[i][Apariencia] = 50; }
				else if(Informacion[i][Skin] == 62) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 63) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 64) { Informacion[i][Apariencia] = 90; }
				else if(Informacion[i][Skin] == 65) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 66) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 67) { Informacion[i][Apariencia] = 40; }
				else if(Informacion[i][Skin] == 68) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 69) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 70) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 71) { Informacion[i][Apariencia] = 40; }
				else if(Informacion[i][Skin] == 72) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 74) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 75) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 76) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 77) { Informacion[i][Apariencia] = 2; }
				else if(Informacion[i][Skin] == 78) { Informacion[i][Apariencia] = 2; }
				else if(Informacion[i][Skin] == 79) { Informacion[i][Apariencia] = 2; }
				else if(Informacion[i][Skin] == 80) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 81) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 82) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 83) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 84) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 85) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 86) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 87) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 88) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 89) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 90) { Informacion[i][Apariencia] = 70; }
				else if(Informacion[i][Skin] == 91) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 92) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 93) { Informacion[i][Apariencia] = 70; }
				else if(Informacion[i][Skin] == 94) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 95) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 96) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 97) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 98) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 99) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 100) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 101) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 102) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 103) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 104) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 105) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 106) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 107) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 108) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 109) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 110) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 111) { Informacion[i][Apariencia] = 50; }
				else if(Informacion[i][Skin] == 112) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 113) { Informacion[i][Apariencia] = 70; }
				else if(Informacion[i][Skin] == 114) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 115) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 115) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 116) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 117) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 118) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 119) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 120) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 121) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 122) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 123) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 124) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 125) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 126) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 127) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 128) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 129) { Informacion[i][Apariencia] = 10; }
				else if(Informacion[i][Skin] == 130) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 131) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 132) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 133) { Informacion[i][Apariencia] = 20; }
				else if(Informacion[i][Skin] == 134) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 135) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 136) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 137) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 138) { Informacion[i][Apariencia] = 90; }
				else if(Informacion[i][Skin] == 139) { Informacion[i][Apariencia] = 90; }
				else if(Informacion[i][Skin] == 140) { Informacion[i][Apariencia] = 90; }
				else if(Informacion[i][Skin] == 141) { Informacion[i][Apariencia] = 90; }
				else if(Informacion[i][Skin] == 142) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 143) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 144) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 145) { Informacion[i][Apariencia] = 90; }
				else if(Informacion[i][Skin] == 146) { Informacion[i][Apariencia] = 50; }
				else if(Informacion[i][Skin] == 147) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 148) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 149) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 150) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 151) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 152) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 153) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 154) { Informacion[i][Apariencia] = 70; }
				else if(Informacion[i][Skin] == 155) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 156) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 157) { Informacion[i][Apariencia] = 40; }
				else if(Informacion[i][Skin] == 158) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 159) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 160) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 161) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 162) { Informacion[i][Apariencia] = 1; }
				else if(Informacion[i][Skin] == 163) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 164) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 165) { Informacion[i][Apariencia] = 65; }
				else if(Informacion[i][Skin] == 166) { Informacion[i][Apariencia] = 65; }
				else if(Informacion[i][Skin] == 167) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 168) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 169) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 170) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 171) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 172) { Informacion[i][Apariencia] = 60; }
				else if(Informacion[i][Skin] == 173) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 174) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 175) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 176) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 177) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 178) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 179) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 180) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 181) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 182) { Informacion[i][Apariencia] = 10; }
				else if(Informacion[i][Skin] == 183) { Informacion[i][Apariencia] = 10; }
				else if(Informacion[i][Skin] == 184) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 185) { Informacion[i][Apariencia] = 70; }
				else if(Informacion[i][Skin] == 186) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 187) { Informacion[i][Apariencia] = 45; }
				else if(Informacion[i][Skin] == 188) { Informacion[i][Apariencia] = 46; }
				else if(Informacion[i][Skin] == 189) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 189) { Informacion[i][Apariencia] = 31; }
				else if(Informacion[i][Skin] == 190) { Informacion[i][Apariencia] = 33; }
				else if(Informacion[i][Skin] == 191) { Informacion[i][Apariencia] = 90; }
				else if(Informacion[i][Skin] == 192) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 193) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 194) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 195) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 196) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 197) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 198) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 199) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 200) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 201) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 202) { Informacion[i][Apariencia] = 33; }
				else if(Informacion[i][Skin] == 203) { Informacion[i][Apariencia] = 33; }
				else if(Informacion[i][Skin] == 204) { Informacion[i][Apariencia] = 33; }
				else if(Informacion[i][Skin] == 205) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 206) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 207) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 208) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 209) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 210) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 211) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 212) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 213) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 214) { Informacion[i][Apariencia] = 98; }
				else if(Informacion[i][Skin] == 215) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 216) { Informacion[i][Apariencia] = 99; }
				else if(Informacion[i][Skin] == 217) { Informacion[i][Apariencia] = 70; }
				else if(Informacion[i][Skin] == 218) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 219) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 220) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 221) { Informacion[i][Apariencia] = 65; }
				else if(Informacion[i][Skin] == 222) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 223) { Informacion[i][Apariencia] = 96; }
				else if(Informacion[i][Skin] == 224) { Informacion[i][Apariencia] = 50; }
				else if(Informacion[i][Skin] == 226) { Informacion[i][Apariencia] = 80; }
				else if(Informacion[i][Skin] == 227) { Informacion[i][Apariencia] = 14; }
				else if(Informacion[i][Skin] == 228) { Informacion[i][Apariencia] = 34; }
				else if(Informacion[i][Skin] == 229) { Informacion[i][Apariencia] = 24; }
				else if(Informacion[i][Skin] == 230) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 231) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 232) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 233) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 234) { Informacion[i][Apariencia] = 44; }
				else if(Informacion[i][Skin] == 235) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 236) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 237) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 238) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 239) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 240) { Informacion[i][Apariencia] = 95; }
				else if(Informacion[i][Skin] == 241) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 242) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 243) { Informacion[i][Apariencia] = 5; }
				else if(Informacion[i][Skin] == 244) { Informacion[i][Apariencia] = 50; }
				else if(Informacion[i][Skin] == 245) { Informacion[i][Apariencia] = 67; }
				else if(Informacion[i][Skin] == 246) { Informacion[i][Apariencia] = 99; }
				else if(Informacion[i][Skin] == 247) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 248) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 249) { Informacion[i][Apariencia] = 64; }
				else if(Informacion[i][Skin] == 250) { Informacion[i][Apariencia] = 37; }
				else if(Informacion[i][Skin] == 251) { Informacion[i][Apariencia] = 64; }
				else if(Informacion[i][Skin] == 252) { Informacion[i][Apariencia] = 3; }
				else if(Informacion[i][Skin] == 253) { Informacion[i][Apariencia] = 3; }
				else if(Informacion[i][Skin] == 254) { Informacion[i][Apariencia] = 24; }
				else if(Informacion[i][Skin] == 255) { Informacion[i][Apariencia] = 24; }
				else if(Informacion[i][Skin] == 256) { Informacion[i][Apariencia] = 96; }
				else if(Informacion[i][Skin] == 257) { Informacion[i][Apariencia] = 98; }
				else if(Informacion[i][Skin] == 258) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 259) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 260) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 261) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 262) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 263) { Informacion[i][Apariencia] = 38; }
				else if(Informacion[i][Skin] == 264) { Informacion[i][Apariencia] = 25; }
				else if(Informacion[i][Skin] == 265) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 266) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 267) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 268) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 269) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 270) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 271) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 272) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 273) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 274) { Informacion[i][Apariencia] = 45; }
				else if(Informacion[i][Skin] == 275) { Informacion[i][Apariencia] = 65; }
				else if(Informacion[i][Skin] == 276) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 277) { Informacion[i][Apariencia] = 45; }
				else if(Informacion[i][Skin] == 278) { Informacion[i][Apariencia] = 46; }
				else if(Informacion[i][Skin] == 279) { Informacion[i][Apariencia] = 47; }
				else if(Informacion[i][Skin] == 280) { Informacion[i][Apariencia] = 45; }
				else if(Informacion[i][Skin] == 281) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 282) { Informacion[i][Apariencia] = 45; }
				else if(Informacion[i][Skin] == 283) { Informacion[i][Apariencia] = 55; }
				else if(Informacion[i][Skin] == 284) { Informacion[i][Apariencia] = 35; }
				else if(Informacion[i][Skin] == 285) { Informacion[i][Apariencia] = 65; }
				else if(Informacion[i][Skin] == 286) { Informacion[i][Apariencia] = 75; }
				else if(Informacion[i][Skin] == 287) { Informacion[i][Apariencia] = 55; }
				else if(Informacion[i][Skin] == 288) { Informacion[i][Apariencia] = 55; }
				else if(Informacion[i][Skin] == 289) { Informacion[i][Apariencia] = 30; }
				else if(Informacion[i][Skin] == 290) { Informacion[i][Apariencia] = 45; }
				else if(Informacion[i][Skin] == 291) { Informacion[i][Apariencia] = 45; }
				else if(Informacion[i][Skin] == 292) { Informacion[i][Apariencia] = 55; }
				else if(Informacion[i][Skin] == 293) { Informacion[i][Apariencia] = 15; }
				else if(Informacion[i][Skin] == 294) { Informacion[i][Apariencia] = 98; }
				else if(Informacion[i][Skin] == 295) { Informacion[i][Apariencia] = 98; }
				else if(Informacion[i][Skin] == 296) { Informacion[i][Apariencia] = 48; }
				else if(Informacion[i][Skin] == 297) { Informacion[i][Apariencia] = 48; }
				else if(Informacion[i][Skin] == 298) { Informacion[i][Apariencia] = 48; }
				else if(Informacion[i][Skin] == 299) { Informacion[i][Apariencia] = 92; }
				else if(Informacion[i][Faccion] == LSPD) { Informacion[i][Canal] = 1; }
				else if(Informacion[i][Faccion] == LSMD) { Informacion[i][Canal] = 1; }
				else if(Informacion[i][Faccion] == TAXI) { Informacion[i][Canal] = 1; }
				else if(Informacion[i][Faccion] == PRES) { Informacion[i][Canal] = 1; }
				else if(Informacion[i][Faccion] == FBI) { Informacion[i][Canal] = 1; }
				else if(Informacion[i][Faccion] == BOMB) { Informacion[i][Canal] = 1; }
				else if(Informacion[i][Faccion] == NFS) { Informacion[i][Canal] = 1; }
				if(Informacion[i][TiempoCastigado] > 0)
				{
					Informacion[i][TiempoCastigado] -= 1;
				}
				else if(Informacion[i][TiempoCastigado] == 0 && Informacion[i][Castigado] == 1)
				{
			 	   Informacion[i][Castigado] = 0;
				   SetPlayerInterior(i, 0);
				   Informacion[i][Interior] = 0;
				   Informacion[i][TiempoCastigado] = 0;
				   SetPlayerPos(i, 1544.6467,-1675.6335,13.5588);
				}
				// -= Subida de Nivel Automatico =-
				SetPlayerScore(i, Informacion[i][Nivel]);
				new Exp = Informacion[i][Experiencia];
				if(Exp == 10)
				{
					Informacion[i][Experiencia] = 0;
					Informacion[i][Nivel] += 1;
					format(rango, sizeof(rango), "* Has subido de nivel, actualmente tienes nivel %d", Informacion[i][Nivel]);
					SendClientMessage(i, AZULCLARO, rango);
				}
				// -= Guarado de Cuentas =-
				if(Informacion[i][Advertencias] == 3)
				{
					SendClientMessage(i, ROJO, "Has sido kickeado automaticamente por tener 3 advertencias");
					Kick(i);
				}
				OnPropUpdate();
		}
		return 1;
}
public RangoCercano(Float:radi, playerid, rango[],col1,col2,col3,col4,col5)
{
   if(IsPlayerConnected(playerid))
   {
      new Float:posx, Float:posy, Float:posz;
      new Float:oldposx, Float:oldposy, Float:oldposz;
      new Float:tempposx, Float:tempposy, Float:tempposz;
      GetPlayerPos(playerid, oldposx, oldposy, oldposz);
      for(new i = 0; i < MAX_PLAYERS; i++)
      {
         if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
         {
            if(!Amplificador[i])
            {
               GetPlayerPos(i, posx, posy, posz);
               tempposx = (oldposx -posx);
               tempposy = (oldposy -posy);
               tempposz = (oldposz -posz);
               if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
               {
                  SendClientMessage(i, col1, rango);
               }
               else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
               {
                  SendClientMessage(i, col2, rango);
               }
               else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
               {
                  SendClientMessage(i, col3, rango);
               }
               else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
               {
                  SendClientMessage(i, col4, rango);
               }
               else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
               {
                  SendClientMessage(i, col5, rango);
               }
            }
            else
            {
               SendClientMessage(i, col1, rango);
            }
         }
      }
   }
   return 1;
}

public RangoCercanoS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public GuardarFondos()
{
	new coordsrango[128];
	format(coordsrango, sizeof(coordsrango), "%d,%d,%d",CajaGobierno,CajaFuerteYKZ,CajaFuerteLCN);
	new File: file2 = fopen("Propiedades/Fondos.ini", io_write);
	fwrite(file2, coordsrango);
	fclose(file2);
	return 1;
}

public PayDay()
{
	new rango[128];
	new playername2[MAX_PLAYER_NAME];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			new DB:archivo = db_open("subvencion.db");
		    new DBResult:qresult;
		    new query[256];
		    if(Informacion[i][Faccion] >= 1)
		    {
		        GetPlayerName(i, playername2, sizeof(playername2));
		        format(query,sizeof(query),"SELECT Horas FROM horasjugadas WHERE Nombre='%s'",playername2);
				qresult = db_query(archivo, query);
				db_get_field(qresult, 0, rango, sizeof(rango));
				new horas = strval(rango);
				new horas2 = (horas+1);
				db_free_result(qresult);
		    	format(query, sizeof(query), "UPDATE horasjugadas SET Horas = %d WHERE Nombre='%s'", horas2, playername2);
				qresult = db_query(archivo, query);
				db_free_result(qresult);
			}
			db_close(archivo);
			SendClientMessage(i, NARANJA, "* * * * * -= Bolsa de Valores de Los Santos =- * * * * *");
			format(rango, sizeof(rango), "Bolsa anterior: $%d", Informacion[i][Banco]);
			SendClientMessage(i, BLANCO, rango);
			format(rango, sizeof(rango), "Paga: $350");
			SendClientMessage(i, BLANCO, rango);
			Informacion[i][Banco] += 350;
			SendClientMessage(i, 0x808080FF, "----------------------------------------------------");
			format(rango, sizeof(rango), "Nuevo Balance: $%d", Informacion[i][Banco]);
			if(Informacion[i][Faccion] == TRAF)
			{
				SendClientMessage(i, AZUL, "* Has obtenido una bonificacion de 50 materiales");
				Informacion[i][Materiales] += 50;
				return 1;
			}
			if(Informacion[i][Premium] == 1)
			{
				SendClientMessage(i, ROJOCREMA, "Por ser miembro premium nivel 1 se te ha bonificado con 2500$");
				Informacion[i][Banco] += 2500;
				return 1;
			}
			if(Informacion[i][Premium] == 2)
			{
				SendClientMessage(i, ROJOCREMA, "Por ser miembro premium nivel 2 se te ha bonificado con 4500$");
				Informacion[i][Banco] += 4500;
				return 1;
			}
			if(Informacion[i][Premium] == 3)
			{
				SendClientMessage(i, ROJOCREMA, "Por ser miembro premium nivel 3 se te ha bonificado con 6500$");
				Informacion[i][Banco] += 6500;
				return 1;
			}
			if(Informacion[i][Premium] == 4)
			{
				SendClientMessage(i, ROJOCREMA, "Por ser miembro premium nivel 4 se te ha bonificado con 8500$");
				Informacion[i][Banco] += 8500;
				return 1;
			}
			if(Informacion[i][Premium] == 5)
			{
				SendClientMessage(i, ROJOCREMA, "Por ser miembro premium nivel 6 se te ha bonificado con 10000$");
				Informacion[i][Banco] += 10000;
				return 1;
			}
			SendClientMessage(i, BLANCO, rango);
			Informacion[i][Experiencia] += 1;
			return 1;
		}
	}
	return 0;
}

public OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsrango[256];
		format(coordsrango, sizeof(coordsrango), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hHealthx],
		HouseInfo[idx][hHealthy],
		HouseInfo[idx][hHealthz],
		HouseInfo[idx][hArmourx],
		HouseInfo[idx][hArmoury],
		HouseInfo[idx][hArmourz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hDiscription],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hArm],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hDate],
		HouseInfo[idx][hLevel],
		HouseInfo[idx][hWorld],
		HouseInfo[idx][EnVenta]);
		if(idx == 0)
		{
			file2 = fopen("Propiedades/Casas.cfg", io_write);
		}
		else
		{
			file2 = fopen("Propiedades/Casas.cfg", io_append);
		}
		fwrite(file2, coordsrango);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsrango[256];
		format(coordsrango, sizeof(coordsrango), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior],
		BizzInfo[idx][bProducts],
		BizzInfo[idx][bMaxProducts],
		BizzInfo[idx][bPriceProd],
		BizzInfo[idx][bVirtualWorld],
		BizzInfo[idx][EnVenta]);
		if(idx == 0)
		{
			file2 = fopen("Propiedades/Negocios.cfg", io_write);
		}
		else
		{
			file2 = fopen("Propiedades/Negocios.cfg", io_append);
		}
		fwrite(file2, coordsrango);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsrango[256];
		format(coordsrango, sizeof(coordsrango), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbExtortion],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked],
		SBizzInfo[idx][sbInterior],
		SBizzInfo[idx][sbProducts],
		SBizzInfo[idx][sbMaxProducts],
		SBizzInfo[idx][sbPriceProd],
		SBizzInfo[idx][EnVenta]);
		if(idx == 0)
		{
			file2 = fopen("Propiedades/SNegocios.cfg", io_write);
		}
		else
		{
			file2 = fopen("Propiedades/SNegocios.cfg", io_append);
		}
		fwrite(file2, coordsrango);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(GasInfo))
	{
		new coordsrango[128];
		format(coordsrango, sizeof(coordsrango), "%d|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d\n",
		GasInfo[idx][gVenta],
		GasInfo[idx][gPropietario],
		GasInfo[idx][gMensaje],
		GasInfo[idx][gPuntoX],
		GasInfo[idx][gPuntoY],
		GasInfo[idx][gPuntoZ],
		GasInfo[idx][CargaX],
		GasInfo[idx][CargaY],
		GasInfo[idx][CargaZ],
		GasInfo[idx][gPrecioGas],
		GasInfo[idx][gCajaFuerte],
		GasInfo[idx][gGasolina],
		GasInfo[idx][gMaxGasolina],
		GasInfo[idx][gPrecioComGas],
		GasInfo[idx][gNivel],
		GasInfo[idx][gPrecioLocal],
		GasInfo[idx][EnVenta]);
		if(idx == 0)
		{
			file2 = fopen("Propiedades/Gasolineras.cfg", io_write);
		}
		else
		{
			file2 = fopen("Propiedades/Gasolineras.cfg", io_append);
		}
		fwrite(file2, coordsrango);
		idx++;
		fclose(file2);
	}
	idx = VV_DESDE;
 	while (idx < sizeof(CarInfo))
	{
		new coordsrango[128];
		format(coordsrango, sizeof(coordsrango), "%d,%f,%f,%f,%f,%d,%d,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",/*%d,%d,%d,%d*/
 		CarInfo[idx][cModel],//
		CarInfo[idx][cLocationx],//
		CarInfo[idx][cLocationy],//
		CarInfo[idx][cLocationz],//
		CarInfo[idx][cAngle],//
		CarInfo[idx][cColorOne],//
		CarInfo[idx][cColorTwo],//
		CarInfo[idx][cNameD],//
		CarInfo[idx][cVenta],//
		CarInfo[idx][cLock],
		CarInfo[idx][cTComprado],
		CarInfo[idx][cGPS],
		CarInfo[idx][cPaintJob],
		CarInfo[idx][cNitro],
		CarInfo[idx][cLlantas],
		CarInfo[idx][cAleron],
		CarInfo[idx][cParachoDelan],
		CarInfo[idx][cParachoTrase],
		CarInfo[idx][cHidraulica],
		CarInfo[idx][cTecho],
		CarInfo[idx][cEscape],
		CarInfo[idx][cParachoDesco],
		CarInfo[idx][cEmbellecedor],
		CarInfo[idx][cEmbellecedor2]);
		if(idx == VV_DESDE)
		{
			file2 = fopen("Propiedades/Coches.cfg", io_write);
		}
		else
		{
			file2 = fopen("Propiedades/Coches.cfg", io_append);
		}
		fwrite(file2, coordsrango);
		idx++;
		fclose(file2);
	}
	return 1;
}

public VolveraKickear(playerid)
{
    NoKick[playerid] = 0;
    return 1;
}
public VolveraBanear(playerid)
{
    NoBan[playerid] = 0;
    return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if(PosGPS(playerid))
	{
	    GameTextForPlayer(playerid, "Has llegado a tu destino", 5000, 4);
	    return 1;
	}
	return 0;
}

public ActualizarEstrellas(playerid)
{
	new rango[256];
    if(Informacion[playerid][Estrellas] == 0)
	{
		TextDrawHideForPlayer(playerid, Nivel1[playerid]);
		return 1;
	}
	if(Informacion[playerid][Estrellas] == 1)
	{
	    format(rango, sizeof(rango), "~y~ ]");
		TextDrawShowForPlayer(playerid, Nivel1[playerid]);
		return 1;
	}
	if(Informacion[playerid][Estrellas] == 2)
	{
	    format(rango, sizeof(rango), "~y~ ] ]");
		TextDrawShowForPlayer(playerid, Nivel1[playerid]);
		return 1;
	}
	if(Informacion[playerid][Estrellas] == 3)
	{
	    format(rango, sizeof(rango), "~y~ ] ] ]");
		TextDrawShowForPlayer(playerid, Nivel1[playerid]);
		return 1;
	}
	if(Informacion[playerid][Estrellas] == 4)
	{
	    format(rango, sizeof(rango), "~y~ ] ] ] ]");
		TextDrawShowForPlayer(playerid, Nivel1[playerid]);
		return 1;
	}
	if(Informacion[playerid][Estrellas] == 5)
	{
	    format(rango, sizeof(rango), "~y~ ] ] ] ] ]");
		TextDrawShowForPlayer(playerid, Nivel1[playerid]);
		return 1;
	}
	if(Informacion[playerid][Estrellas] == 6)
	{
	    format(rango, sizeof(rango), "~y~ ] ] ] ] ] ]");
		TextDrawShowForPlayer(playerid, Nivel1[playerid]);
		return 1;
	}
	return 1;
}

public LoadBizz()
{
	new arrCoords[21][64];
	new strFromFile2[256];
	new File: file = fopen("Propiedades/Negocios.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[7]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[8]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[10]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[11]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[12]);
			BizzInfo[idx][bTill] = strval(arrCoords[13]);
			BizzInfo[idx][bLocked] = strval(arrCoords[14]);
			BizzInfo[idx][bInterior] = strval(arrCoords[15]);
			BizzInfo[idx][bProducts] = strval(arrCoords[16]);
			BizzInfo[idx][bMaxProducts] = strval(arrCoords[17]);
			BizzInfo[idx][bPriceProd] = strval(arrCoords[18]);
			BizzInfo[idx][bVirtualWorld] = strval(arrCoords[19]);
			BizzInfo[idx][EnVenta] = strval(arrCoords[20]);
			printf("BizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
			idx,
			BizzInfo[idx][bOwner],
			BizzInfo[idx][bMessage],
			BizzInfo[idx][bEntranceCost],
			BizzInfo[idx][bTill],
			BizzInfo[idx][bProducts],
			BizzInfo[idx][bMaxProducts],
			BizzInfo[idx][bInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public Float:DistanciaDelPunto(playerid, Float:x1,Float:y1,Float:z1)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:x2,Float:y2,Float:z2;
	    GetPlayerPos(playerid,x2,y2,z2);
	    return floatsqroot(floatpower(floatsub(x1, x2), 2)+floatpower(floatsub(y1, y2), 2)+floatpower(floatsub(z1, z2), 2));
	}
	return 0.0;
}


public BackupClear(playerid, fueraderefuerzos)
{
	if(IsPlayerConnected(playerid))
	{
		if(Informacion[playerid][Faccion] == 1 || Informacion[playerid][Faccion] == 13)
		{
			if(Refuerzos[playerid] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(Informacion[i][Faccion] == 1)
						{
							SetPlayerMarkerForPlayer(i, playerid, ROJO);
						}
						else if(Informacion[i][Faccion] == 13)
						{
							SetPlayerMarkerForPlayer(i, playerid, AZUL);
						}
					}
				}
				if(fueraderefuerzos != 1)
				{
					SendClientMessage(playerid, AMARILLO, "Refuerzos abortados con exito");
				}
				else
				{
					SendClientMessage(playerid, AMARILLO, "Los refuerzos fueron abortados automaticamente");
				}
				Refuerzos[playerid] = 0;
			}
			else
			{
				if(fueraderefuerzos != 1)
				{
					SendClientMessage(playerid, GRIS, "No tienes ninguna llamada de refuerzos");
				}
			}
		}
		else
		{
			if (fueraderefuerzos != 1)
			{
				SendClientMessage(playerid, GRIS, "No eres parte de LSPD o del departamento de bomberos");
			}
		}
	}
	return 1;
}

public ApagarAlarma(vehicleid, id, playerid)
{
    CuentaAlarma[id]++;
    if(CuentaAlarma[id] > 27)
    {
        CuentaAlarma[id] = 0;
        GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
        SetVehicleParamsEx(vehicleid, engine, 0, 0, doors, bonnet, boot, objective);
    }
	return 1;
}
public MotorOn(playerid)
{
    new vehiculo = GetPlayerVehicleID(playerid);
    new rango[256];
	GetVehicleParamsEx(vehiculo, engine, lights, alarm, doors, bonnet, boot, objective);
    if(GetPlayerState(playerid) == 2)
    {
	    if(engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET)
	    {
      		SetVehicleParamsEx(vehiculo, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);
	    	format(rango, sizeof(rango), "* %s ha arrancado el motor del vehiculo con exito.", NombreEx(playerid));
	     	RangoCercano(20.0, playerid, rango, VIOLETA,VIOLETA,VIOLETA,VIOLETA,VIOLETA);
			TogglePlayerControllable(playerid, 1);
		 	PrendiendoM[playerid] = 0;
			glob0[playerid] = GetPlayerVehicleID(playerid);
			glob6590[playerid] = CreateObject(19295, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0);
			glob6D60[playerid] = CreateObject(19298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0);
			glob7530[playerid] = CreateObject(19295, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0);
			glob7D00[playerid] = CreateObject(19298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0);
			AttachObjectToVehicle(glob6590[playerid], glob0[playerid], 0, 1077936128, 3209481421, 0, 0, 0);
			AttachObjectToVehicle(glob6D60[playerid], glob0[playerid], 0, 1084227584, 3209481421, 0, 0, 0);
			AttachObjectToVehicle(glob7530[playerid], glob0[playerid], 0, 1086324736, 3209481421, 0, 0, 0);
			AttachObjectToVehicle(glob7D00[playerid], glob0[playerid], 0, 1088421888, 3209481421, 0, 0, 0);
			globD2F0[playerid][3] = 1;
		}
    }
	return 1;
}

public EsUnVehiculoVenta(vehicleid)
{
	if(vehicleid >= VV_DESDE && vehicleid <= TOTAL_VEH) { return 1; }
	return 0;
}

public LoadSBizz()
{
	new arrCoords[17][64];
	new strFromFile2[256];
	new File: file = fopen("Propiedades/SNegocios.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[7]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
			SBizzInfo[idx][sbInterior] = strval(arrCoords[12]);
			SBizzInfo[idx][sbProducts] = strval(arrCoords[13]);
			SBizzInfo[idx][sbMaxProducts] = strval(arrCoords[14]);
			SBizzInfo[idx][sbPriceProd] = strval(arrCoords[15]);
			SBizzInfo[idx][EnVenta] = strval(arrCoords[16]);
			printf("SBizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
			idx,
			SBizzInfo[idx][sbOwner],
			SBizzInfo[idx][sbMessage],
			SBizzInfo[idx][sbEntranceCost],
			SBizzInfo[idx][sbTill],
			SBizzInfo[idx][sbProducts],
			SBizzInfo[idx][sbMaxProducts],
			SBizzInfo[idx][sbInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public RConteo(playerid)
{
	if(EstaConteando[playerid] == 1)
	{
		new rango[256];
		Conteo[playerid] -= 1;
	    format(rango, sizeof(rango), "%d", Conteo[playerid]);
	    TextDrawSetString(Conteo3[playerid], rango);
	    TextDrawShowForPlayer(playerid,Conteo3[playerid]);
        MensajeLSPD(ROJO, "�Aviso!, se ha detectado un virus troyano zeus en la base de datos del banco!");
		SetTimerEx("RConteo2", 1000, 220, "d" , playerid);
		return 1;
	}
	return 1;
}

public RConteo2(playerid)
{
	if(EstaConteando[playerid] == 1)
	{
		new rango[256];
		Conteo[playerid] -= 1;
	   	format(rango, sizeof(rango), "%d", Conteo[playerid]);
	    TextDrawSetString(Conteo3[playerid], rango);
	    TextDrawShowForPlayer(playerid,Conteo3[playerid]);
		ActualizarConteo(playerid);
		return 1;
	}
	return 1;
}

public SafeGivePlayerWeapon(playerid, idarma, ammo)
{
	GivePlayerWeapon(playerid, idarma, ammo);
	return 0;
}

public SafeResetPlayerWeapons(playerid)
{
	ResetPlayerWeapons(playerid);
	return 0;
}

public Lotto(number)
{
	new JackpotFallen = 0;
	new rango[256];
	new winner[MAX_PLAYER_NAME];
	format(rango, sizeof(rango), "[LOTERIA] {FFFFFF}La loteria se ha lanzado, el numero ganador es %d!", number);
    SendClientMessageToAll(AZULCLARO, rango);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Loteria] > 0)
		    {
			    if(Informacion[i][Loteria] == number)
			    {
			        JackpotFallen = 1;
			        GetPlayerName(i, winner, sizeof(winner));
					format(rango, sizeof(rango), "[LOTERIA] {FFFFFF}%s ha ganado la loteria con un valor de $%d", winner, Jackpot);
					SendClientMessageToAll(AZULCLARO, rango);
					format(rango, sizeof(rango), "* Usted ha ganado $%d con su billete de loter�a.!", Jackpot);
					SendClientMessage(i, VERDE, rango);
					GivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, GRIS, "* Lo siento, hoy no es tu dia, has perdido la loteria");
			    }
			}
			Informacion[i][Loteria] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(125000); rand += 15789;
	    Jackpot = rand;
	    format(rango, sizeof(rango), "[LOTERIA] {FFFFFF}El nuevo pozo de ganadores se ha iniciado con  $%d.", Jackpot);
		SendClientMessageToAll(AZULCLARO, rango);
	}
	else
	{
	    new rand = random(15000); rand += 2158;
	    Jackpot += rand;
	    format(rango, sizeof(rango), "[LOTERIA] {FFFFFF}El pozo se ha aumentado a $%d.", Jackpot);
		SendClientMessageToAll(AZULCLARO, rango);
	}
	return 1;
}

public ProcesoCasino(playerid, number)
{
	new rango[256];
	new winner[MAX_PLAYER_NAME];
    new rand = random(100); rand += 1;
    number = rand;
	format(rango, sizeof(rango), "[CASINO] {FFFFFF}El numero seleccionado al azar por la tragaperras es %d", number);
    SendClientMessage(playerid, AZULCLARO, rango);
	if(IsPlayerConnected(playerid))
	{
	    if(NumeroAzar[playerid] == number)
	    {
		    new rand2 = random(1); rand2 += 99;
		    Jackpot = rand2;
	        GetPlayerName(playerid, winner, sizeof(winner));
			format(rango, sizeof(rango), "* Usted ha ganado $%d con su numero!", Jackpot);
			SendClientMessage(playerid, AZULCLARO, rango);
			GivePlayerMoney(playerid, Jackpot);
			NumeroAzar[playerid] = 0;
	    }
	    else
	    {
	        SendClientMessage(playerid, GRIS, "* Lo siento, hoy no es tu dia, no has ganado nada");
	    }
	}
	return 1;
}

public ActualizarConteo(playerid)
{
	if(Conteo[playerid] == 0)
	{
		EstaConteando[playerid] = 0;
		TextDrawHideForPlayer(playerid, Conteo0);
	    TextDrawHideForPlayer(playerid, Conteo1);
	    TextDrawHideForPlayer(playerid, Conteo2);
	    TextDrawHideForPlayer(playerid, Conteo3[playerid]);
		EstaConteando[playerid] = 0;
		Conteo[playerid] = 220;
		GivePlayerMoney(playerid, 1500);
		SendClientMessage(playerid, VERDE, "Has hackeado la base de datos, hulle antes de que llege la policia!");
		TogglePlayerControllable(playerid, 1);
		return 1;
	}
	return 1;
}

public PosCasinos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(1, playerid, 1966.3916,1029.6112,992.4745) || PlayerToPoint(1, playerid, 1966.4290,1021.7213,992.4688) || PlayerToPoint(1, playerid, 1966.3032,1013.9902,992.4688)) { return 1; }
		else if(PlayerToPoint(1, playerid,1969.5790,1006.3436,992.4745) || PlayerToPoint(1, playerid,1969.7469,1014.0928,992.4688) || PlayerToPoint(1, playerid,1969.5790,1006.3436,992.4745)) { return 1; }
		else if(PlayerToPoint(1, playerid,1969.7469,1014.0928,992.4688) || PlayerToPoint(1, playerid,1969.5494,1021.6647,992.4688) || PlayerToPoint(1, playerid,1963.0879,1044.0837,992.4688)) { return 1; }
		else if(PlayerToPoint(1, playerid,1969.6066,1029.6602,992.4745) || PlayerToPoint(1, playerid,1963.0879,1044.0837,992.4688) || PlayerToPoint(1, playerid,1958.0675,1049.1113,992.4688)) { return 1; }
		else if(PlayerToPoint(1, playerid,1966.1088,1037.4690,992.4688) || PlayerToPoint(1, playerid,1943.1469,1028.9487,992.4688) || PlayerToPoint(1, playerid,1941.9313,1021.4644,992.4688)) { return 1; }
		else if(PlayerToPoint(1, playerid,1941.9680,1014.4678,992.4688) || PlayerToPoint(1, playerid,1942.8915,1006.9539,992.4688) || PlayerToPoint(1, playerid,1939.9583,1005.7206,992.4688)) { return 1; }
		else if(PlayerToPoint(1, playerid,1938.5399,1014.4084,992.4688) || PlayerToPoint(1, playerid,1938.5447,1021.5018,992.4688) || PlayerToPoint(1, playerid,1939.6985,1029.5764,992.4688)) { return 1; }
		else if(PlayerToPoint(1, playerid,1963.5778,998.6024,992.4745) || PlayerToPoint(1, playerid,1961.1442,992.6971,992.4688) || PlayerToPoint(1, playerid,1957.1545,988.5188,992.4688)) { return 1; }
		else if(PlayerToPoint(1, playerid,1945.2612,986.4633,992.4688) || PlayerToPoint(1, playerid,1940.7848,991.2217,992.4609) || PlayerToPoint(1, playerid,1936.2550,986.7031,992.4745)) { return 1; }
	}
	return 0;
}

public IsAtDealership(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(25.0,playerid,2128.0864,-1135.3912,25.5855) || PlayerToPoint(50,playerid, 1260.8364,-2029.2443,59.3960) || PlayerToPoint(50,playerid,537.3366,-1293.2140,17.2422) || PlayerToPoint(35,playerid,2521.5544,-1524.4504,23.8365) || PlayerToPoint(50,playerid,2155.0146,-1177.3333,23.8211) || PlayerToPoint(50,playerid,299.1723,-1518.6627,24.6007) || PlayerToPoint(50,playerid, 1637.8688,-1896.8676,13.5542) || PlayerToPoint(50,playerid, 1256.7299,-1820.0626,13.4040))
  		{
			return 1;

		}
		 else if(PlayerToPoint(50,playerid, 1054.4155,-899.6979,42.9457) || PlayerToPoint(50,playerid, 2474.3921,-1549.0006,24.0045) || PlayerToPoint(15, playerid, 2495.1750,-1750.8363,13.4751) || PlayerToPoint(20, playerid, 1658.2925,-1698.7699,20.4727) || PlayerToPoint(10, playerid, 1663.2687,-1703.2450,15.6094))
	    {
			return 1;
	    }

	}
	return 0;
}

public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
    if(strsrc[i]==delimiter || i==strlen(strsrc))
	{
       len = strmid(strdest[aNum], strsrc, li, i, 128);
	   strdest[aNum][len] = 0;
	   li = i+1;
	   aNum++;
	}
	i++;
	}
	return 1;
}

public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}

public desactivarBomba(playerid, pbomb)
{
	if(IsPlayerConnected(playerid))
	{
	    new rango[128];
	    new azar = random(4);
	    if(azar == 1 || azar == 2 ||azar == 3 || azar == 4)
	    {
	        format(rango, sizeof(rango), "* %s intenta desactivar la bomba y lo logra", NombreEx(playerid));
            RangoCercano(30.0,playerid, rango,VERDE,VERDE,VERDE,VERDE,VERDE);
            DestroyObject(ObjetoBomba[pbomb]);
            PlayerBomba[pbomb] = 0;
            SendClientMessage(playerid, AZULCLARO, "Has desactivado la bomba exitosamente");
            IDesacBomba[playerid] = 0;
            KillTimer(IDesacBombaV[playerid]);
	    }
	    else
	    {
	        if(IDesacBomba[playerid] == 0)
	        {
	        	format(rango, sizeof(rango), "* %s intenta desactivar la bomba pero falla", NombreEx(playerid));
            	RangoCercano(30.0,playerid, rango,ROJO,ROJO,ROJO,ROJO,ROJO);
            	IDesacBomba[playerid] = 1;
            	IDesacBombaV[playerid] = SetTimerEx("ExplotarBomba", 60000, false, "d", pbomb);
            }
            else
            {
	        	format(rango, sizeof(rango), "* %s intenta desactivar la bomba pero falla", NombreEx(playerid));
            	RangoCercano(30.0,playerid, rango,ROJO,ROJO,ROJO,ROJO,ROJO);
            }
	    }
	}
	return 1;
}

public EsUnBanco(playerid)
{
	if(PlayerToPoint(1, playerid, 1438.3528,-996.9083,1639.7843)) { }
	else if(PlayerToPoint(1, playerid, 1432.7076,-997.0886,1639.7843)) { }
	else if(PlayerToPoint(1, playerid, 1424.6422,-981.8258,1639.7843)) { }
	else if(PlayerToPoint(1, playerid, 1421.2076,-981.5569,1639.7843)) { }
	else if(PlayerToPoint(1, playerid, 1417.7760,-981.4537,1639.7843)) { }
	return 0;
}

public PosGPS(playerid)
{
	if(PlayerToPoint(5, playerid,1825.6648,-1682.5582,13.3828)) { }			// [GPS] Discoteca
	else if(PlayerToPoint(5, playerid,1480.9393,-1737.0546,13.3828)) { }	// [GPS] Ayuntamiento
	else if(PlayerToPoint(5, playerid,1536.5402,-1675.5782,13.3828)) { } 	// [GPS] Comisaria
	else if(PlayerToPoint(5, playerid,1497.2371,-1587.4580,13.3828)) { } 	// [GPS] Banco
	else if(PlayerToPoint(5, playerid,1427.4557,-1555.0264,13.3618)) { } 	// [GPS] FBI
	else if(PlayerToPoint(5, playerid,1191.8245,-1323.0499,13.3984)) { } 	// [GPS] Hospital
	else if(PlayerToPoint(5, playerid,953.8120,-1330.5898,13.3784)) { }		// [GPS] SexShop
	else if(PlayerToPoint(5, playerid,922.1129,-1352.9438,13.2011)) { }		// [GPS] Cluckin Bell
	else if(PlayerToPoint(5, playerid,820.0656,-1603.3110,13.3828)) { }		// [GPS] Burger Shot
	else if(PlayerToPoint(5, playerid,641.1718,-1356.9559,13.4042)) { }		// [GPS] LSTV
	else if(PlayerToPoint(5, playerid,554.8898,-1248.3456,16.9279)) { }		// [GPS] Concersionaria
	else if(PlayerToPoint(5, playerid,1022.4769,-1137.0471,23.6563)) { } 	// [GPS] Casino
	else if(PlayerToPoint(5, playerid,1820.0183,-1578.0375,13.3563)) { } 	// [GPS] Bienes y Propiedades
	else if(PlayerToPoint(5, playerid,1818.6393,-1889.8337,13.3970)) { } 	// [GPS] Departamento de Transporte
	else if(PlayerToPoint(5, playerid,2084.4561,-1806.2413,13.3828)) { } 	// [GPS] Well Pizza Stack
	else if(PlayerToPoint(5, playerid,2245.5159,-1660.8187,15.2867)) { } 	// [GPS] Binco
	else if(PlayerToPoint(5, playerid,2305.1196,-1656.1473,14.4326)) { } 	// [GPS] Bar
	else if(PlayerToPoint(5, playerid,2233.6650,-1729.3856,13.3828)) { } 	// [GPS] Gimnasio
	else if(PlayerToPoint(5, playerid,2417.1294,-2089.3096,13.4366)) { } 	// [GPS] Mecanicos
	else if(PlayerToPoint(5, playerid,1944.7257,-1772.9319,13.3906)) { } 	// [GPS] Gasolinera
	else if(PlayerToPoint(5, playerid,1293.5608,-1651.7704,13.3828)) { } 	// [GPS] Departamento de Bomberos
	else if(PlayerToPoint(5, playerid,1751.9656,-1667.3910,13.3840)) { } 	// [GPS] Departamento de Licencias
	else if(PlayerToPoint(5, playerid,88.3231,-1536.9786,5.6411)) { }		// [GPS] Peaje
	else if(PlayerToPoint(5, playerid,1961.2142,-2169.0283,13.3828)) { } 	// [GPS] Aereopuerto
	return 0;
}


public CargarLuchas(playerid)
{
	if(Informacion[playerid][SLucha] == 1)
	{
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		return 1;
	}
	if(Informacion[playerid][SLucha] == 2)
	{
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		return 1;
	}
	if(Informacion[playerid][SLucha] == 3)
	{
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		return 1;
	}
	if(Informacion[playerid][SLucha] == 4)
	{
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		return 1;
	}
	return 0;
}

// -= Timers Garages =-

public TGLEON(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del garage ya se ha cerrado");
	MoveObject(GLEON, 1245.53173828,-767.15856934,93.84787750, 5);
	return 0;
}
public TGLSTV(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del garage ya se ha cerrado");
	MoveObject(GLSTV, 778.07592773,-1330.68212891,15.32218361, 5);
	return 0;
}
public TGPLSPD(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del departamento ya se ha cerrado");
	MoveObject(GPLSPD1, 244.91914368,72.43932343,1003.76940918, 5);
	MoveObject(GPLSPD2, 247.89778137,72.50014496,1003.76940918, 5);
	return 0;
}
public TGLSPD(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del garage ya se ha cerrado");
	MoveObject(GLSPD, 1547.38952637,-1627.45446777,16.29679298, 5);
	return 0;
}
public TGAERO(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del garage ya se ha cerrado");
	MoveObject(GAERO1, 1958.80297852,-2189.60522461,13.59685898, 5);
	MoveObject(GAERO2, 1964.18920898,-2189.91796875,13.59687424, 5);
	return 0;
}
public TGTAXI(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del garage ya se ha cerrado");
	MoveObject(GTAXI, 1811.55725098,-1890.03552246,15.18059349, 5);
	return 0;
}
public TGLSMD(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del garage ya se ha cerrado");
	MoveObject(GLSMD, 1141.32751465,-1292.51928711,15.35996437, 5);
	return 0;
}
public TGYAKU(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del garage ya se ha cerrado");
	MoveObject(GYAKU, 321.48580933,-1188.23852539,77.39393616, 5);
	return 0;
}
public TGMECA(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del garage ya se ha cerrado");
	MoveObject(GMECA, 2424.22802734,-2089.19458008,15.32026672, 5);
	return 0;
}
public TGBOMB(playerid)
{
	SendClientMessage(playerid, AMARILLO, "La puerta del garage ya se ha cerrado");
	MoveObject(GBOMB, 1283.96740723,-1652.19982910,16.46085548, 5);
	return 0;
}

public AddsOn()
{
	adds=1;
	TimeEsperaAd = 60;
	return 1;
}

public EsperaAnuncio()
{
	if(adds == 0)
	{
		TimeEsperaAd --;
		SetTimer("EsperaAnuncio", 1000, 0);
	}
    return 1;
}

public PuenteVehiculo(playerid, carid)
{
	if(IsPlayerConnected(playerid))
	{
	    new rango[128];
		new azar = random(4);
		if(azar == 1 || azar == 3)
		{
		    CarPuenteado[carid] = 1;
		    PrendiendoM[carid] = 1;
		    TogglePlayerControllable(playerid, 1);
		    Informacion[playerid][Ganzuas] -= 1;
            format(rango, sizeof(rango), "* %s intenta puentear el veh�culo, y lo logra", NombreEx(playerid));
            RangoCercano(30.0,playerid, rango, VERDE,VERDE,VERDE,VERDE,VERDE);
		}
		else
		{
		    Informacion[playerid][Ganzuas] -= 1;
		    format(rango, sizeof(rango), "* %s intenta puentear el veh�culo pero falla", NombreEx(playerid));
            RangoCercano(30.0,playerid, rango, ROJO,ROJO,ROJO,ROJO,ROJO);
            PrendiendoM[playerid] = 0;
		}
	}
	return 1;
}

public DateProp(playerid)
{
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if (strcmp(playername, HouseInfo[h][hOwner], true) == 0)
		{
			HouseInfo[h][hDate] = curdate;
			OnPropUpdate();
		}
	}
	return 1;
}

public ExplotarBomba(pbomb)
{
	if(IsPlayerConnected(pbomb))
	{
	    if(PlayerBomba[pbomb] == 2)
	    {
		    DestroyObject(ObjetoBomba[pbomb]);
			CreateExplosion(PosBomba[pbomb][0], PosBomba[pbomb][1], PosBomba[pbomb][2], 2, 10.0);
			PlayerBomba[pbomb] = 0;
			for(new player=0;player<MAX_PLAYERS;player++)
		    {
		        if(IsPlayerInRangeOfPoint(player, 10.0, PosBomba[pbomb][0], PosBomba[pbomb][1], PosBomba[pbomb][2]))
		        {
					SetPlayerHealth(player, 0.0);
		        }
		    }
		    for(new carid=0;carid<MAX_PLAYERS;carid++)
		    {
		        if(IsCarNearToPoint(carid, 10.0, PosBomba[pbomb][0], PosBomba[pbomb][1], PosBomba[pbomb][2]))
		        {
					SetVehicleHealth(carid, 0.0);
		        }
	     	}
	    }
     	else if(PlayerBomba[pbomb] == 3)
        {
            DestroyObject(ObjetoBomba[pbomb]);
            new Float:xpos,Float:ypos,Float:zpos;
			GetVehiclePos(IDCarBomba[pbomb], xpos, ypos, zpos);
			CreateExplosion(xpos, ypos, zpos, 2, 10.0);
			PlayerBomba[pbomb] = 0;
            SendClientMessage(pbomb, ROJIZO, "Has detonado la bomba");
            for(new player=0;player<MAX_PLAYERS;player++)
            {
                if(IsPlayerInRangeOfPoint(player, 10.0, xpos, ypos, zpos))
                {
					SetPlayerHealth(player, 0.0);
                }
            }
            for(new carid=0;carid<MAX_PLAYERS;carid++)
            {
                if(IsCarNearToPoint(carid, 10.0, xpos, ypos, zpos))
                {
					SetVehicleHealth(carid, 0.0);
                }
            }
        }
	}
	return 1;
}

public Float:DistanciaEntreCarPer(c1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetVehiclePos(c1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

public IsCarNearToPoint(carid, Float:radi, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(carid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
		return 1;
	}
	return 0;
}

public VehiculoCercano(p1)
{
	new x,Float:dis,Float:dis2,car;
	car = -1;
	dis = 99999.99;
	for (x=0;x<MAX_VEHICLES;x++)
	{
		dis2 = DistanciaEntreCarPer(x,p1);
		if(dis2 < dis && dis2 != -1.00)
		{
			dis = dis2;
			car = x;
		}
	}
	return car;
}

public DMatricula(playerid)
{
  TextDrawHideForPlayer(playerid, M_TEXTO[playerid]);
  TextDrawHideForPlayer(playerid, M_FONDO);
  TextDrawHideForPlayer(playerid, M_IDE);
  return 1;
}

public ClearComerciales(an)
{
	new rango[256];
	format(rango, sizeof(rango), "Vacio");
	ComerInfo[an][cBancaria] = 0;
	ComerInfo[an][cNumero] = 0;
	strmid(ComerInfo[an][cTitulo],rango, 0, strlen(rango), 255);
 	strmid(ComerInfo[an][cTexto],rango, 0, strlen(rango), 255);
 	strmid(ComerInfo[an][cDatos],rango, 0, strlen(rango), 255);
 	SaveComerciales();
 	LoadComerciales();
	return 1;
}

public LoadComerciales()
{
	new arrCoords[5][64];
	new strFromFile2[256];
	new File: file = fopen("comerciales.cfg", io_read);
	if(file)
	{
	    new idx;
	    while(idx < sizeof(ComerInfo))
	    {
	        fread(file,strFromFile2);
	        split(strFromFile2, arrCoords, '|');
	        ComerInfo[idx][cBancaria] = strval(arrCoords[0]);
	        ComerInfo[idx][cNumero] = strval(arrCoords[1]);
	        strmid(ComerInfo[idx][cTitulo],arrCoords[2], 0, strlen(arrCoords[2]), 255);
	        strmid(ComerInfo[idx][cTexto],arrCoords[3], 0, strlen(arrCoords[3]), 255);
	        strmid(ComerInfo[idx][cDatos],arrCoords[4], 0, strlen(arrCoords[4]), 255);
	        printf("Numero:%d C.Bancaria=%d Usado:%d Titulo:%s Texto:%s Datos:%s", idx, ComerInfo[idx][cBancaria], ComerInfo[idx][cNumero],ComerInfo[idx][cTitulo],ComerInfo[idx][cTexto],ComerInfo[idx][cDatos]);
	        idx++;
	    }
	    fclose(file);
	}
	return 1;
}

public SaveComerciales()
{
	new idx;
	new File: file2;
	while(idx < sizeof(ComerInfo))
	{
	    new coordsrango[256];
	    format(coordsrango, sizeof(coordsrango),"%d|%d|%s|%s|%s\n",ComerInfo[idx][cBancaria],ComerInfo[idx][cNumero],ComerInfo[idx][cTitulo],ComerInfo[idx][cTexto],ComerInfo[idx][cDatos]);
	    if(idx == 0)
	    {
	        file2 = fopen("comerciales.cfg", io_write);
	    }
	    else
	    {
	        file2 = fopen("comerciales.cfg", io_append);
	    }
	    fwrite(file2,coordsrango);
	    idx++;
		fclose(file2);
	}
	return 1;
}


public LoadMaletero()
{
    new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("maletero.ini", io_read);
	if (file)
	{
	    new idx = VV_DESDE;
		while (idx < TOTAL_VEH)
		{
		    fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			IDArmaMaletero[idx][0] = strval(arrCoords[0]);
			MunicionMaletero[idx][0] = strval(arrCoords[1]);
			IDArmaMaletero[idx][1] = strval(arrCoords[2]);
			MunicionMaletero[idx][1] = strval(arrCoords[3]);
			IDArmaMaletero[idx][2] = strval(arrCoords[4]);
			MunicionMaletero[idx][2] = strval(arrCoords[5]);
			IDArmaMaletero[idx][3] = strval(arrCoords[6]);
			MunicionMaletero[idx][3] = strval(arrCoords[7]);
			IDArmaMaletero[idx][4] = strval(arrCoords[8]);
			MunicionMaletero[idx][4] = strval(arrCoords[9]);
			VidaChalecoMaletero[idx] = floatstr(arrCoords[10]);
  			idx++;
		}
		fclose(file);
	}
	return 1;
}

public VerTELEVISOR(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(HouseEntered[playerid] != 255)
		{
		    return 1;
		}
	}
	return 0;
}

public EstudioTelevision(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(20.0, playerid, CamaraPosX, CamaraPosY, CamaraPosZ)){return 1;}
	}
	return 0;
}

public SaveMaletero()
{
	new File:file;
    new idx = VV_DESDE;
 	while (idx < TOTAL_VEH)
	{
		new coordsrango[128];
		format(coordsrango, sizeof(coordsrango), "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%f\n",
 		IDArmaMaletero[idx][0],
		MunicionMaletero[idx][0],
		IDArmaMaletero[idx][1],
		MunicionMaletero[idx][1],
		IDArmaMaletero[idx][2],
		MunicionMaletero[idx][2],
		IDArmaMaletero[idx][3],
		MunicionMaletero[idx][3],
		IDArmaMaletero[idx][4],
		MunicionMaletero[idx][4],
		VidaChalecoMaletero[idx]);
		if(idx == 0)
		{
			file = fopen("maletero.ini", io_write);
		}
		else
		{
			file = fopen("maletero.ini", io_append);
		}
		fwrite(file, coordsrango);
		idx++;
		fclose(file);
	}
	return 1;
}

public UpdateTime()
{
    gettime(hour, minute);
   	format(timestr,32,"%02d:%02d",hour,minute);
   	TextDrawSetString(txtTimeDisp,timestr);
   	SetWorldTime(hour);
	new x=0;
	while(x!=MAX_PLAYERS)
	{
	    if(IsPlayerConnected(x) && GetPlayerState(x) != PLAYER_STATE_NONE) {
	    SetPlayerTime(x,hour,minute);
		PayDay();
	}
	x++;
	}
}

public BoxTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 768.1064,14.3897,1000.6992);
	SetPlayerFacingAngle(playerid, 266.8890);
	SetPlayerCameraPos(playerid, 765.4290,8.6809,1000.7123);
	SetPlayerCameraLookAt(playerid, 768.1064,14.3897,1000.6992);
	ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,1,1,1,1,9500);
	SetTimerEx("BoxTrain2", 10000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Entrenando... ~n~~l~] ] ]",10000,3);
	return 1;
}
public BoxTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 771.5601,11.3144,1000.7026);
	SetPlayerCameraLookAt(playerid, 768.1064,14.3897,1000.6992);
	ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,1,1,1,1,14500);
	SetTimerEx("BoxTrain3", 15000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Entrenando... ~n~~y~] ~l~] ]",15000,3);
	return 1;
}
public BoxTrain3(playerid)
{
	SetPlayerCameraPos(playerid, 772.9484,-0.2051,1000.7241);
	SetPlayerCameraLookAt(playerid, 768.1064,14.3897,1000.6992);
	ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,1,1,1,1,19500);
	SetTimerEx("BoxTrain4", 20000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Entrenando... ~n~~y~] ] ~l~]",20000,3);
	return 1;
}
public BoxTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	SendClientMessage(playerid, VERDE, "Has terminado tu entrenamiento, Ahora eres un luchador profesional de Boxeo!");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Entrenamiento completado! ~n~~y~] ] ]",10000,3);
	return 1;
}
public KungTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 772.6890,5.4252,1000.7802);
	SetPlayerFacingAngle(playerid, 89.2975);
	SetPlayerCameraPos(playerid, 767.2456,-0.7102,1000.7197);
	SetPlayerCameraLookAt(playerid, 772.6890,5.4252,1000.7802);
	ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,7500);
	SetTimerEx("KungTrain2", 8000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Entrenando... ~n~~l~] ] ]",10000,3);
	return 1;
}
public KungTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 765.4534,8.1254,1000.7133);
	SetPlayerCameraLookAt(playerid, 772.6890,5.4252,1000.7802);
	ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,12500);
	SetTimerEx("KungTrain3", 13000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Entrenando... ~n~~b~] ~l~] ]",13000,3);
	return 1;
}
public KungTrain3(playerid)
{
	SetPlayerCameraPos(playerid, 774.3497,10.2337,1000.7027);
	SetPlayerCameraLookAt(playerid, 772.6890,5.4252,1000.7802);
	ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,17500);
	SetTimerEx("KungTrain4", 18000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Entrenando... ~n~~b~] ] ~l~]",18000,3);
	return 1;
}
public KungTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	SendClientMessage(playerid, VERDE, "Ha terminado su entrenamiento, Ahora es experto en  Kung Fu !");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Entrenamiento completado! ~n~~b~] ] ]",10000,3);
	return 1;
}

public GrabTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 767.1951,-2.5557,1000.7187);
	SetPlayerFacingAngle(playerid, 172.0182);
	SetPlayerCameraPos(playerid, 772.6243,-0.1576,1000.7242);
	SetPlayerCameraLookAt(playerid, 767.1951,-2.5557,1000.7187);
	ApplyAnimation(playerid,"GANGS","shake_carSH",4.0,1,0,0,0,8500);
	SetTimerEx("GrabTrain2", 9000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Entrenando... ~n~~l~] ] ]",9000,3);
	return 1;
}
public GrabTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 763.0099,2.6098,1001.5942);
	SetPlayerCameraLookAt(playerid, 767.1951,-2.5557,1000.7187);
	ApplyAnimation(playerid,"GANGS","shake_cara",4.0,1,0,0,0,13500);
	SetTimerEx("GrabTrain3", 14000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Entrenando... ~n~~p~] ~l~] ]",14000,3);
	return 1;
}
public GrabTrain3(playerid)
{
	SetPlayerCameraPos(playerid, 769.8934,8.1243,1000.7101);
	SetPlayerCameraLookAt(playerid, 767.1951,-2.5557,1000.7187);
	ApplyAnimation(playerid,"FIGHT_D","FightD_G",4.0,1,0,0,0,18500);
	SetTimerEx("GrabTrain4", 19000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Entrenando... ~n~~p~] ] ~l~]",19000,3);
	return 1;
}
public GrabTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	SendClientMessage(playerid, VERDE, "Ha terminado su entrenamiento, Ahora es experto en  Grab'n'Kick !");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Entrenamiento completado! ~n~~p~] ] ]",10000,3);
	return 1;
}

public KneeTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 772.4446,5.4702,1000.7802);
	SetPlayerFacingAngle(playerid, 89.8261);
	SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,29500);
	SetTimerEx("KneeTrain2", 30000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Entrenando... ~n~~l~] ] ]",30000,3);
	return 1;
}
public KneeTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 770.2583,-2.5223,1000.7255);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,34500);
	SetTimerEx("KneeTrain3", 35000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Entrenando... ~n~~r~] ~l~] ]",35000,3);
	return 1;
}
public KneeTrain3(playerid)
{
	SetPlayerCameraPos(playerid, 765.2747,12.5178,1000.7049);
	SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
	ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,36500);
	SetTimerEx("KneeTrain4", 37000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Entrenando... ~n~~r~] ] ~l~]",37000,3);
	return 1;
}
public KneeTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	SendClientMessage(playerid, VERDE, "Ha terminado su entrenamiento, Ahora es experto en  KneeHead !");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Entrenamiento completado! ~n~~r~] ] ]",10000,3);
	return 1;
}

public DefaultTrain(playerid)
{
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, 773.4645,-2.5023,1000.8479);
	SetPlayerFacingAngle(playerid, 182.1806);
	SetPlayerCameraPos(playerid, 767.9204,-1.1417,1000.7210);
	SetPlayerCameraLookAt(playerid, 773.4645,-2.5023,1000.8479);
	ApplyAnimation(playerid,"GYMNASIUM","gym_tread_walk",4.0,1,1,1,1,4500);
	SetTimerEx("DefaultTrain2", 5000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~Entrenando... ~n~~l~] ] ]",30000,3);
	return 1;
}
public DefaultTrain2(playerid)
{
	SetPlayerCameraPos(playerid, 771.5611,5.7611,1000.7802);
	SetPlayerCameraLookAt(playerid, 773.4645,-2.5023,1000.8479);
	ApplyAnimation(playerid,"GYMNASIUM","gym_tread_jog",4.0,1,1,1,1,9500);
	SetTimerEx("DefaultTrain3", 10000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~Entrenando... ~n~~w~] ~l~] ]",30000,3);
	return 1;
}
public DefaultTrain3(playerid)
{
	SetPlayerCameraPos(playerid, 763.2995,10.7890,1002.5639);
	SetPlayerCameraLookAt(playerid, 773.4645,-2.5023,1000.8479);
	ApplyAnimation(playerid,"GYMNASIUM","gym_tread_sprint",4.0,1,1,1,1,14500);
	SetTimerEx("DefaultTrain4", 15000, false, "i", playerid);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~Entrenando... ~n~~w~] ] ~l~]",30000,3);
	return 1;
}
public DefaultTrain4(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	ClearAnimations(playerid);
	SendClientMessage(playerid, VERDE, "Ha terminado su entrenamiento, Ahora es experto en el estilo de Lucha por defecto!");
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Entrenamiento completado! ~n~~w~] ] ]",10000,3);
	return 1;
}

public LoadProperty()
{
	new arrCoords[30][64];
	new strFromFile2[256];
	new File: file = fopen("Propiedades/Casas.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
			HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
			HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
			HouseInfo[idx][hArmourx] = strval(arrCoords[9]);
			HouseInfo[idx][hArmoury] = strval(arrCoords[10]);
			HouseInfo[idx][hArmourz] = strval(arrCoords[11]);
			//printf("HouseInfo hEntrancez %f",HouseInfo[idx][hEntrancez]);
			strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
			strmid(HouseInfo[idx][hDiscription], arrCoords[13], 0, strlen(arrCoords[13]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[14]);
			HouseInfo[idx][hHel] = strval(arrCoords[15]);
			HouseInfo[idx][hArm] = strval(arrCoords[16]);
			HouseInfo[idx][hInt] = strval(arrCoords[17]);
			HouseInfo[idx][hLock] = strval(arrCoords[18]);
			HouseInfo[idx][hOwned] = strval(arrCoords[19]);
			HouseInfo[idx][hRooms] = strval(arrCoords[20]);
			HouseInfo[idx][hRent] = strval(arrCoords[21]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[22]);
			HouseInfo[idx][hTakings] = strval(arrCoords[23]);
			HouseInfo[idx][hVec] = strval(arrCoords[24]);
  	        if(HouseInfo[idx][hVec] == 457)
			{
				HouseInfo[idx][hVec] = 411;
			}
			HouseInfo[idx][hVcol1] = strval(arrCoords[25]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[26]);
			HouseInfo[idx][hDate] = strval(arrCoords[27]);
			HouseInfo[idx][hLevel] = strval(arrCoords[28]);
			HouseInfo[idx][EnVenta] = strval(arrCoords[29]);
			printf("HouseInfo:%d Owner:%s hTakings %d hVec %d",idx,HouseInfo[idx][hOwner],HouseInfo[idx][hTakings],HouseInfo[idx][hVec]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

// - Extenciones Stock
strtok(const rango[], &index)
{
	new length = strlen(rango);
	while ((index < length) && (rango[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (rango[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = rango[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

stock strvalEx( const rango[] ) { if( strlen( rango ) >= 50 ) return 0; return strval(rango); }

stock NombreRPValido(nick[])
{
    new encontrados = 0;
    for(new i = 0; nick[i] != '\0'; i++)
    {
		if(nick[i] == '_') encontrados++;
    }
    if(encontrados == 1)
    {
		return true;
    }
    else
    {
		return false;
    }
}

stock VelociadMaxima(playerid)
{
	new Float:PosX, Float:PosY, Float:PosZ, Float:DistanciaRapidezJugador;
 	GetVehicleVelocity(GetPlayerVehicleID(playerid), PosX, PosY, PosZ);
	DistanciaRapidezJugador = floatmul(floatsqroot(floatadd(floatadd(floatpower(PosX, 2), floatpower(PosY, 2)),  floatpower(PosZ, 2))), 170.0);
	new velo = floatround(DistanciaRapidezJugador * 1);
	return velo;
}

stock NombreEx(playerid)
{
    new Nombre[24];
    GetPlayerName(playerid,Nombre,24);
    new N[24];
    strmid(N,Nombre,0,strlen(Nombre),24);
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if (N[i] == '_') N[i] = ' ';
    }
    return N;
}

stock RConteoS(playerid, text[])
{
	new rango[220];
	format(rango, sizeof(rango), "%d");
    TextDrawSetString(Conteo3[playerid], rango);
	TextDrawShowForPlayer(playerid, Conteo0);
	TextDrawShowForPlayer(playerid, Conteo1);
	TextDrawShowForPlayer(playerid, Conteo2);
	TextDrawShowForPlayer(playerid, Conteo3[playerid]);
	return 1;
}

stock CreateCono(Float:x,Float:y,Float:z,Float:Angle)
{
	for(new i = 0; i < sizeof(ConosInformacion); i++)
	{
		if(ConosInformacion[i][conoCreated] == 0)
		{
			ConosInformacion[i][conoCreated]=1;
			ConosInformacion[i][conoX]=x;
			ConosInformacion[i][conoY]=y;
			ConosInformacion[i][conoZ]=z-0.7;
			ConosInformacion[i][conoObject] = CreateObject(1238, x, y, z-0.6, 0, 0, Angle+180);
			return 1;
		}
	}
	return 0;
}

stock DeleteAllConos()
{
	for(new i = 0; i < sizeof(ConosInformacion); i++)
	{
		if(ConosInformacion[i][conoCreated] == 1)
		{
			ConosInformacion[i][conoCreated]=0;
			ConosInformacion[i][conoX]=0.0;
			ConosInformacion[i][conoY]=0.0;
			ConosInformacion[i][conoZ]=0.0;
			DestroyObject(ConosInformacion[i][conoObject]);
		}
	}
	return 0;
}

stock DeleteClosestCono(playerid)
{
	for(new i = 0; i < sizeof(ConosInformacion); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, ConosInformacion[i][conoX], ConosInformacion[i][conoY], ConosInformacion[i][conoZ]))
		{
			if(ConosInformacion[i][conoCreated] == 1)
			{
				ConosInformacion[i][conoCreated]=0;
				ConosInformacion[i][conoX]=0.0;
				ConosInformacion[i][conoY]=0.0;
				ConosInformacion[i][conoZ]=0.0;
				DestroyObject(ConosInformacion[i][conoObject]);
				return 1;
			}
		}
	}
	return 0;
}

stock DarSkin(playerid, skin)
{
	SetPlayerSkin(playerid, skin);
	Informacion[playerid][Skin] = skin;
}

stock CrearBarricada(Float:x,Float:y,Float:z,Float:Angle)
{
	for(new i = 0; i < sizeof(barInformacion); i++)
	{
		if(barInformacion[i][barricadaCreada] == 0)
		{
			barInformacion[i][barricadaCreada]=1;
			barInformacion[i][barX]=x;
			barInformacion[i][barY]=y;
			barInformacion[i][barZ]=z-0.7;
			barInformacion[i][barObjects] = CreateObject(981, x, y, z-0.6, 0, 0, Angle+180);
			return 1;
		}
	}
	return 0;
}

stock BorrarTodasBarricadas()
{
	for(new i = 0; i < sizeof(barInformacion); i++)
	{
		if(barInformacion[i][barricadaCreada] == 1)
		{
			barInformacion[i][barricadaCreada]=0;
			barInformacion[i][barX]=0.0;
			barInformacion[i][barY]=0.0;
			barInformacion[i][barZ]=0.0;
			DestroyObject(barInformacion[i][barObjects]);
		}
	}
	return 0;
}


stock BorrarBarricada(playerid)
{
	for(new i = 0; i < sizeof(barInformacion); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, barInformacion[i][barX], barInformacion[i][barY], barInformacion[i][barZ]))
		{
			if(barInformacion[i][barricadaCreada] == 1)
			{
				barInformacion[i][barricadaCreada]=0;
				barInformacion[i][barX]=0.0;
				barInformacion[i][barY]=0.0;
				barInformacion[i][barZ]=0.0;
				DestroyObject(barInformacion[i][barObjects]);
				return 1;
			}
		}
	}
	return 0;
}

stock CrearParada(Float:x,Float:y,Float:z,Float:Angle)
{
	for(new i = 0; i < sizeof(parInformacion); i++)
	{
		if(parInformacion[i][barricadaCreada] == 0)
		{
			parInformacion[i][barricadaCreada]=1;
			parInformacion[i][parX]=x;
			parInformacion[i][parY]=y;
			parInformacion[i][parZ]=z-0.7;
			parInformacion[i][parObjects] = CreateObject(3091, x, y, z-0.6, 0, 0, Angle+180);
			return 1;
		}
	}
	return 0;
}

stock BorrarTodasParadas()
{
	for(new i = 0; i < sizeof(parInformacion); i++)
	{
		if(parInformacion[i][barricadaCreada] == 1)
		{
			parInformacion[i][barricadaCreada]=0;
			parInformacion[i][parX]=0.0;
			parInformacion[i][parY]=0.0;
			parInformacion[i][parZ]=0.0;
			DestroyObject(parInformacion[i][parObjects]);
		}
	}
	return 0;
}

stock BorrarParadas(playerid)
{
	for(new i = 0; i < sizeof(parInformacion); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, parInformacion[i][parX], parInformacion[i][parY], parInformacion[i][parZ]))
		{
			if(parInformacion[i][barricadaCreada] == 1)
			{
				parInformacion[i][barricadaCreada]=0;
				parInformacion[i][parX]=0.0;
				parInformacion[i][parY]=0.0;
				parInformacion[i][parZ]=0.0;
				DestroyObject(parInformacion[i][parObjects]);
				return 1;
			}
		}
	}
	return 0;
}

stock sscanf(string[], format[], {Float,_}:...)
{
	new
		formatPos = 0,
		stringPos = 0,
		paramPos = 2,
		paramCount = numargs();
	while (paramPos < paramCount && string[stringPos])
	{
		switch (format[formatPos++])
		{
			case '\0':
			{
				return 0;
			}
			case 'i', 'd':
			{
				new
					neg = 1,
					num = 0,
					ch = string[stringPos];
				if (ch == '-')
				{
					neg = -1;
					ch = string[++stringPos];
				}
				do
				{
					stringPos++;
					if (ch >= '0' && ch <= '9')
					{
						num = (num * 10) + (ch - '0');
					}
					else
					{
						return 1;
					}
				}
				while ((ch = string[stringPos]) && ch != ' ');
				setarg(paramPos, 0, num * neg);
			}
			case 'h', 'x':
			{
				new
					ch,
					num = 0;
				while ((ch = string[stringPos++]))
				{
					switch (ch)
					{
						case 'x', 'X':
						{
							num = 0;
							continue;
						}
						case '0' .. '9':
						{
							num = (num << 4) | (ch - '0');
						}
						case 'a' .. 'f':
						{
							num = (num << 4) | (ch - ('a' - 10));
						}
						case 'A' .. 'F':
						{
							num = (num << 4) | (ch - ('A' - 10));
						}
						case ' ':
						{
							break;
						}
						default:
						{
							return 1;
						}
					}
				}
				setarg(paramPos, 0, num);
			}
			case 'c':
			{
				setarg(paramPos, 0, string[stringPos++]);
			}
			case 'f':
			{
				new tmp[25];
				strmid(tmp, string, stringPos, stringPos+sizeof(tmp)-2);
				setarg(paramPos, 0, _:floatstr(tmp));
			}
			case 's', 'z':
			{
				new
					i = 0,
					ch;
				if (format[formatPos])
				{
					while ((ch = string[stringPos++]) && ch != ' ')
					{
						setarg(paramPos, i++, ch);
					}
					if (!i) return 1;
				}
				else
				{
					while ((ch = string[stringPos++]))
					{
						setarg(paramPos, i++, ch);
					}
				}
				stringPos--;
				setarg(paramPos, i, '\0');
			}
			default:
			{
				continue;
			}
		}
		while (string[stringPos] && string[stringPos] != ' ')
		{
			stringPos++;
		}
		while (string[stringPos] == ' ')
		{
			stringPos++;
		}
		paramPos++;
	}
	while (format[formatPos] == 'z') formatPos++;
	return format[formatPos];
}

stock CheckFire(playerid)
{

    new Float: X1, Float: Y1, Float: Z1;
    new Float: X2, Float: Y2, Float: Z2;
    new Float: X3, Float: Y3, Float: Z3;
    new Float: X4, Float: Y4, Float: Z4;
    new Float: X5, Float: Y5, Float: Z5;
    new Float: X6, Float: Y6, Float: Z6;
    new Float: X7, Float: Y7, Float: Z7;
    new Float: X8, Float: Y8, Float: Z8;
    new Float: X9, Float: Y9, Float: Z9;
    new Float: X10, Float: Y10, Float: Z10;
    GetObjectPos(O_FIRE_1, X1, Y1, Z1);
    GetObjectPos(O_FIRE_2, X2, Y2, Z2);
    GetObjectPos(O_FIRE_3, X3, Y3, Z3);
    GetObjectPos(O_FIRE_4, X4, Y4, Z4);
    GetObjectPos(O_FIRE_5, X5, Y5, Z5);
    GetObjectPos(O_FIRE_6, X6, Y6, Z6);
    GetObjectPos(O_FIRE_7, X7, Y7, Z7);
    GetObjectPos(O_FIRE_8, X8, Y8, Z8);
    GetObjectPos(O_FIRE_9, X9, Y9, Z9);
    GetObjectPos(O_FIRE_10, X10, Y10, Z10);
    if(GetPlayerWeapon(playerid) == 42 && !IsPlayerInAnyVehicle(playerid))
    {
        if(IsPlayerInRangeOfPoint(playerid, 6.0, X1, Y1, Z1))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_1);
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        }
        if(IsPlayerInRangeOfPoint(playerid, 6.0, X2, Y2, Z2))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_2);
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        }
        if(IsPlayerInRangeOfPoint(playerid, 6.0, X3, Y3, Z3))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_3);
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        }

        if(IsPlayerInRangeOfPoint(playerid, 6.0, X4, Y4, Z4))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_4);
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        }
        if(IsPlayerInRangeOfPoint(playerid, 6.0, X5, Y5, Z5))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_5);
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        }
        if(IsPlayerInRangeOfPoint(playerid, 6.0, X6, Y6, Z6))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_6);
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        }
        if(IsPlayerInRangeOfPoint(playerid, 6.0, X7, Y7, Z7))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_7);
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        }
        if(IsPlayerInRangeOfPoint(playerid, 6.0, X8, Y8, Z8))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_8);
            PlayerPlaySound(playerid, 1056, 00, 0.0, 0.0);
        }
        if(IsPlayerInRangeOfPoint(playerid, 6.0, X9, Y9, Z9))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_9);
            PlayerPlaySound(playerid, 1056, 00, 0.0, 0.0);
        }
        if(IsPlayerInRangeOfPoint(playerid, 6.0, X10, Y10, Z10))
        {
            GameTextForPlayer(playerid, "+1 llama extinguida", 3000, 5);
            GivePlayerMoney(playerid, 50);
            DestroyObject(O_FIRE_10);
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        }
    }
}

// -= Sistema de Registro de Comandos =-
public LAnuncios(rango[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",rango);
	new File:hFile;
	hFile = fopen("Logs/Anuncios.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public LKick(rango[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",rango);
	new File:hFile;
	hFile = fopen("Logs/Kickeos.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public LBans(rango[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",rango);
	new File:hFile;
	hFile = fopen("Logs/Baneos.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public LBanco(rango[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",rango);
	new File:hFile;
	hFile = fopen("Logs/Transferencias.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public LPagos(rango[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",rango);
	new File:hFile;
	hFile = fopen("Logs/Pagos.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public LDudas(rango[])
{
	new entry[256];
	format(entry, sizeof(entry), "Logs\%s\n",rango);
	new File:hFile;
	hFile = fopen("Logs/Dudas.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public LReportes(rango[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",rango);
	new File:hFile;
	hFile = fopen("Logs/Reportes.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public LBugs(rango[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",rango);
	new File:hFile;
	hFile = fopen("Logs/Bugs.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

// -= Sistema de Canales =-
public MensajeAdmin(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Admin] >= 1 || Informacion[i][Admin] == 1339)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeLSPD(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == LSPD)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeLSMD(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == LSMD)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeTAXI(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == TAXI)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajePRES(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == PRES)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeLSTV(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == LSTV)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeLEON(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == LEON)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeMECA(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == MECA)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeFBI(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == FBI)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}


public MensajeTRAF(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == TRAF)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeLICE(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == LICE)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeYAKU(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == YAKU)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeNFS(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == NFS)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeBOMB(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == BOMB)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeAVION(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Faccion] == AVION)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}


public MensajePremium(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Premium] >= 1)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public MensajeGlobal(color, rango[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(Informacion[i][Canal] == 1)
		    {
				SendClientMessage(i, color, rango);
			}
		}
	}
}

public ProcesandoRol(playerid)
{
	new string[256];
	new PTRol = Informacion[playerid][ProcesoRol];
	if(Informacion[playerid][ProcesoRol] < 5)
	{
		format(string, sizeof(string), "* Lo siento, usted no alcanza el minimo de puntos de rol necesarios [%d/10]", PTRol);
		SendClientMessage(playerid, ROJO, string);
		Kick(playerid);
	}
	else if(Informacion[playerid][ProcesoRol] > 5)
	{
		new Rstring[64];
		if(Informacion[playerid][ProcesoRol] == 10) { Rstring = "Roleador Destacado"; }
		else if(Informacion[playerid][ProcesoRol] == 9) { Rstring = "Roleador Semi-Destacado"; }
		else if(Informacion[playerid][ProcesoRol] == 8) { Rstring = "Roleador con experiencia "; }
		else if(Informacion[playerid][ProcesoRol] == 7) { Rstring = "Roleador satisfactorio"; }
		else if(Informacion[playerid][ProcesoRol] == 6) { Rstring = "Roleador aceptale"; }
		else if(Informacion[playerid][ProcesoRol] == 5) { Rstring = "Roleador apenas aceptable"; }
		else { Rstring = "Roler"; }
		format(string, sizeof(string), "* Felicidades, su calificaci�n de rol ha superado los requisitos m�nimos [%d/10]", PTRol);
		SendClientMessage(playerid, VERDE, string);
		format(string, sizeof(string), "* Clasificaci�n: %s", Rstring);
		SendClientMessage(playerid, VERDE, string);
		TogglePlayerControllable(playerid,0);
		SetPlayerSkin(playerid, 26);
		SetPlayerPos(playerid, 373.8688,173.7772,1008.3893);
		SetPlayerCameraPos(playerid, 375.0311,172.6153,1007.4306);
		SetPlayerCameraLookAt(playerid, 373.8688,173.7772,1008.3893);
		SetPlayerFacingAngle(playerid, 270);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 3);
		SendClientMessage(playerid, AMARILLO, "�Necesitas ayuda con el registro?");
		SendClientMessage(playerid, BLANCO, "Oprime el bot�n C para retroceder o disminuir el valor de la edad.");
		SendClientMessage(playerid, BLANCO, "Oprime  la BARRA ESPACIADORA para saltar o aumentar el valor de edad.");
		SendClientMessage(playerid, BLANCO, "Una vez elegida la opci�n requerida, oprime el bot�n ENTER, hasta finalizar.");
		TextDrawShowForPlayer(playerid, R_Fondo);
		TextDrawShowForPlayer(playerid, R_Logo);
		TextDrawShowForPlayer(playerid, R_SEXO[playerid]);
		TextDrawShowForPlayer(playerid, R_EDAD[playerid]);
		TextDrawShowForPlayer(playerid, R_ORIGEN[playerid]);
		TextDrawShowForPlayer(playerid, R_STAR);
		TextDrawHideForPlayer(playerid, E_FONDO);
		TextDrawHideForPlayer(playerid, E_NOMBRE[playerid]);
		TextDrawHideForPlayer(playerid, E_TEXTO1[playerid]);
		TextDrawHideForPlayer(playerid, E_TEXTO2[playerid]);
		ProcesandoRegistro[playerid] = 1;
		ProcesoRegistracion[playerid] = 1;
		return 1;
	}
	return 0;
}

public OtherTimer()
{
	new string[256];
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(TransportTime[i] > 0)
		{
		    if(TransportTime[i] >= 16)
			{
				TransportTime[i] = 1;
				if(TransportDriver[i] < 999)
				{
					if(IsPlayerConnected(TransportDriver[i]))
					{
      					TransportCost[i] += TransportValue[TransportDriver[i]];
					    TransportCost[TransportDriver[i]] = TransportCost[i];
					}
				}
			}
		    TransportTime[i] += 1;
		    format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
		    GameTextForPlayer(i, string, 15000, 6);
		}
	}
	return 1;
}

// - Ejecutador
main()
{
	print("- Juego cargado con exito!");
	print(" ");
}


